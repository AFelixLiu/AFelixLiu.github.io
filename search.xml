<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>10、常用类</title>
    <url>/posts/6dc6173b/</url>
    <content><![CDATA[<h3 id="1-Object-类">1. Object 类</h3>
<blockquote>
<p>理论上 Object 类是所有类的父类，即直接或间接地继承 <code>java.lang.Object</code> 类。</p>
<p>由于所有的类都继承 Object 类，因此省略了 <code>extends Object</code> 关键字。</p>
</blockquote>
<p>Object 类中主要有以下方法:</p>
<ul>
<li><mark>toString()</mark></li>
<li><mark>getClass()</mark></li>
<li><mark>equals()</mark></li>
<li>clone()</li>
<li>finalize()</li>
<li>…</li>
</ul>
<h5 id="1-1-clone-方法">1.1 <code>clone()</code> 方法</h5>
<p>在 Java 语言中， clone() 方法被对象调用，用来复制对象。</p>
<blockquote>
<p>所谓的复制对象，即分配一个和源对象同样大小的空间，在这个空间中创建一个新的对象。</p>
</blockquote>
<p>在 Java 语言中，有以下两种方式创建对象：</p>
<ul>
<li>
<p>使用 new 操作符创建一个对象</p>
<blockquote>
<p>new 操作符的本意是分配内存。</p>
</blockquote>
<ol>
<li>程序执行到 new 操作符时， 首先去看 new 操作符后面的类型，需要分配多大的内存空间；</li>
<li>分配完内存之后，再调用构造函数，填充对象的各个域，这一步叫做对象的初始化；</li>
<li>构造方法返回后，一个对象创建完毕，可以把他的引用（地址）发布到外部，在外部就可以使用这个引用操纵这个对象。</li>
</ol>
</li>
<li>
<p>使用 clone() 方法复制一个对象</p>
<p>clone() 方法第一步与 new 类似，都是分配内存。</p>
<ol>
<li>
<p>调用clone方法时，分配的内存和源对象（即调用clone方法的对象）相同；</p>
</li>
<li>
<p>然后再使用源对象中对应的各个域，填充新对象的域；</p>
</li>
<li>
<p>填充完成之后，clone() 方法返回，一个新的相同的对象被创建，同样可以把这个新对象的引用发布到外部。</p>
</li>
</ol>
</li>
</ul>
<p><strong>clone</strong> 与 <strong>copy</strong> 的区别：</p>
<ul>
<li><strong>copy</strong> 只是简单复制了引用，两个对象都是指向内存同一个</li>
<li><strong>clone</strong> 会生成一个新的对象，并且与源对象具有相同的属性值和方法</li>
</ul>
<p><strong>深拷贝</strong>与<strong>浅拷贝</strong>：</p>
<p>Object 在对某个对象实施 Clone 时对其是一无所知的，它仅仅是简单地执行域对域的 copy，这就是<font color = blue>浅拷贝</font></p>
<ul>
<li>克隆类和原始类可能会共享一部分信息（原始类存在引用类型的变量）</li>
</ul>
<p>重写 clone() 方法，实现<font color = blue>深拷贝</font>，代码示例如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> <span class="keyword">implements</span> <span class="title class_">Cloneable</span> &#123;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">private</span> <span class="type">int</span> age ;</span><br><span class="line">	<span class="keyword">private</span> String name;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(<span class="type">int</span> age, String name)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>.age = age;</span><br><span class="line">		<span class="built_in">this</span>.name = name;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">Person</span><span class="params">()</span> &#123;&#125;</span><br><span class="line"> </span><br><span class="line">	<span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> age;</span><br><span class="line">	&#125;</span><br><span class="line"> </span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> name;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">protected</span> Object <span class="title function_">clone</span><span class="params">()</span> <span class="keyword">throws</span> CloneNotSupportedException &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> (Person)<span class="built_in">super</span>.clone();</span><br><span class="line">		<span class="keyword">return</span> person;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注意事项：</p>
<ul>
<li>使用 <code>clone()</code> 方法必须实现接口 Cloneable，默认实现的就是浅拷贝(引用拷贝)</li>
<li>如果想要深拷贝一个对象，这个对象必须要实现 Cloneable 接口，重写 <code>clone()</code> 方法，并且在 <code>clone()</code> 方法内部，把该对象引用的其他对象也要 clone 一份 ， 这就要求这个被引用的对象必须也要实现 Cloneable 接口并且实现 <code>clone()</code> 方法。</li>
<li>如果在拷贝一个对象时，要想让这个拷贝的对象和源对象完全彼此独立，那么在引用链上的每一级对象都要被显式的拷贝。</li>
<li><mark>String 存在于堆内存、常量池；这种比较特殊, 本身没有实现 Cloneable，传递是引用地址；由本身的 final 性, 每次赋值都是一个新的引用地址，原对象的引用和副本的引用互不影响。因此String就和基本数据类型一样,表现出了&quot;深拷贝&quot;特性。</mark></li>
</ul>
<blockquote>
<ul>
<li><a href="https://blog.csdn.net/zhangjg_blog/article/details/18369201#0-qzone-1-28144-d020d2d2a4e8d1a374a433f596ad1440">详解Java中的clone方法 – 原型模式</a></li>
<li><a href="https://blog.csdn.net/q258523454/article/details/88942478">Java浅拷贝和深拷贝(一文足矣)，及String类型的坑。</a></li>
</ul>
</blockquote>
<h5 id="1-2-toString-方法">1.2 <code>toString()</code> 方法</h5>
<p>POJO 类必须写 <code>toString</code> 方法。</p>
<h5 id="1-3-getClass-方法">1.3 <code>getClass()</code> 方法</h5>
<p>返回对象的类。</p>
<h5 id="1-4-finalize-方法">1.4 <code>finalize()</code> 方法</h5>
<p>用于实例被垃圾回收器回收时的触发的操作。</p>
<blockquote>
<p>当 GC (垃圾回收器) 确定不存在对该对象的有更多引用时，对象的垃圾回收器就会调用这个方法。</p>
</blockquote>
<p>工作原理：</p>
<p>一旦垃圾回收器准备好释放对象占用的存储空间，将首先调用其 <code>finalize()</code> 方法，并且在下一次垃圾回收动作发生时，才会真正回收对象占用的内存。</p>
<h5 id="1-5-equals-方法">1.5 <code>equals()</code> 方法</h5>
<p>用于比较两个对象是否相等。</p>
<blockquote>
<p><code>equals()</code> 方法比较两个对象，是判断两个对象引用指向的是同一个对象，即它只是检查两个对象是否指向内存中的同一个地址。</p>
</blockquote>
<p><code>Object</code> 类的 <code>equals()</code> 源码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">equals</span><span class="params">(Object obj)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (<span class="built_in">this</span> == obj);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如果希望不同内存但相同内容的两个对象使用 <code>equals()</code> 时返回 true，则需要重写父类的 <code>equal()</code>。String 类已经重写了 <code>Object</code> 类中的 <code>equals()</code>，比较内容是否相等。</p>
<p><code>String</code> 类的 <code>equals()</code> 源码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">equals</span><span class="params">(Object anObject)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span> == anObject) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (anObject <span class="keyword">instanceof</span> String) &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">anotherString</span> <span class="operator">=</span> (String)anObject;</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> value.length;</span><br><span class="line">        <span class="keyword">if</span> (n == anotherString.value.length) &#123;</span><br><span class="line">            <span class="type">char</span> v1[] = value;</span><br><span class="line">            <span class="type">char</span> v2[] = anotherString.value;</span><br><span class="line">            <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (n-- != <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (v1[i] != v2[i])</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>==</code> 和 <code>equals()</code> 比较：</p>
<ul>
<li><code>==</code> 是判断两个对象的<mark>内存地址</mark>是否相等，即判断是否是同一个对象。</li>
<li><code>equals()</code> 有两种情况：
<ol>
<li>第一种情况就是没有被重写的 <code>equals()</code> 方法，它就相当于通过 <code>==</code> 去比较；</li>
<li>第二种情况是重写了的 <code>equals()</code> 方法，一般重写后都是去比较两个对象的内容（或者说属性）是否相等，具体看重写的方法。</li>
</ol>
</li>
</ul>
<h5 id="1-6-hashCode-方法">1.6 <code>hashCode()</code> 方法</h5>
<p>用于获取对象的 hash 值（是一个整数，表示在哈希表中的位置）</p>
<p><strong>如果两个对象相等，那么它们的 hashCode 值一定要相等</strong></p>
<blockquote>
<p>想象一下，假如两个 Java 对象 A 和 B，A 和 B 相等（<code>eqauls()</code> 结果为 true），但 A 和 B 的 hashCode不同，则 A 和 B 存入 HashMap 时的哈希码计算得到的 HashMap 内部数组位置索引可能不同，那么 A 和 B 很有可能允许同时存入 HashMap，显然相等 / 相同的元素是不允许同时存入 HashMap，HashMap 不允许存放重复元素。</p>
</blockquote>
<p><strong>不同对象的 hashCode 可能相同</strong></p>
<blockquote>
<p>假如两个 Java 对象 A 和 B，A 和 B 不相等（<code>eqauls()</code> 结果为 false），但 A 和 B 的 hashCode 相等，将 A 和 B 都存入 HashMap 时会发生哈希冲突，也就是 A 和 B 存放在 HashMap 内部数组的位置索引相同，这时 HashMap 会在该位置建立一个链接表，将 A 和 B 串起来放在该位置，显然，该情况不违反 HashMap 的使用原则，是允许的。当然，<font color = blue>哈希冲突越少越好，尽量采用好的哈希算法以避免哈希冲突。</font></p>
</blockquote>
<p><strong>hashCode 不同的对象一定不相等</strong></p>
<p><font color = red>如果子类重写了 equals() 方法，就需要重写 <code>hashCode()</code>方法</font>。比如 String 类就重写了 <code>equals()</code> 方法，同时也重写了 <code>hashCode()</code> 方法。</p>
<blockquote>
<p>因为当你需要将对象存入到底层为散列表结构的集合中时，是先判断 hashcode 值，碰到相同值时再通过 <code>equals()</code> 进一步判断。<code>hashCode()</code> 和 <code>equals()</code> 两个方法用来协同判断两个对象是否相等的，采用这种方式的原因是可以提高程序插入和查询的速度。如果在重写 <code>equals()</code> 时，不重写 <code>hashCode()</code>，就会导致在某些场景下，例如将两个相等的自定义对象存储在 Set 集合时，如果只重写了 equals 方法，那么默认情况下，Set 进行去重操作时，会先判断两个对象的 hashCode 是否相同，此时因为没有重写 hashCode 方法，所以会直接执行 Object 中的 hashCode 方法，而 Object 中的 hashCode 方法对比的是两个不同引用地址的对象，所以结果是 false，那么 equals 方法就不用执行了，直接返回的结果就是 false：两个对象不是相等的，于是就在 Set 集合中插入了两个相同的对象；但是，如果在重写 equals 方法时，也重写了 hashCode 方法，那么在执行判断时会去执行重写的 hashCode 方法，此时对比的是两个对象的所有属性的 hashCode 是否相同，于是调用 hashCode 返回的结果就是 true，再去调用 equals 方法，发现两个对象确实是相等的，于是就返回 true 了，因此 Set 集合就不会存储两个一模一样的数据了，于是整个程序的执行就正常了。</p>
<p><font color = blue>但这其实是针对当该类会在HashSet, Hashtable, HashMap等等这些本质是散列表的数据结构中用到的时候这种情况。</font></p>
</blockquote>
<blockquote>
<p><a href="https://www.cnblogs.com/Qian123/p/5703507.html#_label1">Java提高篇——equals()与hashCode()方法详解</a></p>
<p><a href="https://cloud.tencent.com/developer/article/1910930">面试官：重写 equals 时为什么一定要重写 hashCode？</a></p>
</blockquote>
<hr>
<h5 id="1-7-wait-方法及其重载">1.7 <code>wait()</code> 方法及其重载</h5>
<ol>
<li>
<p><code>wait()</code> 方法</p>
<blockquote>
<p>让当前线程进入等待状态（直到其它线程调用此对象的 <code>notify()</code> 方法或 <code>notifyAll()</code> 方法）</p>
</blockquote>
</li>
<li>
<p><code>wait(long timeout)</code> 方法</p>
<blockquote>
<p>让当前线程处于等待（阻塞）状态，直到其他线程调用此对象的 <code>notify()</code> 方法或 <code>notifyAll()</code>方法，或者超过参数 timeout 设置的超时时间。</p>
<ul>
<li>如果 timeout 参数为 0，则不会超时，会一直进行等待</li>
<li>timeout - 等待时间，以毫秒为单位</li>
</ul>
</blockquote>
</li>
<li>
<p><code>wait(long timeout, int nanos)</code> 方法</p>
<blockquote>
<p>与 <code>wait(long timeout)</code> 方法类似，多了一个 nanos 参数，这个参数表示额外时间（以纳秒为单位，范围是 0-999999）</p>
</blockquote>
</li>
</ol>
<p>注意事项：</p>
<ul>
<li><font color = red>当前线程必须是此对象的监视器所有者</font>，否则会发生 <strong>IllegalMonitorStateException</strong> 异常。</li>
<li>如果当前线程在等待之前或在等待时被任何线程中断，则会抛出 <strong>InterruptedException</strong> 异常。</li>
<li>如果传递的参数不合法，则会抛出 <strong>IllegalArgumentException</strong> 异常。</li>
</ul>
<h5 id="1-8-notify-方法">1.8 <code>notify()</code> 方法</h5>
<p>用于唤醒在该对象上等待的<mark>某个</mark>线程</p>
<ul>
<li>如果所有的线程都在此对象上等待，那么只会选择一个线程，选择是任意性的，并在对实现做出决定时发生。</li>
<li><code>notify()</code> 方法只能被<font color = blue>作为此对象监视器的所有者的线程</font>来调用。</li>
</ul>
<p>一个线程要想成为对象监视器的所有者，可以使用以下 3 种方法：</p>
<ul>
<li>执行对象的同步实例方法</li>
<li>使用 synchronized 内置锁</li>
<li>对于 Class 类型的对象，执行同步静态方法</li>
</ul>
<p>一次只能有一个线程拥有对象的监视器。</p>
<p>一个线程在对象监视器上等待可以调用 wait() 方法。</p>
<h5 id="1-9-notifyAll-方法">1.9 <code>notifyAll()</code> 方法</h5>
<p>用于唤醒在该对象上等待的<mark>所有</mark>线程</p>
<p><font color = orange>等待/通知机制，是指线程 A 调用了对象 O 的 <code>wait()</code> 方法进入等待状态，而线程 B 调用了对象 O 的 <code>notify()</code> / <code>notifyAll()</code> 方法，线程 A 收到通知后退出等待队列，进入可运行状态，进而执行后续操作。上述两个线程通过对象O来完成交互，而对象上的 <code>wait()</code> 方法和 <code>notify()</code> / <code>notifyAll()</code> 方法的关系就如同开关信号一样，用来完成等待方和通知方之间的交互工作。</font></p>
<hr>
<h3 id="2-包装类">2. 包装类</h3>
<p>Java 为每种基本数据类型分别设计了对应的类，称之为包装类 (Wrapper Classes)。</p>
<table>
<thead>
<tr>
<th>基本数据类型</th>
<th>对应的包装类</th>
</tr>
</thead>
<tbody>
<tr>
<td>byte</td>
<td>Byte</td>
</tr>
<tr>
<td>short</td>
<td>Short</td>
</tr>
<tr>
<td>int</td>
<td>Integer</td>
</tr>
<tr>
<td>long</td>
<td>Long</td>
</tr>
<tr>
<td>float</td>
<td>Float</td>
</tr>
<tr>
<td>double</td>
<td>Double</td>
</tr>
<tr>
<td>char</td>
<td>Character</td>
</tr>
<tr>
<td>boolean</td>
<td>Boolean</td>
</tr>
</tbody>
</table>
<img src="/posts/6dc6173b/OOP_WrapperClass.png" class="">
<blockquote>
<ul>
<li>所有的包装类 (Byte, Short, Integer, Long, Float, Double) 都是抽象类 <strong>Number</strong> 的子类。</li>
<li>每个包装类的对象可以封装一个相应的基本类型的数据，并提供了其它一些有用的方法。</li>
<li><font color = red>包装类对象一经创建，其内容（所封装的基本类型数据值）不可改变。</font></li>
</ul>
</blockquote>
<p>基本类型和对应的包装类可以相互装换：</p>
<ul>
<li>
<p>由基本类型向对应的包装类转换称为装箱</p>
<ol>
<li>使用 <code>valueOf()</code> 方法将基本类型转换为相应的包装类对象，如：<code>Integer obj = Integer.valueOf(6);</code></li>
<li>Java 编译器可以直接将基本类型转换为相应的对象<font color = blue>（自动装箱）</font>，如：<code>Integer obj = 6;</code></li>
<li>使用包装类 (Wrapper) 构造函数将基本类型转换为包装对象。<mark>（但是在 Java 9 之后，不再使用构造函数）</mark></li>
</ol>
</li>
<li>
<p>包装类向对应的基本类型转换称为拆箱</p>
<ol>
<li>
<p>使用每个包装类中对应的值方法（ <code>intValue()</code>、<code>doubleValue()</code> 等）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Integer</span> <span class="variable">obj</span> <span class="operator">=</span> <span class="number">6</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> obj.intValue();</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>Java 编译器可以自动将对象转换为相应的原始类型<font color = blue>（自动拆箱）</font></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Integer</span> <span class="variable">obj</span> <span class="operator">=</span> <span class="number">6</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> obj;</span><br></pre></td></tr></table></figure>
</li>
</ol>
</li>
</ul>
<p>特别地，</p>
<ol>
<li>
<p>将字符串转换为整数</p>
<p>Integer 类有一个静态的 <code>parseInt()</code> 方法，可以将<mark>纯数字字符串</mark>转换为整数</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> Integer.parseInt(String s, <span class="type">int</span> radix); <span class="comment">// s 表示字符串，radix 表示进制，默认为 10</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>将整数转化为字符串</p>
<ol>
<li><code>toString()</code> 方法，如：<code>String str = Integer.toString(666);</code></li>
<li>直接在整数后面加空字符串</li>
</ol>
</li>
</ol>
<blockquote>
<p>基本类型比相应的对象更有效，当需要效率时，总是建议使用基本类型。</p>
</blockquote>
<h3 id="3-Math-类">3. Math 类</h3>
<h5 id="3-1-常量值">3.1 常量值</h5>
<ul>
<li>
<p>Math.E</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">double</span> <span class="variable">E</span> <span class="operator">=</span> <span class="number">2.7182818284590452354</span>;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>Math.PI</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">double</span> <span class="variable">PI</span> <span class="operator">=</span> <span class="number">3.14159265358979323846</span>;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="3-2-Math-exp-方法">3.2 Math.exp() 方法</h5>
<p>用于返回自然数底数 e 的参数次方</p>
<h5 id="3-3-Math-pow-方法">3.3 Math.pow() 方法</h5>
<p>用于返回第一个参数的第二个参数次方</p>
<h5 id="3-4-Math-sqrt-方法">3.4 Math.sqrt() 方法</h5>
<p>用于返回参数的算术平方根</p>
<h5 id="3-5-Math-cbrt-方法">3.5 Math.cbrt() 方法</h5>
<p>用于返回参数的立方根</p>
<h5 id="3-6-Math-ceil-方法">3.6 Math.ceil() 方法</h5>
<p>对一个数进行<mark>上舍入</mark>，返回值大于或等于给定的参数，类型为 double 型</p>
<ul>
<li>个人理解：<font color = blue>假设一个坐标轴，给定的参数为上面一点，返回的是给定参数的<font color = red>右边部分的最左端</font>的整数值</font></li>
</ul>
<h5 id="3-7-Math-floor-方法">3.7 Math.floor() 方法</h5>
<p>对一个数进行<mark>下舍入</mark>，返回值小于或等于给定的参数，类型为 double 型</p>
<ul>
<li>个人理解：<font color = blue>假设一个坐标轴，给定的参数为上面一点，返回的是给定参数的<font color = red>左边部分的最右端</font>的整数值</font></li>
</ul>
<h5 id="3-8-Math-rint-方法">3.8 Math.rint() 方法</h5>
<p>返回最接近参数的整数值<font color = red>（如果有 2 个数同样接近，则会返回偶数的那个）</font></p>
<h5 id="3-9-Math-round-方法">3.9 Math.round() 方法</h5>
<p>“四舍五入”：</p>
<ul>
<li>
<p>参数为正数：小数部分 ≥0.5 时，整数取值向右一个整数，即+1。</p>
</li>
<li>
<p>参数为负数：小数部分 ≤0.5 时，取值右侧的整数。</p>
</li>
</ul>
<p>注意事项：</p>
<ul>
<li>参数为 float 型时返回 int 型值</li>
<li>参数为 double 型时返回 long 型值</li>
</ul>
<h5 id="3-10-Math-random-方法">3.10 Math.random() 方法</h5>
<p>用于返回一个随机数，随机数范围为 <code>0.0 =&lt; Math.random &lt; 1.0</code></p>
<h3 id="4-Random-类">4. Random 类</h3>
<p>Random 类共有两种构造方法：</p>
<ol>
<li>
<p><code>Random()</code></p>
<blockquote>
<p>此构造方法是以系统自身的时间为种子数来构造 Random 对象。</p>
</blockquote>
</li>
<li>
<p><code>Random(long)</code></p>
<blockquote>
<p>此构造方法可以自己来选定具体的种子来构造 Random 对象。</p>
</blockquote>
</li>
</ol>
<p><font color = red>虽然 Random 类产生的数字是随机的，但在相同种子数（seed）下的相同次数产生的随机数是相同的（伪随机）。</font></p>
<h3 id="5-Date-类">5. Date 类</h3>
<p>封装当前的日期和时间。</p>
<p>Date 类提供两个构造函数来实例化 Date 对象：</p>
<ol>
<li>
<p><code>Date()</code></p>
<blockquote>
<p>使用当前日期和时间来初始化对象。</p>
</blockquote>
</li>
<li>
<p><code>Date(long)</code></p>
<blockquote>
<p>接收一个参数，该参数是自 1970 年 1 月 1 日 00:00:00 GMT 以来的毫秒。</p>
</blockquote>
</li>
</ol>
<p><code>getTime()</code> 方法</p>
<blockquote>
<p>返回自 1970 年 1 月 1 日 00:00:00 GMT 以来此 Date 对象表示的毫秒数。</p>
</blockquote>
<p><strong>格式化日期</strong></p>
<ul>
<li>
<p>使用 SimpleDateFormat 类</p>
<p>代码片段示例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line"><span class="type">SimpleDateFormat</span> <span class="variable">sdf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd hh:mm:ss&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;当前时间为: &quot;</span> + ft.format(date));</span><br></pre></td></tr></table></figure>
<p><font color = blue>SimpleDateFormat 类的 <code>parse()</code> 方法能够按照给定的 SimpleDateFormat 对象的格式化存储来解析字符串</font></p>
<blockquote>
<p>更多有关 SimpleDateFormat 类内容详见：<a href="https://www.runoob.com/java/java-date-time.html">Java 日期时间 | 菜鸟教程 (runoob.com)</a></p>
</blockquote>
</li>
<li>
<p>使用 <code>printf()</code> 方法</p>
<p>使用两个字母格式，以 <strong>%t</strong> 开头</p>
<blockquote>
<p>更多有关 <code>printf()</code> 方法内容详见：<a href="https://www.runoob.com/java/java-date-time.html">Java 日期时间 | 菜鸟教程 (runoob.com)</a></p>
</blockquote>
</li>
</ul>
<p><code>sleep()</code> 使当前线程进入停滞状态（阻塞当前线程）</p>
<h3 id="6-Calendar-类">6. Calendar 类</h3>
<blockquote>
<p>Calendar 类是一个抽象类，在实际使用时实现特定的子类的对象，创建对象的过程对程序员来说是透明的，只需要使用 <code>getInstance()</code> 方法创建即可。</p>
</blockquote>
<ul>
<li>
<p>创建一个代表系统当前日期的 Calendar 对象</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Calendar</span> <span class="variable">c</span> <span class="operator">=</span> Calendar.getInstance();</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>创建一个指定日期的 Calendar 对象</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Calendar</span> <span class="variable">c</span> <span class="operator">=</span> Calendar.getInstance();</span><br><span class="line">c.set(<span class="type">int</span> field, <span class="type">int</span> value); <span class="comment">// 第一种</span></span><br><span class="line">c.set(<span class="type">int</span> year, <span class="type">int</span> month, <span class="type">int</span> date); <span class="comment">// 第二种</span></span><br><span class="line">c.set(<span class="type">int</span> year, <span class="type">int</span> month, <span class="type">int</span> date, <span class="type">int</span> hourOfDay, <span class="type">int</span> minute); <span class="comment">// 第三种</span></span><br><span class="line">c.set(<span class="type">int</span> year, <span class="type">int</span> month, <span class="type">int</span> date, <span class="type">int</span> hourOfDay, <span class="type">int</span> minute, <span class="type">int</span> second); <span class="comment">// 第四种</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><strong>注意事项：</strong></p>
<ul>
<li>
<p>Calendar 类的月份是从 0 开始的</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Calendar</span> <span class="variable">c</span> <span class="operator">=</span> Calendar.getInstance();</span><br><span class="line">c.set(<span class="number">2024</span>, <span class="number">2</span> - <span class="number">1</span>, <span class="number">27</span>, <span class="number">10</span>, <span class="number">57</span>); <span class="comment">// 2 - 1 表示 2 月份</span></span><br><span class="line">System.out.println(c.getTime());</span><br><span class="line">System.out.println(c.get(Calendar.MONTH) + <span class="number">1</span>); <span class="comment">// + 1 还原本来的月份值</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>Calendar 类的 DAY_OF_WEEK 是从星期日开始的</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Calendar</span> <span class="variable">c</span> <span class="operator">=</span> Calendar.getInstance();</span><br><span class="line">c.set(<span class="number">2024</span>, <span class="number">2</span> - <span class="number">1</span>, <span class="number">27</span>, <span class="number">10</span>, <span class="number">57</span>);</span><br><span class="line">System.out.println(c.getTime());</span><br><span class="line">System.out.println(c.get(Calendar.DAY_OF_WEEK) - <span class="number">1</span>); <span class="comment">// - 1 还原本来的星期值</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>将日期设为 0 以后，月份将变成了上个月，但月份可以为0</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Calendar</span> <span class="variable">c</span> <span class="operator">=</span> Calendar.getInstance();</span><br><span class="line">c.set(<span class="number">2024</span>, <span class="number">2</span> - <span class="number">1</span>, <span class="number">0</span>); <span class="comment">// 结果为 1 月 31 日</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>常用 Calendar 类对象字段类型</p>
<table>
<thead>
<tr>
<th>常量</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>Calendar.YEAR</td>
<td>年份</td>
</tr>
<tr>
<td>Calendar.MONTH</td>
<td>月份</td>
</tr>
<tr>
<td>Calendar.DATE</td>
<td>日期</td>
</tr>
<tr>
<td>Calendar.DAY_OF_MONTH</td>
<td>日期，和 Calendar.DATE 意义完全相同</td>
</tr>
<tr>
<td>Calendar.HOUR</td>
<td>12 小时制的小时</td>
</tr>
<tr>
<td>Calendar.HOUR_OF_DAY</td>
<td>24 小时制的小时</td>
</tr>
<tr>
<td>Calendar.MINUTE</td>
<td>分钟</td>
</tr>
<tr>
<td>Calendar.SECOND</td>
<td>秒</td>
</tr>
<tr>
<td>Calendar.DAY_OF_WEEK</td>
<td>星期几</td>
</tr>
</tbody>
</table>
<p>Calendar 类的 <code>add(int field, int amount)</code> 方法在可以给定的日历字段中增加或减去指定的时间量</p>
<p>Calendar 的 <code>getInstance()</code> 方法返回一个默认用当前的语言环境和时区初始化的 <font color = blue>GregorianCalendar</font> 对象。</p>
<ul>
<li>特别地，GregorianCalendar 类中含有一个 <code>isLeapYear(int year)</code> 方法，用于确定给定的年份是否为闰年。</li>
</ul>
<h3 id="7-String-类">7. String 类</h3>
<p>String 为<mark>字符串常量</mark>。即：String 对象创建后是不可以更改的（改变的只是地址，<font color = red>原来的字符串还是存在的</font>，并且产生垃圾）。</p>
<p>举例说明：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;Hello &quot;</span>;</span><br><span class="line">str += <span class="string">&quot;World &quot;</span>;</span><br><span class="line">str = str+ <span class="string">&quot;!!!&quot;</span>;</span><br><span class="line">System.out.println(str); <span class="comment">// 输出结果为：Hello World !!!</span></span><br></pre></td></tr></table></figure>
<img src="/posts/6dc6173b/Junk_Space.png" class="">
<p><font color = orange>String 底层使用一个字符数组来维护，String 类的值是 final 类型的，不能被改变</font>，<font color = red>只要一个值改变就会生成一个新的 String 类型对象。</font></p>
<blockquote>
<p><em>String 类的构造方法详见源码</em></p>
</blockquote>
<p><strong>常量池</strong></p>
<ol>
<li>
<p>Class 常量池</p>
<ul>
<li>Class 常量池在 <font color = red>.class</font> 文件中，用于存放编译器生成的各种字面量（Literal）和符号引用（Symbolic References）
<ul>
<li>字面量包括：文本字符串、基本数据类型的值、被声明为 final 的常量等；</li>
<li>符号引用包括：类和接口的全限定名、字段名称和描述符、方法名称和描述符。</li>
</ul>
</li>
<li>每个 .class 文件都有一个 Class 常量池</li>
</ul>
<blockquote>
<p>Class 文件中除了有类的版本、字段、方法、接口等描述信息外，还有一项信息是<mark>常量池表（Constant Pool Table）</mark>，用于存放编译期生成的各种字面量与符号引用，这部分内容将在类加载后存放到<font color = blue>方法区的运行时常量池</font>中。</p>
</blockquote>
</li>
<li>
<p>运行时常量池</p>
<p>运行时常量池是 Class 常量池被加载到内存之后的版本，每个 Class 对应一个运行时常量池</p>
<ul>
<li>字面量可以动态的添加（通过 String 类的 <code>intern()</code> 方法)</li>
<li>符号引用可以被解析为直接引用</li>
<li><font color = purple>运行时常量池包含字符串常量池和其它运行时常量</font></li>
</ul>
</li>
<li>
<p>字符串常量池</p>
<ul>
<li>字符串池在JDK 1.7 之后被分离到堆区</li>
<li>字符串常量池是 JVM 实例全局共享的，全局只有一个，存放的是字符串常量的引用值</li>
<li><mark>字符串常量池中的字符串只存在一份！</mark>（字符串常量池的好处就是减少相同内容字符串的创建，节省内存空间）</li>
</ul>
</li>
</ol>
<blockquote>
<ul>
<li>JDK1.6：运行时常量池、字符串常量池是在<strong>方法区</strong>内</li>
<li>JDK1.8：元空间（metaspace）成为方法区的新实现，运行时常量池、字符串常量池被移动到<strong>堆</strong>中。</li>
</ul>
</blockquote>
<p><strong>创建字符串对象方式：</strong></p>
<blockquote>
<p><a href="https://blog.csdn.net/qq_32625839/article/details/82634076">Java 中 String 创建对象过程及其运算原理</a></p>
<p><a href="https://blog.csdn.net/yuiop123455/article/details/107242285">String 创建字符串的几种方式，以及在内存中的情况（JAVA）</a></p>
<p><a href="https://www.joshua317.com/article/242">Java 中创建 String 对象的两种方式</a></p>
</blockquote>
<ol>
<li>
<p><font color = green>直接赋值</font>方式创建，对象是在<font color = red>字符串常量池</font></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;hello&quot;</span>;</span><br></pre></td></tr></table></figure>
<p>通过直接赋值方式创建字符串对象时，JVM 首先会对这个字符串进行检查，如果字符串常量池中存在相同内容的字符串对象的引用，则将这个引用返回；如果不存在，则在字符串常量池中创建该字符串对象并且返回引用。</p>
</li>
<li>
<p><font color = green>通过构造方法</font>创建，字符串对象是在<font color = red>堆内存</font></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在 new String 对象的时候，</span></span><br><span class="line"><span class="comment"> * 1.如果所需字符串在创建对象之前，就在常量池中已经存在了，那么：</span></span><br><span class="line"><span class="comment"> *     1.1 在堆里面创建一个对象，把字符串名指向这个对象；</span></span><br><span class="line"><span class="comment"> *     1.2 把这个对象的成员变量 value[] 的值指向常量池中的对象。</span></span><br><span class="line"><span class="comment"> * 2.如果所需字符串创建对象之前，在常量池中不存在：</span></span><br><span class="line"><span class="comment"> *     2.1 在堆里面创建一个对象，把字符串名指向这个对象；</span></span><br><span class="line"><span class="comment"> *     2.2 而常量池中没有值为所需字符串的对象，于是进行创建；</span></span><br><span class="line"><span class="comment"> *     2.3 然后字符串名指向的对象的成员变量 value[] 指向常量池值为&quot;hello&quot;这个对象就行了。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;hello&quot;</span>); </span><br></pre></td></tr></table></figure>
<p>通过构造方法来构造字符串对象时，不管字符串常量池中有没有相同内容的对象的引用，新的字符串对象都会创建。</p>
<ul>
<li>使用构造方法进行 String 类对象实例化，产生的对象不会保存在对象池中，此对象无法重用。如果想将这个对象的引用加入到字符串常量池，只能通过手工入池方法完成：<code>public native String intern();</code> 。<code>intern()</code> 方法用于<mark>在运行时</mark>将字符串添加到内部的字符串池中。调用 <code>intern()</code> 后，首先检查字符串常量池中是否有该对象的引用，如果存在，则将这个引用返回给变量，否则将引用加入并返回给变量。</li>
</ul>
</li>
</ol>
<p>注意事项：</p>
<ol>
<li><font color = blue>实际开发中都是采用<mark>直接赋值</mark>方式，并且不要频繁修改，因为会产生垃圾空间；</font></li>
<li><font color = blue>开发中，在比较字符串内容是否相同时，一般将常量写在前面，这样避免 <code>equals()</code> 前面的字符串内容为 null，<code>equals()</code> 方法本身具有 null 判断的功能。</font></li>
</ol>
<p><strong>String 类常用方法：</strong></p>
<img src="/posts/6dc6173b/String_Common_Method.png" class="">
<p>特别地，<code>trim()</code> 方法用于删除字符串的<mark>头部和尾部</mark>空白，不包括字符串中间的空白。</p>
<p><strong>StringBuilder 和 StringBuffer 类</strong></p>
<p>当对字符串进行修改的时候，需要使用 StringBuilder 和 StringBuffer 类。</p>
<blockquote>
<p>和 String 类不同的是，StringBuffer 和 StringBuilder 类的对象能够被多次的修改，并且不产生新的未使用对象。</p>
</blockquote>
<img src="/posts/6dc6173b/Java_String.png" class="">
<blockquote>
<p><em>StringBuilder 和 StringBuffer 类的 API详见源码</em></p>
</blockquote>
<ul>
<li>StringBuilder 和 StringBuffer 类的容量（capacity） 默认为 16，可以通过构造函数指定容量；如果通过构造函数传入的是字符串或是字符序列，那么 capacity 大小在字符串长度的基础上再加 16。</li>
</ul>
<p><strong>String、StringBuffer 和 StringBuilder 之间的区别</strong>：</p>
<ul>
<li>
<p>String 为字符串常量；StringBuffer、StringBuilder 均为字符串<mark>变量</mark>。</p>
</li>
<li>
<p>执行速度比较：StringBuilder &gt; StringBuffer &gt; String（大多数情况下）</p>
<blockquote>
<p>StringBuffer 和 StringBuilder 对象是变量，对变量操作就是对对象进行直接操作，不会进行创建，删除操作。因此在某些情况下 String 的执行速度是比较慢的，因为操作 String 对象时可能会有删除、新建操作。</p>
</blockquote>
</li>
<li>
<p>在线程安全方面，StringBuffer 中很多方法都被 synchronized 关键字修饰，所以可以保证线程是安全的。</p>
<ul>
<li>如果要进行的操作是多线程的，那么就要使用 StringBuffer；</li>
<li>但是在单线程的情况下，建议使用速度比较快的 StringBuilder。</li>
</ul>
</li>
</ul>
<p>总结：</p>
<ul>
<li>String 适合在少量字符串操作的情况下使用；</li>
<li>StringBuilder 适合<font color = blue>单线程</font>下在字符缓冲区进行大量操作的情况；</li>
<li>StringBuffer 适合<font color = blue>多线程</font>下在字符缓冲区进行大量操作的情况。</li>
</ul>
<h3 id="8-File-类">8. File 类</h3>
<blockquote>
<p>Java 文件类以抽象的方式代表文件名和目录路径名。该类主要用于文件和目录的创建、文件的查找和文件的删除等。</p>
</blockquote>
<ul>
<li>File 对象代表磁盘中实际存在的文件和目录。</li>
</ul>
<p><strong>构造方法：</strong></p>
<ol>
<li>
<p><code>File(String pathname, int prefixLength)</code></p>
</li>
<li>
<p><code>File(String child, File parent)</code></p>
</li>
<li>
<p><code>File(String pathname)</code></p>
<blockquote>
<p>通过将给定路径名字符串转换成抽象路径名来创建一个新 File 实例</p>
</blockquote>
</li>
<li>
<p><code>File(String parent, String child)</code></p>
<blockquote>
<p>根据 parent 路径名字符串和 child 路径名字符串创建一个新 File 实例</p>
</blockquote>
</li>
<li>
<p><code>File(File parent, String child)</code></p>
<blockquote>
<p>通过给定的父抽象路径名和子路径名字符串创建一个新的 File 实例</p>
</blockquote>
</li>
<li>
<p><code>File(URI uri)</code></p>
<blockquote>
<p>通过将给定的 file: URI 转换成一个抽象路径名来创建一个新的 File 实例</p>
</blockquote>
</li>
</ol>
<p><strong>常用方法：</strong></p>
<ol>
<li>
<p>获取方法</p>
<ul>
<li>
<p><code>public String getAbsolutePath()</code> — 返回 File 的绝对路径名字符串</p>
<ul>
<li><code>public String getPath()</code> — 将此 File 转换为路径名字符串，获取构造路径</li>
<li><code>public String getName()</code> — 返回此 File 表示的文件或目录的名称</li>
<li><code>public long length()</code> — 返回此 File 表示的文件的字节大小</li>
</ul>
</li>
</ul>
</li>
<li>
<p>判断方法</p>
<ul>
<li><code>public boolean exists()</code> — 判断此 File 标识的文件或目录是否实际存在</li>
<li><code>public boolean isDirectory()</code> — 判断此 File 标识的是否为文件夹</li>
<li><code>public boolean isFile()</code> — 判断此 File 表示的是否为文件</li>
</ul>
</li>
<li>
<p>创建和删除方法</p>
<ul>
<li><code>public boolean creatNewFile()</code> — 当且仅当不存在该名称的文件时，创建一个新的空<mark>文件</mark></li>
<li><code>public boolean mkdir()</code> — 创建由 File 表示的<mark>目录</mark></li>
<li><code>public boolean mkdirs()</code> — 创建由 File 表示的<mark>目录</mark>，包括任何必须但不存在的父目录</li>
<li><code>public boolean delete()</code> — 删除由此 File 表示的文件或目录<font color = blue>（只能删除文件或者空文件夹，不能删除非空文件夹）</font></li>
</ul>
</li>
<li>
<p>遍历目录方法</p>
<ul>
<li><code>public String[] list()</code> — 返回一个 String 数组，表示该 File 目录中的所有子文件或目录的名称</li>
<li><code>public File[] listFiles()</code> — 返回一个 File 数组，表示 File 目录中的所有子文件或目录的路径</li>
</ul>
</li>
</ol>
<p>注意事项：</p>
<ol>
<li>一个 File 对象代表的是硬盘中的一个路径或者一个文件</li>
<li>无论该路径下是否存在文件或目录，都不影响 File 对象的创建</li>
</ol>
]]></content>
      <categories>
        <category>Java 学习</category>
      </categories>
  </entry>
  <entry>
    <title>11、集合框架</title>
    <url>/posts/ce8ed1d4/</url>
    <content><![CDATA[<h3 id="1-为什么使用集合框架">1. 为什么使用集合框架</h3>
<blockquote>
<p>如果并不知道程序运行时会需要多少对象，或者需要更复杂的方式存储对象，那我们就可以使用 Java 的集合框架！</p>
</blockquote>
<h3 id="2-集合框架包含的内容">2. 集合框架包含的内容</h3>
<blockquote>
<p>Java 集合框架提供了一套性能优良，使用方便的接口和类，Java 集合框架位于 <code>java.util</code> 包中</p>
</blockquote>
<img src="/posts/ce8ed1d4/Collection_Framework.gif" class="">
<p>Java 集合框架主要包括两种类型的容器：</p>
<ul>
<li>
<p>集合（Collection），存储一个元素集合</p>
<blockquote>
<p><font color = blue>Collection 接口</font>有 3 种<font color = blue>子接口，List、Set 和 Queue</font>，再下面是一些<font color = blue>抽象类</font>，最后是<font color = blue>具体实现类</font></p>
</blockquote>
</li>
<li>
<p>图（Map），存储键/值对映射</p>
</li>
</ul>
<p>集合框架是一个用来代表和操纵集合的统一架构。所有的集合框架都包含如下内容：</p>
<ul>
<li>
<p><strong>接口：</strong> 代表集合的抽象数据类型</p>
<blockquote>
<p>例如 Collection、List、Set、Map 等。之所以定义多个接口，是为了以不同的方式操作集合对象。</p>
</blockquote>
</li>
<li>
<p><strong>实现（类）：</strong> 集合接口的具体实现</p>
<blockquote>
<p>从本质上讲，它们是可重复使用的数据结构，例如：ArrayList、LinkedList、HashSet、HashMap。</p>
</blockquote>
</li>
<li>
<p><strong>算法：</strong> 实现集合接口的对象里的方法执行的一些有用的计算</p>
<blockquote>
<p>例如：搜索和排序，这些算法实现了多态，那是因为相同的方法可以在相似的接口上有着不同的实现。</p>
</blockquote>
</li>
</ul>
<p>集合框架体系如图所示：</p>
<img src="/posts/ce8ed1d4/Collection_Framework_System.png" class="">
<p><strong>常见的集合接口：</strong></p>
<ul>
<li>Collection 接口
<ul>
<li>存储一组<font color = red>不唯一、无序</font>的对象</li>
<li>Java 不提供直接继承自Collection的类，只提供继承于 Collection 的子接口（如List和set）</li>
</ul>
</li>
<li>List 接口
<ul>
<li>存储一组<font color = red>不唯一，有序</font>的对象</li>
<li>动态增长，根据实际存储的数据的长度自动增长 List 的长度</li>
<li>查找元素效率高</li>
<li>插入删除效率低，因为会引起其他元素位置改变</li>
</ul>
</li>
<li>Set 接口
<ul>
<li>存储一组<font color = red>唯一，无序</font>的对象</li>
<li>检索效率低下</li>
<li>删除和插入效率高，插入和删除不会引起元素位置改变</li>
</ul>
</li>
<li>Map 接口
<ul>
<li>存储一组键值对象，提供 key 到 value 的映射</li>
</ul>
</li>
</ul>
<p><strong>常见的标准集合类：</strong></p>
<ul>
<li>
<p>ArrayList</p>
<ul>
<li>
<p>该类实现了 List 的接口；</p>
</li>
<li>
<p>允许有 null 元素；</p>
</li>
<li>
<p>实现了长度可变的数组，在内存中分配连续的空间；</p>
</li>
<li>
<p>遍历元素和随机访问元素的效率比较高；</p>
</li>
<li>
<p>ArrayList 增长当前长度的 50%，插入删除效率低；</p>
</li>
<li>
<p>该类是非同步的,在多线程的情况下不要使用</p>
</li>
</ul>
</li>
<li>
<p>LinkedList</p>
<ul>
<li>该类实现了 List 接口；</li>
<li>允许有 null 元素；</li>
<li>LinkedList 查找效率低；</li>
<li>采用链表存储方式，插入、删除元素时效率比较高；</li>
<li>该类没有同步方法</li>
</ul>
</li>
<li>
<p>HashSet</p>
<ul>
<li>
<p>该类实现了 Set 接口；</p>
</li>
<li>
<p>底层使用 HashMap 实现，查询效率较高；</p>
</li>
<li>
<p>由于采用 hashCode 算法直接确定元素的内存地址，增删效率也挺高的；</p>
</li>
<li>
<p>不允许出现重复元素；</p>
</li>
<li>
<p>不保证集合中元素的顺序；</p>
</li>
<li>
<p>允许包含值为 null 的元素，但最多只能一个</p>
</li>
</ul>
</li>
<li>
<p>HashMap</p>
<ul>
<li>HashMap 是一个散列表，存储的内容是键值对（key-value）映射；</li>
<li>该类实现了 Map 接口，根据键的 hashCode 值存储数据，具有很快的访问速度；</li>
<li>最多允许一条记录的键为null，不支持线程同步</li>
</ul>
</li>
</ul>
<h3 id="3-ArrayList-类">3. ArrayList 类</h3>
<blockquote>
<p>ArrayList 是可以动态增长和缩减的索引序列，它是基于数组实现的 List 类。该类封装了一个动态再分配的 Object[] 数组，每一个类对象都有一个 capacity 属性，表示它们所封装的 Object[] 数组的长度，当向 ArrayList 中添加元素时，该属性值会自动增加。</p>
<p>如果想 ArrayList 中添加大量元素，可使用 <mark><code>ensureCapacity</code></mark> 方法一次性增加 capacity，可以减少增量重新分配的次数，提高性能。</p>
</blockquote>
<blockquote>
<p>ArrayList 的用法和 Vector 相类似，但是 Vector 是一个较老的集合，具有很多缺点，不建议使用。</p>
<p>另外，ArrayList和Vector的区别是：</p>
<ul>
<li>ArrayList 是线程不安全的，当多条线程访问同一个ArrayList集合时，程序需要手动保证该集合的同步性；</li>
<li>Vector 则是线程安全的。</li>
</ul>
</blockquote>
<p><font color = red>ArrayList 中的元素实际上是对象，如果我们要存储其他类型，而 &lt;E&gt; 只能为引用数据类型，这时我们就需要使用到基本类型的包装类。</font></p>
<blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ArrayList&lt;E&gt; obj =<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;E&gt;();</span><br></pre></td></tr></table></figure>
</blockquote>
<h5 id="3-1-ArrayList-的数据结构">3.1 ArrayList 的数据结构</h5>
<ul>
<li>
<p>ArrayList 是一种线性数据结构，它的底层是用数组实现的，相当于动态数组，其容量是动态调整的。</p>
</li>
<li>
<p>数组元素类型为 Object 类型，即可以存放所有类型数据。对 ArrayList 类的实例的所有的操作底层都是基于数组的。</p>
</li>
</ul>
<h5 id="3-2-ArrayList-源码分析">3.2 ArrayList 源码分析</h5>
<blockquote>
<p>为什么要先继承 AbstractList，而让 AbstractList 先实现 List 接口？而不是让 ArrayList 直接实现 List 接口？</p>
<p><font color = green>原因：</font>接口中全都是抽象的方法，而抽象类中可以有抽象方法，还可以有具体的实现方法，正是利用了这一点，让 AbstractList 先实现接口中一些通用的方法，而具体的类通过继承（如 ArrayList 就继承这个 AbstractList 类）拿到一些通用的方法，然后自己再实现一些自己特有的方法，这样一来，让代码更简洁，减少重复代码。</p>
</blockquote>
<p><strong>ArrayList 实现的接口：</strong></p>
<ol>
<li>
<p>List 接口</p>
</li>
<li>
<p>RandomAccess 接口</p>
<blockquote>
<p>一个标记性接口，它的作用就是用来快速随机存取。</p>
<ul>
<li><font color=orange>如果实现了该接口，使用普通的 for 循环来遍历，性能更高，例如 ArrayList；</font></li>
<li><font color=orange>而没有实现该接口，使用 Iterator 来迭代，这样性能更高，例如 LinkedList。</font></li>
</ul>
</blockquote>
</li>
<li>
<p>Cloneable 接口</p>
<blockquote>
<p>实现了该接口，就可以使用 <code>Object.clone()</code> 方法</p>
</blockquote>
</li>
<li>
<p>Serializable 接口</p>
<blockquote>
<p>实现该序列化接口，表明该类可以被序列化</p>
<blockquote>
<p><font color = purple>什么是序列化？</font>简单的说，就是能够从类变成字节流传输，然后还能从字节流变成原来的类。</p>
</blockquote>
</blockquote>
</li>
</ol>
<p><strong>常用方法</strong></p>
<ul>
<li><code>boolean add(E e)</code> - 在列表的末尾顺序添加元素（起始索引位置从 0 开始）</li>
<li><code>void add(int index, E element)</code> - 在指定的索引位置添加元素（索引位置必须介于 0 和列表中元素个数之间）</li>
<li><code>void grow(int minCapacity)</code> - 扩展数组大小（<font color=red><strong>ArrayList 的核心方法</strong></font>）</li>
<li><code>E get(int index)</code> - 返回指定索引位置处的元素（<font color=red>取出的元素是 Object 类型，使用前需要进行强制类型转换</font>）</li>
<li><code>E set(int index, E element)</code> - 修改 ArrayList 中的元素</li>
<li><code>boolean remove(Object o)</code> - 从列表中删除元素</li>
<li><code>E remove(int index)</code> - 从列表中删除指定位置元素（起始索引位置从0开始）</li>
<li><code>int size()</code> - 返回列表中的元素个数</li>
<li><code>boolean contains(Object o)</code> - 判断列表中是否存在指定元素（可能需要重写 <code>equals()</code> 方法）</li>
<li><code>indexOf(Object o)</code> - 从头开始查找与指定元素相等的元素（包括 null 元素）</li>
<li><code>lastIndexOf(Object o)</code> - 与 <code>indexOf()</code> 方法方向相反</li>
</ul>
<blockquote>
<p>更多方法内容详见：<a href="https://www.runoob.com/java/java-arraylist.html">Java ArrayList</a></p>
</blockquote>
<p><strong>构造函数</strong></p>
<ol>
<li><code>public ArrayList(int initialCapacity)</code></li>
<li><code>public ArrayList()</code></li>
<li><code>public ArrayList(Collection&lt;? extends E&gt; c)</code></li>
</ol>
<blockquote>
<p>简单来说，<code>ArrayList</code> 的构造方法就是初始化一下储存数据的容器，即 <code>elementData</code> 元素</p>
</blockquote>
<h3 id="4-LinkedList-类">4. LinkedList 类</h3>
<blockquote>
<p>LinkedList 是非同步的。</p>
</blockquote>
<h5 id="4-1-LinkedList-的数据结构">4.1 LinkedList 的数据结构</h5>
<ul>
<li>LinkedList 是一种可以在任何位置进行高效地插入和移除操作的有序序列，基于<mark>双向链表</mark><font color=red>（不是双向循环列表）</font>实现。</li>
<li>LinkedList 是一个继承于 AbstractSequentialList 的双向链表。它也可以被当作堆栈、队列或双端队列进行操作。</li>
</ul>
<h5 id="4-2-LinkedList-源码分析">4.2 LinkedList 源码分析</h5>
<blockquote>
<p>内部类 Node 是实现 LinkedList 的关键。</p>
</blockquote>
<p><strong>LinkedList 实现的接口：</strong></p>
<ol>
<li>
<p>List 接口</p>
<blockquote>
<p>能对 LinkedList 进行队列操作</p>
</blockquote>
</li>
<li>
<p>Deque 接口</p>
<blockquote>
<p>能将 LinkedList 当作双端队列使用</p>
</blockquote>
</li>
<li>
<p>Cloneable 接口</p>
<blockquote>
<p>重写了函数 <code>clone()</code>，能实现克隆</p>
</blockquote>
</li>
<li>
<p>Serializable 接口</p>
<blockquote>
<p>意味着 LinkedList 支持序列化，能通过序列化去传输</p>
</blockquote>
</li>
</ol>
<p><strong>构造函数</strong></p>
<ol>
<li><code>public LinkedList()</code></li>
<li><code>public LinkedList(Collection&lt;? extends E&gt; c)</code></li>
</ol>
<p><strong>常用方法</strong></p>
<ul>
<li>
<p><code>boolean add(E e)</code> - 向 LinkedList 中添加一个元素，并且添加到链表尾部</p>
</li>
<li>
<p><code>boolean add(Collection&lt;? extends E&gt; c)</code> - 将一个集合的所有元素添加到链表后面</p>
</li>
<li>
<p><code>boolean add(int index, Collection&lt;? extends E&gt; c)</code> - 将一个集合的所有元素添加到链表的指定位置后面</p>
</li>
<li>
<p><code>void addFirst(E e)</code> - 在列表的首部添加元素</p>
</li>
<li>
<p><code>void addLast(E e)</code> - 在列表的尾部添加元素</p>
</li>
<li>
<p><code>E get(int index)</code> - 返回指定位置的元素</p>
</li>
<li>
<p><code>E getFirst()</code> - 返回列表中的第一个元素</p>
</li>
<li>
<p><code>E getLast()</code> - 返回列表中的最后一个元素</p>
</li>
<li>
<p><code>boolean remove(Object o)</code> - 删除某一元素</p>
</li>
<li>
<p><code>E removeFirst()</code> - 删除并返回列表中的第一个元素</p>
</li>
<li>
<p><code>E removeLast()</code> - 删除并返回列表中的最后一个元素</p>
</li>
<li>
<p><code>int indexOf(Object o)</code> - 查找指定元素从前往后第一次出现的索引</p>
</li>
</ul>
<p><strong>迭代器</strong></p>
<ol>
<li><font color=blue>内部类 <code>ListItr</code></font></li>
<li><font color=blue>内部类 <code>DescendingIterator</code></font></li>
</ol>
<h3 id="5-Vector-和-Stack">5. Vector 和 Stack</h3>
<h4 id="5-1-Vector">5.1 Vector</h4>
<ul>
<li>Vector 是一个可变化长度的数组</li>
<li>Vector 是一个线程安全的类，如果使用需要线程安全就使用 Vector，如果不需要，就使用 ArrayList</li>
<li><font color=green>Vector 的继承关系和层次结构与 ArrayList 一模一样</font></li>
<li>Vector 线程安全是因为它的方法都加了 <code>synchronized</code> 关键字</li>
</ul>
<blockquote>
<p><font color=orange>在开发中，建议不用 Vector，如果需要线程安全的集合类直接用 <code>java.util.concurrent</code> 包下的类。</font></p>
<p>原因：Vector 在你不需要进行线程安全的时候，也会给你加锁，导致了额外开销。</p>
</blockquote>
<h5 id="5-1-1-Vector-源码分析">5.1.1 Vector 源码分析</h5>
<p>Vector 的本质是一个数组，特点能是能够自动扩增，扩增的方式跟 capacityIncrement 的值有关</p>
<blockquote>
<p>属性 <code>capacityIncrement</code> 小于或等于 0 时，扩展数组时每次扩展两倍，其余情况按属性实际大小进行</p>
</blockquote>
<p><strong>构造函数</strong></p>
<ol>
<li><code>public Vector(int initialCapacity, int capacityIncrement)</code></li>
<li><code>public Vector(int initialCapacity)</code> - 内部调用构造函数 1，并使形参 capacityIncrement 为 0</li>
<li><code>public Vector()</code> - 内部调用构造函数 2，并使形参 initialCapacity 为 10</li>
<li><code>public Vector(Collection&lt;? extends E&gt; c)</code></li>
</ol>
<p><strong>核心方法</strong></p>
<blockquote>
<p><font color=red>每个方法上比 ArrayList 多了一个 <code>synchronized</code> 关键字，其他都一样。</font></p>
</blockquote>
<h4 id="5-2-Stack">5.2 Stack</h4>
<p><mark>Stack 为 Vector 子类</mark></p>
<p><strong>操作方法</strong></p>
<ol>
<li><code>E push(E item)</code> - 把项压入堆栈顶部</li>
<li><code>synchronized E pop()</code> - 移除堆栈顶部的对象，并作为此函数的值返回该对象</li>
<li><code>synchronized E peek()</code> - 查看堆栈顶部的对象，但不从堆栈中移除它</li>
<li><code>boolean empty()</code> - 测试堆栈是否为空</li>
<li><code>synchronized int search(Object o) </code>- 返回对象在堆栈中的位置，以 1 为基数</li>
</ol>
<p><mark>Stack 类的方法是同步的，所以也是线程安全</mark></p>
<h3 id="6-List-总结">6. List 总结</h3>
<h5 id="6-1-ArrayList-和-LinkedList-区别">6.1 ArrayList 和 LinkedList 区别</h5>
<ul>
<li>ArrayList 底层是用数组实现的顺序表，是<mark>随机存取类型</mark>，可自动扩增，并且在初始化时，数组的长度是0，只有在增加元素时，长度才会增加。默认是10，不能无限扩增，有上限，在查询操作的时候性能更好</li>
<li>LinkedList 底层是用链表来实现的，是一个双向链表（注意这里不是双向循环链表），<mark>顺序存取类型</mark>。在源码中，似乎没有元素个数的限制，应该能无限增加下去，直到内存满了再进行删除，增加操作时性能更好。</li>
</ul>
<p><strong>两者都是线程不安全的，在 iterator 时，会发生 <font color=blue>fail-fast</font></strong></p>
<h5 id="6-2-ArrayList-和-Vector-的区别">6.2 ArrayList 和 Vector 的区别</h5>
<ul>
<li>ArrayList 线程不安全，在用 iterator 时会发生 <font color=blue>fail-fast</font></li>
<li>Vector 线程安全，因为在方法前加了 <code>synchronized</code> 关键字，<font color=red>也会发生 </font><font color=blue>fail-fast</font></li>
</ul>
<h3 id="7-fail-fast-和-fail-safe">7. fail-fast 和 fail-safe</h3>
<h5 id="7-1-fail-fast-和-fail-safe-什么情况下会发生">7.1 fail-fast 和 fail-safe 什么情况下会发生</h5>
<p><font color=orange>简单来说：在 <code>java.util</code> 下的集合都是发生 fail-fast，而在 <code>java.util.concurrent</code> 下的发生的都是fail-safe。</font></p>
<h5 id="7-2-fail-fast-和-fail-safe-区别">7.2 fail-fast 和 fail-safe 区别</h5>
<ul>
<li>
<p><font color=blue>fail-fast，快速失败</font></p>
<blockquote>
<p>例如在 ArrayList 中使用迭代器遍历时，有另外的线程对 ArrayList 的存储数组进行了改变，比如 add、delete 等，使之发生了结构上的改变，所以 Iterator 就会快速报一个 <code>java.util.ConcurrentModificationException</code> 异常（并发修改异常），这就是快速失败。</p>
</blockquote>
</li>
<li>
<p><font color=blue>fail-safe，安全失败</font></p>
<blockquote>
<p>在 <code>java.util.concurrent</code> 下的类，都是线程安全的类。</p>
<p>在迭代的过程中，如果有线程进行结构的改变，不会报异常，而是正常遍历，这就是安全失败。</p>
</blockquote>
</li>
<li>
<p>为什么在 <code>java.util.concurrent</code> 包下对集合有结构的改变，却不会报异常？</p>
<blockquote>
<p>在 concurrent 下的集合类增加元素的时候使用 <code>Arrays.copyOf()</code> 来拷贝副本，在副本上增加元素，如果有其他线程在此改变了集合的结构，那也是在副本上的改变，而不是影响到原集合，迭代器还是照常遍历，遍历完之后，改变原引用指向副本，所以总的一句话，就是如果在此包下的类进行增加或删除操作，就会出现一个副本，所以能防止fail-fast。这种机制并不会出错，所以我们叫这种现象为fail-safe。</p>
</blockquote>
</li>
<li>
<p>Vector 也是线程安全的，为什么是 fail-fast 呢？</p>
<blockquote>
<p><font color=red>并不是说线程安全的集合就不会报 fail-fast，而是报 fail-safe。</font></p>
<p>出现 fail-safe 是因为它们在实现增删的底层机制不一样，就像上面说的，会有一个副本，而像 ArrayList、LinkedList、Vector等，它们底层就是对着真正的引用进行操作，所以才会发生异常。</p>
</blockquote>
</li>
<li>
<p>既然是线程安全的，为什么在迭代的时候，还会有别的线程来改变其集合的结构呢？</p>
<blockquote>
<p>因为在迭代的时候，根本就没用到集合中的删除、增加、查询的操作，就拿 Vector 来说，我们都没有使用那些加锁的方法，即方法锁放在那没人拿，在迭代的过程中，有人拿了那把锁，我们也没有办法，因为那把锁就放在那边。</p>
</blockquote>
</li>
</ul>
<h3 id="8-HashMap">8. HashMap</h3>
<p>HashMap 基于哈希表的 Map 接口实现，存储内容是键值对 <code>&lt;key,value&gt;</code> 映射。</p>
<p>HashMap 类不保证映射的顺序。</p>
<h5 id="8-1-HashMap-数据结构">8.1 HashMap 数据结构</h5>
<p><mark>HashMap 在 JDK 1.8 前的数据结构为链表散列，在 JDK 1.8 后的数据结构为（数组+链表+红黑树）。</mark></p>
<p>HashMap 类有两个属性影响性能：</p>
<ol>
<li><font color=blue>initialCapacity</font></li>
</ol>
<blockquote>
<p>initialCapacity 就是数组的长度，一个初始化容量仅仅是在哈希表被创建时的容量；initialCapacity 默认为 16</p>
</blockquote>
<ol start="2">
<li><font color=blue>loadFactor</font></li>
</ol>
<blockquote>
<p>loadFactor 是控制数组存放数据的疏密程度。</p>
<p>当 HashMap 条目数量超过了加载因子乘以当前的容量，那么哈希表将进行 rehash 操作（内部的数据结构会被重新建立），同时 HashMap 容量扩充至两倍；loadFactor 默认为 0.75</p>
</blockquote>
<h5 id="8-2-HashMap-源码分析">8.2 HashMap 源码分析</h5>
<p><strong>HashMap 实现的接口</strong></p>
<ol>
<li>
<p><code>Map&lt;K,V&gt;</code></p>
</li>
<li>
<p><code>Cloneable</code></p>
<blockquote>
<p>能够使用 <code>clone()</code> 方法；</p>
<p>在HashMap中，实现的是浅层次拷贝，即对拷贝对象的改变会影响被拷贝的对象</p>
</blockquote>
</li>
<li>
<p><code>Serializable</code></p>
<blockquote>
<p>能够使之序列化，即可以将HashMap对象保存至本地，之后可以恢复状态</p>
</blockquote>
</li>
</ol>
<p><strong>HashMap 类属性</strong></p>
<ul>
<li>上述 <code>initialCapacity</code>、<code>loadFactor</code></li>
<li><code>TREEIFY_THRESHOLD</code> - 链表转红黑树的阈值</li>
<li><code>UNTREEIFY_THRESHOLD</code> - 红黑树转链表的阈值</li>
<li><code>threshold</code> - 临界值，当实际大小（容量 * 填充因子）超过临界值时，会进行扩容</li>
<li><code>MIN_TREEIFY_CAPACITY</code> - 可以对容器进行树化的 HashMap 容量阈值</li>
<li>…</li>
</ul>
<p><strong>构造方法</strong></p>
<blockquote>
<p>构造方法中，并没有初始化数组的大小，数组在一开始就已经被创建了。</p>
<p>构造方法只做两件事情：</p>
<ol>
<li>初始化 loadFactor</li>
<li>用 threshold 记录下数组初始化的大小</li>
</ol>
</blockquote>
<ol>
<li><code>HashMap()</code></li>
<li><code>HashMap(int initialCapacity)</code></li>
<li><code>HashMap(int initialCapacity, float loadFactor)</code></li>
<li><code>HashMap(Map&lt;? extends K, ? extends V&gt; m)</code></li>
</ol>
<p><strong>常用方法</strong></p>
<ul>
<li><code>V put(K key, V value)</code> - 将键/值对添加到 HashMap 中</li>
<li><code>V get(Object key)</code> - 获取指定 key 对应的 value</li>
</ul>
<h3 id="9-迭代器">9. 迭代器</h3>
<blockquote>
<p>所有实现了 Collection 接口的容器类都有一个 <code>iterator()</code> 方法，用以返回一个实现 Iterator 接口的对象。</p>
</blockquote>
<p>Iterator 对象称作为迭代器，用以方便的对容器内元素的遍历操作，Iterator接口定义了如下方法：</p>
<ul>
<li><code>boolean hashNext()</code> - 判断集合是否还有元素</li>
<li><code>Object next()</code> - 获取集合中遍历的当前元素</li>
<li><code>void remove()</code> - 删除集合中的元素</li>
</ul>
<h3 id="10-泛型">10. 泛型</h3>
<blockquote>
<p>泛型提供了编译时类型安全检测机制，该机制允许程序员在编译时检测到非法的类型。</p>
</blockquote>
<p><strong>泛型的本质是参数化类型，也就是说所操作的数据类型被指定为一个参数。</strong></p>
<p><mark>通配符：?</mark></p>
<blockquote>
<p>用法：<code>&lt; ? &gt;</code></p>
</blockquote>
<h3 id="11-Collections-工具类">11. Collections 工具类</h3>
<blockquote>
<p>Java 提供了一个操作 Set、List 和 Map 等集合的工具类：<font color=blue>Collections</font>，该工具类提供了大量方法对集合进行排序、查询和修改等操作，还提供了将集合对象置为不可变、对集合对象实现同步控制等方法。</p>
<p>Collections 类无需创建对象，完全由在 Collection 上进行操作或返回 Collection 的静态方法组成。</p>
</blockquote>
<p><strong>常用操作</strong></p>
<ul>
<li>
<p>排序操作</p>
</li>
<li>
<p>查找、替换操作</p>
</li>
<li>
<p>同步控制</p>
<blockquote>
<p>Collections 类提供了多个 <code>synchronizedXxx()</code> 方法，该方法可以将指定集合包装成线程同步的集合，从而解决多线程并发访问集合时的线程安全问题。</p>
</blockquote>
</li>
<li>
<p>设置不可变集合</p>
</li>
<li>
<p>…</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Java 学习</category>
      </categories>
  </entry>
  <entry>
    <title>13、多线程</title>
    <url>/posts/addc10d3/</url>
    <content><![CDATA[<h3 id="1-线程简介">1. 线程简介</h3>
<p><strong>程序、进程和线程</strong></p>
<ol>
<li>
<p>程序</p>
<blockquote>
<p>程序是指令和数据的有序集合，其本身没有任何运行的含义，是一个<mark>静态</mark>的概念。</p>
</blockquote>
</li>
<li>
<p>进程</p>
<blockquote>
<p>线程是执行程序的一次执行过程，它是一个<mark>动态</mark>的概念，是系统资源分配的单位。</p>
</blockquote>
</li>
<li>
<p>线程</p>
<blockquote>
<ul>
<li>
<p>通常在一个进程中可以包含若干个线程，当然一个进程中至少有一个线程，不然没有存在的意义。</p>
</li>
<li>
<p>线程是CPU调度和执行的的单位。</p>
</li>
</ul>
</blockquote>
</li>
</ol>
<ul>
<li>
<p>线程就是独立的执行路径</p>
</li>
<li>
<p>在程序运行时，即使没有自己创建线程，后台也会有多个线程，如主线程，GC 线程等；</p>
</li>
<li>
<p><code>main()</code> 称之为主线程，为系统的入口，用于执行整个程序；</p>
</li>
<li>
<p>在一个进程中，如果开辟了多个线程，线程的运行由调度器安排调度，调度器是与操作系统紧密相关的，先后顺序是不能认为的干预的；</p>
</li>
<li>
<p>对同一份资源操作时，会存在资源抢夺的问题，需要加入并发控制；</p>
</li>
<li>
<p>线程会带来额外的开销，如 CPU 调度时间，并发控制开销；</p>
</li>
<li>
<p>每个线程在自己的工作内存交互，内存控制不当会造成数据不一致。</p>
</li>
</ul>
<blockquote>
<p><font color=red><strong>主线程和子线程并行交替执行</strong></font></p>
</blockquote>
<h3 id="2-线程创建">2. 线程创建</h3>
<h5 id="2-1-继承-Thread-类-‼️">2.1 继承 <code>Thread</code> 类 ‼️</h5>
<p><strong>创建步骤：</strong></p>
<ol>
<li>自定义线程类继承 <code>Thread</code> 类</li>
<li>重写 <font color=red><code>run()</code></font> 方法，编写线程执行体</li>
<li>创建子类对象，子类对象调用 <font color=red><strong><code>start()</code></strong></font> 方法启动线程</li>
</ol>
<p><strong>代码示例：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> <span class="keyword">extends</span> <span class="title class_">Thread</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;run------------------------------------&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Demo</span>().start();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;main++++++++&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>线程开启后不一定立即执行，由 CPU 安排调度。</p>
</blockquote>
<h5 id="2-2-实现-Runnable-接口-‼️">2.2 实现 <code>Runnable</code> 接口 ‼️</h5>
<p><strong>创建步骤：</strong></p>
<ol>
<li>自定义线程类实现 <code>Runnable</code> 接口</li>
<li>重写 <font color=red><code>run()</code></font> 方法，编写线程执行体</li>
<li>创建线程类 <code>Thread</code> 对象，传入自定义线程类对象，<code>Thread</code> 类对象调用 <font color=red><strong><code>start()</code></strong></font> 方法启动线程</li>
</ol>
<p><strong>代码示例：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;run-------------------------------------------------&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Demo</span>()).start();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;main+++++++++++++++++++&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p><font color=orange>推荐使用 <code>Runnable</code> 实现多线程，因为 Java 单继承的局限性</font></p>
</blockquote>
<h5 id="2-3-实现-Callable-接口">2.3 实现 <code>Callable</code> 接口</h5>
<p><strong>创建步骤：</strong></p>
<ol>
<li>实现 <code>Callable</code> 接口（需要返回值类型）</li>
<li><mark>重写 <code>call()</code> 方法</mark>（需要抛出异常）</li>
<li>创建目标对象</li>
<li>创建执行服务：<code>ExecutorService serv = Executors.newFixedThreadPool(1);</code></li>
<li>提交执行：<code>Future&lt;Boolean&gt; res = serv.submit(t);</code></li>
<li>获取结果：<code>boolean r = result.get();</code></li>
<li>关闭服务：<code>serv.shutdownNow();</code></li>
</ol>
<h5 id="2-4-静态代理">2.4 静态代理</h5>
<blockquote>
<p>真实对象和代理对象都需要实现同一接口。</p>
</blockquote>
<p><strong>代码示例：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">TicketService</span> <span class="variable">tsi</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TicketServiceImpl</span>();</span><br><span class="line">        <span class="type">TicketProxy</span> <span class="variable">tp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TicketProxy</span>(tsi);</span><br><span class="line"></span><br><span class="line">        tp.buyTicket();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">TicketService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">buyTicket</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TicketServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">TicketService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">buyTicket</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;正在购票&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TicketProxy</span> <span class="keyword">implements</span> <span class="title class_">TicketService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> TicketService target;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">TicketProxy</span><span class="params">(TicketService target)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.target = target;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">buyTicket</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;前往购票&quot;</span>);</span><br><span class="line">        target.buyTicket();</span><br><span class="line">        System.out.println(<span class="string">&quot;购票完成&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="2-5-Lambda-表达式">2.5 Lambda 表达式</h5>
<ul>
<li>Lambda 允许把函数作为一个方法的参数（函数作为参数传递进方法中）。</li>
<li>Lambda 避免内部类定义过多。</li>
<li>Lambda 表达式属于函数式编程。</li>
</ul>
<p><strong>语法</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">(parameters) -&gt; expression</span><br><span class="line">或</span><br><span class="line">(parameters) -&gt;&#123; statements; &#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>parameters</code> 是参数列表，<code>expression</code> 或 <code>&#123; statements; &#125;</code> 是 Lambda 表达式的主体。</p>
<ul>
<li>如果只有一个参数，可以省略括号；如果没有参数，也需要空括号。</li>
</ul>
</blockquote>
<p>任何接口，如果只包含唯一一个抽象方法，那么它就是一个<strong>函数式接口</strong>。</p>
<ul>
<li>对于函数式接口，可以通过 lambda 表达式来创建该接口的对象</li>
</ul>
<h3 id="3-线程状态">3. 线程状态</h3>
<img src="/posts/addc10d3/Thread_States-1.png" class="">
<hr>
<img src="/posts/addc10d3/Thread_States-2.png" class="">
<p>线程可以处于以下状态之一（<strong>Thread.State</strong>）：</p>
<ul>
<li>
<p><font color=blue>NEW</font></p>
<p>尚未启动的线程处于此状态</p>
</li>
<li>
<p><font color=blue>RUNNABLE</font></p>
<p>在 JVM 中执行的线程处于此状态</p>
</li>
<li>
<p><font color=blue>BLOCKED</font></p>
<p>被阻塞、等待监视器锁定的线程处于此状态</p>
</li>
<li>
<p><font color=blue>WAITING</font></p>
<p>正在等待另一个线程<mark>执行特定动作</mark>的线程处于此状态</p>
</li>
<li>
<p><font color=blue>TIMED_WAITING</font></p>
<p>正在等待另一个线程<mark>执行动作达到指定等待时间</mark>的线程处于此状态</p>
</li>
<li>
<p><font color=blue>TERMINATED</font></p>
<p>已退出的线程处于此状态</p>
</li>
</ul>
<p>一个线程可以在给定时间点处于一个状态。</p>
<ul>
<li>这些状态是不反映任何操作系统线程状态的虚拟机状态</li>
</ul>
<p><strong>线程方法：</strong></p>
<ul>
<li>
<p><code>public void start()</code></p>
<blockquote>
<p>使该线程开始执行；</p>
<p>JVM 调用该线程的 <code>run()</code> 方法</p>
</blockquote>
</li>
<li>
<p><code>public void run()</code></p>
<blockquote>
<p>如果该线程是使用独立的 Runnable 运行对象构造的，则调用该 Runnable 对象的 <code>run()</code> 方法；</p>
<p>否则，该方法不执行任何操作并返回</p>
</blockquote>
</li>
<li>
<p><code>public final void setPriority(int priority)</code></p>
<blockquote>
<p>更改线程的优先级</p>
</blockquote>
</li>
<li>
<p><code>public static void sleep(long millisec)</code></p>
<blockquote>
<p>在指定的毫秒数内让当前正在执行的线程休眠（暂停执行），此操作受到系统计时器和调度程序精度和准确性的影响</p>
</blockquote>
</li>
<li>
<p><code>public static void yield()</code></p>
<blockquote>
<p>暂停当前正在执行的线程对象，并执行其他线程</p>
</blockquote>
</li>
<li>
<p><code>public final void join(long millisec)</code></p>
<blockquote>
<p>等待该线程终止的时间最长为 millisec 毫秒</p>
</blockquote>
</li>
<li>
<p><code>public final boolean isAlive()</code></p>
<blockquote>
<p>测试线程是否处于活动状态</p>
</blockquote>
</li>
<li>
<p><code>public static Thread currentThread()</code></p>
<blockquote>
<p>返回对当前正在执行的线程对象的引用</p>
</blockquote>
</li>
<li>
<p><code>public final void setDaemon(boolean on)</code></p>
<blockquote>
<p>将该线程标记为守护线程或用户线程</p>
</blockquote>
</li>
</ul>
<p><strong>停止线程</strong></p>
<blockquote>
<p>不推荐使用 JDK 提供的 <code>stop()</code>、<code>destroy()</code> 方法。<font color=orange>【@Deprecated】</font></p>
</blockquote>
<p>推荐线程自己停止下来：</p>
<ul>
<li>建议定义一个标识为终止变量，对外提供方法改变标识</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 代码示例</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">while</span>(flag) &#123;</span><br><span class="line">            <span class="comment">// do something</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">stop</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.flag = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>线程休眠 <code>sleep()</code></strong></p>
<ul>
<li><code>sleep(long millisec)</code> 指定当前线程阻塞的毫秒数</li>
<li><code>sleep()</code> 存在异常 <code>InterruptedException</code></li>
<li><code>sleep()</code> 时间达到后线程进入就绪状态</li>
<li><font color=red>每一个对象都有一个锁，<code>sleep()</code> 不会释放锁</font></li>
</ul>
<p><strong>线程礼让 <code>yield()</code></strong></p>
<ul>
<li>让当前正在执行的线程暂停<font color=red><strong>（但不阻塞）</strong></font></li>
</ul>
<ul>
<li><mark>将线程从运行状态转为就绪状态</mark></li>
</ul>
<ul>
<li>礼让不一定成功</li>
</ul>
<p><strong>线程强制执行 <code>join()</code></strong></p>
<p><code>join()</code> 合并线程，待此线程执行完成后，再执行其他线程，其他线程阻塞</p>
<ul>
<li><em>类似插队现象</em></li>
</ul>
<p><strong>线程优先级</strong></p>
<p>Java 提供一个线程调度器来监控程序中启动后进入就绪状态的所有线程，线程调度器按照优先级决定应该调度哪个线程来执行。</p>
<p>线程的优先级用数字表示，范围从 1~10：</p>
<ul>
<li>
<p><code>Thread.MIN_PRIORITY = 1;</code></p>
</li>
<li>
<p><code>Thread.MAX_PRIORITY = 10;</code></p>
</li>
<li>
<p><code>Thread.NORM_PRIORITY = 5;</code></p>
</li>
</ul>
<p>使用以下方式获取或改变优先级</p>
<ul>
<li><code>int getPriority()</code></li>
<li><code>void setPriority(int newPriority)</code></li>
</ul>
<p><font color=blue>优先级的设定建议在 <code>start()</code> 调度前</font></p>
<p><font color=orange>优先级低只是意味着获得调度的概率低，并不是优先级低就不会被调用了，这都是看CPU的调度。</font></p>
<p><strong>守护线程（daemon）</strong></p>
<p>线程分为<strong>用户线程</strong>和<strong>守护线程</strong></p>
<ul>
<li>
<p>虚拟机<mark>必须确保<font color=blue>用户线程</font>执行完毕</mark></p>
</li>
<li>
<p>虚拟机<mark>不用等待<font color=blue>守护线程</font>执行完毕</mark></p>
</li>
</ul>
<p><code>void setDaemon(boolean on)</code>：将此线程标记为守护进程线程或用户线程。（默认为用户线程）</p>
<ul>
<li>当运行的线程都是守护进程线程时，Java 虚拟机退出。</li>
</ul>
<h3 id="4-线程同步">4. 线程同步</h3>
<p>处理多线程问题时，多个线程访问同一个对象，并且某些线程还想修改这个对象，此时就需要引入线程同步。</p>
<ul>
<li><strong>线程同步</strong>其实是一种等待机制，多个需要同时访问此对象的线程进入这个<strong>对象的等待池</strong>形成队列，等待前面线程使用完毕，下一个线程再使用。</li>
</ul>
<p>由于同一进程的多个线程共享同一块存储空间，带来方便的同时，也带来了访问冲突问题。</p>
<p><mark>为了保证数据在方法中被访问时的正确性，在访问时加入<strong>锁机制（synchronized）</strong></mark></p>
<p>当一个线程获得对象的排它锁，独占资源，其他线程必须等待，使用后释放锁即可。存在以下问题 :</p>
<ul>
<li>一个线程持有锁会导致其他所有需要此锁的线程挂起；</li>
<li>在多线程竞争下 , 加锁、释放锁会导致比较多的上下文切换和调度延时，引起性能问题；</li>
<li>如果一个优先级高的线程等待一个优先级低的线程释放锁，会导致优先级倒置，引起性能问题。</li>
</ul>
<p><strong>同步方法</strong></p>
<blockquote>
<p>由于可以通过 <code>private</code> 关键字来保证数据对象只能被方法访问，所以只需要针对方法提出一套机制，这套机制就是 <code>synchronized</code> 关键字</p>
</blockquote>
<p><code>synchronized</code> 包括两种用法：</p>
<ul>
<li>
<p><code>synchronized</code> 方法</p>
<ul>
<li>
<p>同步方法：<code>public synchronized void method(int args) &#123;&#125;</code></p>
</li>
<li>
<p><code>synchronized</code> 方法控制对”对象”的访问，每个<mark>对象</mark>对应一把锁，每个 <code>synchronized</code> 方法都必须获得调用该方法的对象的锁才能执行，否则线程会阻塞，方法一旦执行，就独占该锁，直到该方法返回才释放锁，后面被阻塞的线程才能获得这个锁，继续执行</p>
</li>
<li>
<p><font color=red>若将一个大的方法申明为 <code>synchronized</code> 将会影响效率</font></p>
</li>
</ul>
</li>
<li>
<p><code>synchronized</code> 块</p>
<ul>
<li>
<p>同步块：<code>synchronized(Obj) &#123;&#125;</code></p>
<ul>
<li>
<p>Obj 称之为<strong>同步监视器</strong></p>
</li>
<li>
<p>Obj 可以是任何对象 , 但是推荐使用共享资源作为同步监视器</p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<blockquote>
<p><font color=blue>同步方法中无需指定同步监视器，因为同步方法的同步监视器就是 this，就是这个对象本身，或者是 class</font></p>
</blockquote>
<p>同步监视器的执行过程：</p>
<ol>
<li>第一个线程访问，锁定同步监视器，执行其中代码；</li>
<li>第二个线程访问，发现同步监视器被锁定，无法访问；</li>
<li>第一个线程访问完毕，解锁同步监视器；</li>
<li>第二个线程访问，发现同步监视器没有锁，然后锁定并访问</li>
</ol>
<blockquote>
<p>JUC 工具类</p>
</blockquote>
<p><strong>死锁</strong></p>
<blockquote>
<p>两个或两个以上的线程持有不同系统资源的锁，线程彼此都等待获取对方的锁来完成自己的任务，但是没有让出自己持有的锁，线程就会无休止等待下去。</p>
</blockquote>
<p>死锁产生的四个必要条件：</p>
<ol>
<li>
<p>互斥使用</p>
<blockquote>
<p>当资源被一个线程使用（占有）时，别的线程不能使用</p>
</blockquote>
</li>
<li>
<p>不可抢占</p>
<blockquote>
<p>资源请求者不能强制从资源占有者手中夺取资源，资源只能由资源占有者主动释放</p>
</blockquote>
</li>
<li>
<p>请求和保持</p>
<blockquote>
<p>当资源请求者在请求其他的资源的同时保持对原有资源的占有</p>
</blockquote>
</li>
<li>
<p>循环等待</p>
<blockquote>
<p>即存在一个等待队列：P1 占有 P2 的资源，P2 占有 P3 的资源，P3 占有 P1 的资源，这样就形成了一个等待环路</p>
</blockquote>
</li>
</ol>
<p><font color=orange>当上述四个条件都成立的时候，便形成死锁。当然，死锁的情况下如果打破上述任何一个条件，便可让死锁消失。</font></p>
<p><strong>Lock 锁</strong></p>
<blockquote>
<p>从 JDK 5.0 开始，Java 提供了更强大的线程同步机制——通过显式定义同步锁对象来实现同步。同步锁使用 <mark>Lock 对象</mark>充当。</p>
</blockquote>
<p><font color=blue><code>java.util.concurrent.locks.Lock</code> 接口</font>是控制多个线程对共享资源进行访问的工具。锁提供了对共享资源的独占访问，每次只能有一个线程对 Lock 对象加锁，线程开始访问共享资源之前应先获得 Lock 对象</p>
<p><font color=green><code>ReentrantLock</code> 类</font>实现了 Lock ，它拥有与 <code>synchronized</code> 相同的并发性和内存语义，在实现线程安全的控制中，比较常用的是 <code>ReentrantLock</code>，可以显式加锁、释放锁。</p>
<p><font color=red><code>ReentrantLock</code> 属于可重入锁。</font></p>
<p>示例代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Ticket</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">nums</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">    <span class="type">ReentrantLock</span> <span class="variable">lock</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ReentrantLock</span>();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="comment">// 加锁</span></span><br><span class="line">            lock.lock();</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (nums &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    System.out.println(nums--);</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        Thread.sleep(<span class="number">100</span>);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                <span class="comment">// 释放锁</span></span><br><span class="line">                lock.unlock();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p><font color=orange>如果同步代码有异常，要将 <code>unlock()</code> 写入 finally 语句块中。</font></p>
</blockquote>
<p><strong><code>synchronized</code> 与 <code>Lock</code> 的对比</strong></p>
<ul>
<li><code>Lock</code> 是显式锁（手动开启和关闭锁）；<code>synchronized</code> 是隐式锁，出了作用域自动释放</li>
<li><code>Lock</code> 只有代码块锁，<code>synchronized</code> 有代码块锁和方法锁</li>
<li>使用 <code>Lock</code> 锁，JVM 将花费较少的时间来调度线程，性能更好，并且具有更好的扩展性（提供更多的子类）</li>
<li>优先使用顺序：<code>Lock</code> &gt; 同步代码块（已经进入了方法体，分配了相应资源）&gt; 同步方法（在方法体之外）</li>
</ul>
<h3 id="5-线程协作">5. 线程协作</h3>
<p><strong>经典问题：生产者消费者问题</strong></p>
<p>在生产者消费者问题中 , 仅有 <code>synchronized</code> 是不够的：</p>
<ul>
<li><code>synchronized</code> 可阻止并发更新同一个共享资源 , 实现了同步</li>
<li><code>synchronized</code> 不能用来实现不同线程之间的消息传递（通信）</li>
</ul>
<p>Java 提供了几个方法解决线程之间的通信问题：</p>
<table>
<thead>
<tr>
<th><strong>方法名</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><code>wait()</code></td>
<td>表示线程一直等待，直到其他线程通知（<font color=red>与 <code>sleep()</code> 不同，<code>wait()</code> 会释放锁</font>）</td>
</tr>
<tr>
<td><code>wait(long timeout)</code></td>
<td>指定等待的毫秒数</td>
</tr>
<tr>
<td><code>notify()</code></td>
<td>唤醒一个处于等待状态的线程</td>
</tr>
<tr>
<td><code>notifyAll()</code></td>
<td>唤醒同一个对象上所有调用wait()方法的线程 , 优先级别高的线程优先调度</td>
</tr>
</tbody>
</table>
<p><font color=red><strong>注意：均是 Object 类的方法，都只能在同步方法或者同步代码块中使用，否则会抛出异常 <code>IllegalMonitorStateException</code></strong></font></p>
<p><strong>解决方式</strong></p>
<ol>
<li>
<p>管程法</p>
<blockquote>
<p><strong>生产者将生产好的数据放入<mark>缓冲区</mark>，消费者从<mark>缓冲区</mark>拿出数据</strong></p>
</blockquote>
<p>示例代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">BufferZone</span> <span class="variable">bufferZone</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferZone</span>();</span><br><span class="line">        <span class="type">Producer</span> <span class="variable">producer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Producer</span>(bufferZone);</span><br><span class="line">        <span class="type">Consumer</span> <span class="variable">consumer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Consumer</span>(bufferZone);</span><br><span class="line"></span><br><span class="line">        producer.start();</span><br><span class="line">        consumer.start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Chicken</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Chicken</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BufferZone</span> &#123;</span><br><span class="line"></span><br><span class="line">    Chicken[] chickens = <span class="keyword">new</span> <span class="title class_">Chicken</span>[<span class="number">10</span>];</span><br><span class="line">    <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(Chicken chicken)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (count == chickens.length) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="built_in">this</span>.wait();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        chickens[count++] = chicken;</span><br><span class="line">        System.out.println(<span class="string">&quot;生产了第&quot;</span> + chicken.id + <span class="string">&quot;只鸡&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.notify();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">remove</span><span class="params">(Chicken chicken)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (count == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="built_in">this</span>.wait();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        chickens[--count] = chicken;</span><br><span class="line">        System.out.println(<span class="string">&quot;消费了第&quot;</span> + chicken.id + <span class="string">&quot;只鸡&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.notify();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Producer</span> <span class="keyword">extends</span> <span class="title class_">Thread</span> &#123;</span><br><span class="line"></span><br><span class="line">    BufferZone bufferZone;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Producer</span><span class="params">(BufferZone bufferZone)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.bufferZone = bufferZone;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">            bufferZone.add(<span class="keyword">new</span> <span class="title class_">Chicken</span>(i));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Consumer</span> <span class="keyword">extends</span> <span class="title class_">Thread</span> &#123;</span><br><span class="line"></span><br><span class="line">    BufferZone bufferZone;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Consumer</span><span class="params">(BufferZone bufferZone)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.bufferZone = bufferZone;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">            bufferZone.remove(<span class="keyword">new</span> <span class="title class_">Chicken</span>(i));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>信号灯法</p>
</li>
</ol>
<p>示例代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">CopyMethod</span> <span class="variable">copyMethod</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CopyMethod</span>();</span><br><span class="line">        <span class="type">Original</span> <span class="variable">original</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Original</span>(copyMethod);</span><br><span class="line">        <span class="type">Copy</span> <span class="variable">copy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Copy</span>(copyMethod);</span><br><span class="line"></span><br><span class="line">        original.start();</span><br><span class="line">        copy.start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 模拟复制文件数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CopyMethod</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">readIO</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 使用 while 防止虚假唤醒</span></span><br><span class="line">        <span class="keyword">while</span> (!flag) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="built_in">this</span>.wait();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;文件---&gt;读入数据&quot;</span> + <span class="string">&quot;---&gt;程序&quot;</span>);</span><br><span class="line">        flag = !flag;</span><br><span class="line">        <span class="built_in">this</span>.notifyAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">writeIO</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 使用 while 防止虚假唤醒</span></span><br><span class="line">        <span class="keyword">while</span> (flag) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="built_in">this</span>.wait();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;程序---&gt;写出数据&quot;</span> + <span class="string">&quot;---&gt;文件&quot;</span>);</span><br><span class="line">        flag = !flag;</span><br><span class="line">        <span class="built_in">this</span>.notifyAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Original</span> <span class="keyword">extends</span> <span class="title class_">Thread</span> &#123;</span><br><span class="line"></span><br><span class="line">    CopyMethod copyMethod;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Original</span><span class="params">(CopyMethod copyMethod)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.copyMethod = copyMethod;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            copyMethod.readIO();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Copy</span> <span class="keyword">extends</span> <span class="title class_">Thread</span> &#123;</span><br><span class="line"></span><br><span class="line">    CopyMethod copyMethod;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Copy</span><span class="params">(CopyMethod copyMethod)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.copyMethod = copyMethod;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            copyMethod.writeIO();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p><font color=red><strong>务必使用 while 代替 if 条件判断，<code>wait()</code> 要始终保证在while循环当中，防止虚假唤醒。</strong></font></p>
</blockquote>
<p>虚假唤醒：</p>
<blockquote>
<p>当一个线程调用同步对象的 <code>wait()</code> 方法后，当前线程会：</p>
<ol>
<li>释放CPU</li>
<li>释放对象锁</li>
<li>只有等待该同步对象调用 <code>notify()</code> / <code>notifyAll()</code> 该线程才会被唤醒，<font color=red>唤醒后继续从 <code>wait()</code> 处的下一行代码开始执行</font></li>
</ol>
<p>这里最关键的就是唤醒后继续从wait处的下一行代码开始执行，这意味着：</p>
<ul>
<li>如果使用 if，条件判断只进行一次，下次被唤醒的时候已经绕过了条件判断，从 <code>wait()</code> 后的语句开始顺序执行；</li>
<li>如果使用 while，<code>wait()</code> 后的语句在循环体内，虽然绕过了上一次的条件判断，但终究会进入下一轮条件判断。</li>
</ul>
<p>参考资料：<a href="https://blog.csdn.net/trustboycs/article/details/115347815?spm=1001.2101.3001.6650.3&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-3-115347815-blog-87101633.235%5Ev43%5Econtrol&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-3-115347815-blog-87101633.235%5Ev43%5Econtrol&amp;utm_relevant_index=2">Java多线程之虚假唤醒（原创）</a></p>
</blockquote>
<h3 id="6-线程池">6. 线程池</h3>
<ul>
<li>
<p>背景</p>
<blockquote>
<p>经常创建和销毁、使用量特别大的资源，比如并发情况下的线程，对性能影响很大。</p>
</blockquote>
</li>
<li>
<p>思路</p>
<blockquote>
<p>提前创建好多个线程，放入线程池中，使用时直接获取，使用完放回池中。可以避免频繁创建销毁、实现重复利用。</p>
<p>类似生活中的公共交通工具。</p>
</blockquote>
</li>
<li>
<p>好处</p>
<blockquote>
<p>提高响应速度（减少了创建新线程的时间）;</p>
<p>降低资源消耗（重复利用线程池中线程，不需要每次都创建）;</p>
<p>便于线程管理(…)</p>
<ul>
<li>
<p><code>corePoolSize</code>：核心线程数，当线程数小于核心线程数时，线程池优先通过创建核心线程去处理任务</p>
</li>
<li>
<p><code>maximumPoolSize</code>：线程池中允许的最大线程数</p>
</li>
<li>
<p><code>keepAliveTime</code>：线程没有任务时最多保持多长时间后会终止</p>
</li>
</ul>
</blockquote>
</li>
</ul>
<p>JDK 5.0 起提供了线程池相关API：<code>ExecutorService</code> 和 <code>Executors</code></p>
<ul>
<li>
<p><code>ExecutorService</code>：真正的线程池接口。</p>
<ul>
<li>
<p><code>void execute(Runnable command)</code>：执行任务/命令，<mark>没有返回值</mark>，<font color=blue>一般用来执行 <code>Runnable</code></font></p>
</li>
<li>
<p><code>&lt;T&gt; Future&lt;T&gt; submit(Callable&lt;T&gt; task)</code>：执行任务，<mark>有返回值</mark>，<font color=blue>一般用来执行 <code>Callable</code></font></p>
</li>
<li>
<p><code>void shutdown()</code>：关闭连接池</p>
</li>
</ul>
</li>
<li>
<p><code>Executors</code>：工具类、线程池的工厂类，用于<mark>创建</mark>并返回不同类型的线程池</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Java 学习</category>
      </categories>
  </entry>
  <entry>
    <title>1、前言</title>
    <url>/posts/d3815a2f/</url>
    <content><![CDATA[<h5 id="1-Java-应用场景">1. Java 应用场景</h5>
<ul>
<li>银行系统</li>
<li>支付系统</li>
<li>政企信息系统</li>
<li>大数据平台</li>
<li>网站后台</li>
<li>SaaS 云</li>
<li>手机 App</li>
<li>云管理系统后台</li>
<li>电商系统后台</li>
<li>桌面工具</li>
</ul>
<h5 id="2-Java-学习路径">2. Java 学习路径</h5>
<ol>
<li>JavaSE</li>
<li>数据库</li>
<li>前端</li>
<li>JavaWeb</li>
<li>SSM 框架</li>
<li>Linux</li>
<li>SpringBoot</li>
<li>SpringCloud</li>
<li>Hadoop</li>
</ol>
]]></content>
      <categories>
        <category>Java 学习</category>
      </categories>
  </entry>
  <entry>
    <title>14、网络编程</title>
    <url>/posts/3c458ed8/</url>
    <content><![CDATA[<h3 id="1-网络编程概述">1. 网络编程概述</h3>
<p><strong>目的：</strong> 直接或间接地通过网络协议与其他计算机实现数据交换，进行通讯</p>
<p><strong>两个主要问题：</strong></p>
<ol>
<li>如何准确定位网络上的一台或多台主机以及定位主机上的特定的应用</li>
<li>定位主机后如何可靠高效地进行通信</li>
</ol>
<p>需要明确一点，<mark>网络编程 ≠ 网页编程</mark></p>
<h3 id="2-网络通信两个要素">2. 网络通信两个要素</h3>
<ol>
<li>通信双方的地址：IP 地址 + 端口号</li>
<li>一定的规则：即网络通信协议</li>
</ol>
<h3 id="3-IP-地址">3. IP 地址</h3>
<p><code>InetAddress</code> 类，代表 IP 地址</p>
<p><code>InetAddress</code> 类常用方法：</p>
<ol>
<li>
<p>静态方法，返回 <code>InetAddress</code> 对象</p>
<ul>
<li>
<p><code>static InetAddress getByName(String host)</code> - 在给定主机名的情况下确定主机的 IP 地址</p>
<p>代码示例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">InetAddress</span> <span class="variable">inetAddress</span> <span class="operator">=</span> InetAddress.getByName(<span class="string">&quot;www.baidu.com&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">InetAddress</span> <span class="variable">inetAddress</span> <span class="operator">=</span> InetAddress.getByName(<span class="string">&quot;127.0.0.1&quot;</span>);</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><code>static InetAddress getByAddress(byte[] addr)</code></p>
<p>：在给定原始 IP 地址的情况下，返回 <code>InetAddress</code> 对象</p>
</li>
<li>
<p><code>static InetAddress getByAddress(String host, byte[] addr)</code></p>
<p>：根据提供的主机名和 IP 地址创建 <code>InetAddress</code> 对象</p>
</li>
<li>
<p><code>static InetAddress getLocalHost()</code> - 返回本地主机</p>
</li>
</ul>
</li>
<li>
<p>非静态方法，获取 <code>InetAddress</code> 对象信息</p>
<ul>
<li>
<p><code>String getHostName()</code> - 获取此 IP 地址的主机名</p>
</li>
<li>
<p><code>String getHostAddress()</code> - 返回 IP 地址字符串</p>
</li>
</ul>
</li>
</ol>
<h3 id="4-端口-Port">4. 端口 Port</h3>
<blockquote>
<p>端口号标识计算机上正在运行的程序（即进程）</p>
</blockquote>
<ul>
<li>TCP 协议与 UDP 协议结构中端口地址都是 16 比特，可以有在 0~65535 范围内的端口号</li>
<li>单个协议下端口不能冲突</li>
</ul>
<p>端口号与 IP 地址的组合，就是网络套接字：Socket</p>
<blockquote>
<p>一些网络编程也被称为Socket编程</p>
</blockquote>
<p><strong>hosts 文件</strong></p>
<blockquote>
<p>hosts 文件是一个没有扩展名的系统文件，主要作用是定义 IP 地址和主机名的映射关系，是一个映射 IP 地址和主机名的规定。</p>
<p>Windows 下 hosts 文件位置是在 “C:\Windows\System32\drivers\etc”，注意这个文件一定是在系统盘</p>
</blockquote>
<p><code>InetSocketAddress</code> 类</p>
<blockquote>
<p><code>InetSocketAddress</code> 类主要作用是封装端口，它是在 <code>InetAddress</code> 类基础上加端口，但它是有构造器的。</p>
</blockquote>
<p><code>InetSocketAddress</code> 类常用方法：</p>
<ul>
<li>
<p>构造方法</p>
<ol>
<li><code>InetSocketAddress(int port)</code> - 创建一个套接字地址，其中 IP 地址是通配符地址，端口号是指定值</li>
<li><code>InetSocketAddress(String hostname, int port)</code> - 根据主机名和端口号创建套接字地址</li>
<li><code>InetSocketAddress(InetAddress addr, int port)</code> - 根据 IP 地址和端口号创建套接字地址</li>
</ol>
</li>
<li>
<p>普通方法</p>
<ul>
<li><code>public final int getPort()</code> - 获取端口号</li>
<li><code>public final InetAddress getAddress()</code> - 获取 <code>InetAddress</code></li>
<li><code>public final String getHostName()</code> - 获取 hostname</li>
</ul>
</li>
</ul>
<h3 id="5-通信协议">5. 通信协议</h3>
<p>TCP/IP 协议族的<mark>传输层</mark>协议中有两个非常重要的协议：</p>
<ul>
<li>
<p>传输控制协议 TCP（Transmission Control Protocol）</p>
<blockquote>
<p>建立连接：“三次握手”</p>
<p>断开连接：“四次挥手”</p>
</blockquote>
</li>
<li>
<p>用户数据报协议 UDP（User Datagram Protocol）</p>
</li>
</ul>
<h3 id="6-TCP-实现">6. TCP 实现</h3>
<p>代码示例：</p>
<ul>
<li>
<p>服务端：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TCPServer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">baos</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Socket</span> <span class="variable">accept</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ServerSocket</span> <span class="variable">serverSocket</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1、创建服务器套接字并等待客户端连接</span></span><br><span class="line">            serverSocket = <span class="keyword">new</span> <span class="title class_">ServerSocket</span>(<span class="number">9999</span>);</span><br><span class="line">            accept = serverSocket.accept();</span><br><span class="line">            <span class="comment">// 2、获取输入流并初始化 ByteArrayOutputStream</span></span><br><span class="line">            is = accept.getInputStream();</span><br><span class="line">            baos = <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">            3-1、循环从输入流读取数据到buffer数组</span></span><br><span class="line"><span class="comment">            3-2、从buffer数组读取数据写入到 ByteArrayOutputStream</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> ((len = is.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                baos.write(buffer, <span class="number">0</span>, len);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 4、打印读取的数据</span></span><br><span class="line">            System.out.println(baos);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException ignored) &#123;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// 关闭资源</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (baos != <span class="literal">null</span>)&#123;</span><br><span class="line">                    baos.close();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (is != <span class="literal">null</span>)&#123;</span><br><span class="line">                    is.close();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (accept != <span class="literal">null</span>)&#123;</span><br><span class="line">                    accept.close();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (serverSocket != <span class="literal">null</span>)&#123;</span><br><span class="line">                    serverSocket.close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">catch</span> (Exception ignored)&#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>客户端：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TCPClient</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Socket</span> <span class="variable">socket</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">OutputStream</span> <span class="variable">os</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1、获取服务器地址</span></span><br><span class="line">            <span class="type">InetAddress</span> <span class="variable">serverIP</span> <span class="operator">=</span> InetAddress.getLocalHost();</span><br><span class="line">            <span class="type">int</span> <span class="variable">port</span> <span class="operator">=</span> <span class="number">9999</span>;</span><br><span class="line">            <span class="comment">// 2、创建 Socket</span></span><br><span class="line">            socket = <span class="keyword">new</span> <span class="title class_">Socket</span>(serverIP, port);</span><br><span class="line">            <span class="comment">// 3、创建输出流，向外传输数据</span></span><br><span class="line">            os = socket.getOutputStream();</span><br><span class="line">            os.write(<span class="string">&quot;Hello, 你好&quot;</span>.getBytes());</span><br><span class="line">			<span class="comment">// 4、关闭输出流</span></span><br><span class="line">            socket.shutdownOutput();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException ignored) &#123;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// 关闭资源</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (os != <span class="literal">null</span>) &#123;</span><br><span class="line">                    os.close();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (socket != <span class="literal">null</span>) &#123;</span><br><span class="line">                    socket.close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception ignored) &#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="7-初识-Tomcat">7. 初识 Tomcat</h3>
<blockquote>
<p>浏览器相当于是一个客户端，而 Tomcat 服务器相当于是服务端</p>
</blockquote>
<h3 id="8-UDP-实现">8. UDP 实现</h3>
<p><code>DatagramSocket</code> 和 <code>DatagramPacket</code> 两个类实现了基于UDP协议的网络程序：</p>
<ul>
<li>
<p>UDP 数据报通过 <code>DatagramSocket</code> 发送和接收，系统不保证 UDP 数据报一定能够安全送到目的地，也不确定什么时候可以抵达</p>
</li>
<li>
<p><code>DatagramPacket</code> 对象封装了 UDP 数据报</p>
<blockquote>
<p>数据报中包含了发送端的IP地址和端口号以及接收端的IP地址和端口号。</p>
</blockquote>
</li>
</ul>
<p>代码示例：</p>
<ul>
<li>
<p>Sender：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UDPSender</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 1、创建 DatagramSocket 对象</span></span><br><span class="line">        <span class="type">DatagramSocket</span> <span class="variable">socket</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            socket = <span class="keyword">new</span> <span class="title class_">DatagramSocket</span>();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SocketException ignore) &#123;&#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        2、准备数据包：ip + 端口 + 数据</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="type">InetAddress</span> <span class="variable">addr</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            addr = InetAddress.getByName(<span class="string">&quot;localhost&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnknownHostException ignore) &#123;&#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">port</span> <span class="operator">=</span> <span class="number">9000</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">info</span> <span class="operator">=</span> <span class="string">&quot;Hello World&quot;</span>;</span><br><span class="line">        <span class="type">byte</span>[] msg = info.getBytes();</span><br><span class="line">        <span class="type">DatagramPacket</span> <span class="variable">packet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramPacket</span>(msg, <span class="number">0</span>, msg.length, addr, port);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、通过 DatagramSocket 发送数据包</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            socket.send(packet);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NullPointerException | IOException ignore) &#123;&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            socket.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NullPointerException ignore) &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>Receiver：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramPacket;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UDPReceiver</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 1、创建 DatagramSocket 对象准备接收数据包</span></span><br><span class="line">        <span class="type">DatagramSocket</span> <span class="variable">socket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramSocket</span>(<span class="number">9000</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、准备缓冲区</span></span><br><span class="line">        <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="type">DatagramPacket</span> <span class="variable">packet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramPacket</span>(buffer, <span class="number">0</span>, buffer.length);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、接收数据包</span></span><br><span class="line">        socket.receive(packet);</span><br><span class="line">        System.out.println(<span class="keyword">new</span> <span class="title class_">String</span>(packet.getData(), <span class="number">0</span>, packet.getLength()));</span><br><span class="line"></span><br><span class="line">        socket.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="9-URL-编程">9. URL 编程</h3>
<blockquote>
<p>URL(Uniform Resource Locator)：统一资源定位符，表示 Internet 上某一资源的地址</p>
<ul>
<li>URL 是一种具体的 URI，即 URL 可以用来标识一个资源，而且还指明了如何定位这个资源</li>
<li>通过 URL，我们可以访问 Internet 上的各种网络资源</li>
<li>浏览器通过解析给定的 URL 可以在网络上查找相应的文件或其他资源</li>
</ul>
<p>URL 的基本结构：</p>
<blockquote>
<p><code>scheme</code>://<code>host</code>.<code>domain</code>:<code>port</code>/<code>path</code>/<code>filename</code>?<code>parameter</code>#<code>anchor</code></p>
</blockquote>
<p><a href="https://www.bookstack.cn/read/html-tutorial/spilt.2.docs-url.md">参考资料</a></p>
</blockquote>
<p>在 <code>java.net</code> 包中定义了 <mark>URL 类</mark>，该类用来处理有关 URL 的内容</p>
<p>示例：<code>URL url = new URL(&quot;http://localhost:8080/study/index.html/?param=chatgpt&quot;);</code></p>
<p>通过 URL 下载资源，代码示例如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.HttpURLConnection;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DownloadByURL</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1、创建 URL 对象</span></span><br><span class="line">            <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;https://afelixliu.site/img/index.png&quot;</span>);</span><br><span class="line">            <span class="comment">// 2、打开连接</span></span><br><span class="line">            <span class="type">HttpURLConnection</span> <span class="variable">connection</span> <span class="operator">=</span> (HttpURLConnection) url.openConnection();</span><br><span class="line">            <span class="comment">// 3、获取输入流</span></span><br><span class="line">            <span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> connection.getInputStream();</span><br><span class="line">            <span class="comment">// 4、创建文件输出流</span></span><br><span class="line">            <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;blog_index.png&quot;</span>);</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">            5、读取和写入数据</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> ((len = is.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                fos.write(buffer, <span class="number">0</span>, len);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">            6、关闭流和连接</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            fos.close();</span><br><span class="line">            is.close();</span><br><span class="line">            connection.disconnect();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java 学习</category>
      </categories>
  </entry>
  <entry>
    <title>2、预科</title>
    <url>/posts/62190bc8/</url>
    <content><![CDATA[<h5 id="1-冯∙诺依曼体系结构">1. 冯∙诺依曼体系结构</h5>
<img src="/posts/62190bc8/Von_Neumann_architecture.png" class="">
<h5 id="2-基础的Dos命令">2. 基础的Dos命令</h5>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">dir</span> <span class="comment"># 查看当前目录下的文件和子目录</span></span><br></pre></td></tr></table></figure>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /d (盘符) <span class="comment"># 通过 cd 命令切换盘符</span></span><br></pre></td></tr></table></figure>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cls <span class="comment"># 清理终端</span></span><br></pre></td></tr></table></figure>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">exit</span> <span class="comment"># 退出终端</span></span><br></pre></td></tr></table></figure>
<h5 id="3-计算机语言发展史">3. 计算机语言发展史</h5>
<div class="mermaid-wrap"><pre class="mermaid-src" hidden>
  graph LR
A[机器语言] --&gt; B[汇编语言] --&gt; C[高级语言]
  </pre></div>
]]></content>
      <categories>
        <category>Java 学习</category>
      </categories>
  </entry>
  <entry>
    <title>3、Java 入门</title>
    <url>/posts/7d4d06c8/</url>
    <content><![CDATA[<h5 id="1-Java-特性和优势">1. Java 特性和优势</h5>
<ul>
<li>简单性</li>
<li>面向对象</li>
<li>可移植性</li>
<li>高性能</li>
<li>分布式</li>
<li>动态性</li>
<li>多线程</li>
<li>安全性</li>
<li>健壮性</li>
</ul>
<h5 id="2-Java-三大版本">2. Java 三大版本</h5>
<ul>
<li>JavaSE：标准版（桌面程序，控制台开发…）</li>
<li>JavaME：嵌入式开发（手机，小家电…）</li>
<li>JavaEE：企业级开发（web端，服务器开发.…）</li>
</ul>
<h5 id="3-JDK、JRE、JVM">3. JDK、JRE、JVM</h5>
<ul>
<li>JDK：Java Development Kit</li>
<li>JRE：Java Runtime Environment</li>
<li>JVM：Java Virtual Machine</li>
</ul>
<p>三者关系：</p>
<img src="/posts/7d4d06c8/JDK_JRE_JVM.png" class="">
<h5 id="4-编译型和解释型">4. 编译型和解释型</h5>
<p>编译型语言和解释型语言的执行流程：</p>
<img src="/posts/7d4d06c8/Flow.png" class="">
<p><mark>Java 语言同时兼有编译型和解释型特点。</mark></p>
<p>程序运行机制：</p>
<img src="/posts/7d4d06c8/Mechanism.png" class="">
]]></content>
      <categories>
        <category>Java 学习</category>
      </categories>
  </entry>
  <entry>
    <title>12、IO流</title>
    <url>/posts/c2f5123/</url>
    <content><![CDATA[<h3 id="1-I-O-流分类">1. I/O 流分类</h3>
<img src="/posts/c2f5123/IO.png" class="">
<ul>
<li>
<p>按照<strong>数据流的方向</strong></p>
<ul>
<li>
<p>输入流：文件 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 程序</p>
</li>
<li>
<p>输出流：程序 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 文件</p>
</li>
</ul>
</li>
</ul>
<blockquote>
<p><strong><font color=red>输入流和输出流都是站在<mark>程序</mark>的角度上来说的</font></strong></p>
</blockquote>
<ul>
<li>
<p>按照<strong>处理数据单位</strong></p>
<ul>
<li>
<p>字节流</p>
<blockquote>
<p>最原始的一个流，读出来的数据就是类似 01010101 这种最底层的数据表示形式；</p>
<p>按照一个字节一个字节来读</p>
</blockquote>
</li>
<li>
<p>字符流</p>
<blockquote>
<p>按照一个字符一个字符地往外读取数据（一个字符是 2 个字节）</p>
</blockquote>
</li>
</ul>
</li>
<li>
<p>按照<strong>功能</strong></p>
<ul>
<li>
<p>节点流</p>
<blockquote>
<p>节点流可以从或向一个特定的地方（节点）读写数据，<mark>直接跟数据源相接</mark></p>
</blockquote>
</li>
<li>
<p>处理流</p>
<blockquote>
<p>处理流用来包装节点流，是对一个已存在的流（节点流或处理流）的连接和封装，通过所封装的流的功能调用实现数据读写，<mark>不会直接与数据源相连</mark></p>
</blockquote>
</li>
</ul>
</li>
</ul>
<p>JDK 所提供的所有流类型位于包 <code>java.io</code> 内，都分别继承自以下四种抽象流类型：</p>
<ul>
<li>
<p>输入流：</p>
<ul>
<li>InputStream（字节流）</li>
<li>Reader（字符流）</li>
</ul>
</li>
<li>
<p>输出流：</p>
<ul>
<li>OutputStream（字节流）</li>
<li>Writer（字符流）</li>
</ul>
</li>
</ul>
<h3 id="2-InputStream">2. InputStream</h3>
<ul>
<li>
<p>凡是以 InputStream 结尾的流类型，都是以字节的形式向程序输入数据</p>
</li>
<li>
<p>继承自 InputStream 的流都是用于向程序中输入数据，且数据的单位为字节（8 bit）</p>
</li>
</ul>
<p><strong>InputStream 的基本方法：</strong></p>
<ul>
<li>
<p><code>int read() throws IOException</code> - 从输入流中读取一个字节的数据，每读取一个字节，就处理一个字节==（如果读取结束，返回的是 -1）==</p>
</li>
<li>
<p><code>int read(byte b[]) throws IOException</code> - 从流中读取字节并存储在指定的数组中，然后再处理数组里面的数据==（如果读取结束返回 -1）==</p>
</li>
<li>
<p><code>int read(byte b[], int off, int len) throws IOException</code> - 从输入流中读取最多 len 个字节，并将其存储在缓冲区数组 b 中，从偏移量 off 开始存储==（如果遇到流尾部，返回 -1）==</p>
</li>
<li>
<p><code>long skip(long n) throws IOException</code> - 从输入流中跳过并丢弃 n 个字节的数据</p>
</li>
<li>
<p><code>int available() throws IOException</code> - 返回输入流中可用的字节数</p>
</li>
<li>
<p><code>void close() throws IOException</code> - 关闭输入流</p>
</li>
</ul>
<h3 id="3-OutputStream">3. OutputStream</h3>
<ul>
<li>继承自 OutputStream 的流是用于程序中输出数据，且数据的单位为字节（8 bit）</li>
</ul>
<p><strong>OutputStream 的方法：</strong></p>
<ol>
<li><code>void write(int b) throws IOException</code> - 将指定的字节写入输出流<font color=red>（写入低8位，忽略高24位）</font></li>
<li><code>write(byte b[]) throws IOException</code> - 把字节数组中所有数据写入到输出流中</li>
<li><code>void write(byte b[], int off, int len) throws IOException</code> - 将指定字节数组的一部分写入输出流，从偏移量 <code>off</code> 开始，写入长度为 <code>len</code> 的字节</li>
<li><code>void flush() throws IOException</code> - 强制将输出流中存在的所有数据写入目标</li>
<li><code>void close() throws IOException</code> - 关闭输出流</li>
</ol>
<h3 id="4-Reader">4. Reader</h3>
<blockquote>
<p>和 InputStream 一模一样，唯一的区别就在于读的数据单位不同</p>
</blockquote>
<p>继承自 Reader 的流都是用于向程序中输入数据，且数据的单位为字符（16 bit）</p>
<p><strong>Reader 的基本方法：</strong></p>
<ul>
<li><code>boolean ready() throws IOException</code> - 检查 Reader 流是否准备好读取</li>
</ul>
<ul>
<li><code>int read() throws IOException</code> - 从输入流中读取单个字符</li>
<li><code>int read(char cbuf[]) throws IOException</code> - 从流中读取字符并存储在指定的数组中</li>
<li><code>int read(char cbuf[], int off, int len) throws IOException</code> - 从流中读取 len 长度的字符数，并从 off 开始存储在指定的数组中</li>
<li><code>long skip(long n) throws IOException</code> - 从流中丢弃指定数量的字符</li>
<li><code>void close() throws IOException</code> - 关闭输入流</li>
</ul>
<h3 id="5-Writer">5. Writer</h3>
<p>继承自Writer的流都是用于程序中输出数据，且数据的单位为字符（16 bit）</p>
<p><strong>Writer 的基本方法：</strong></p>
<ul>
<li><code>void write(int c) throws IOException</code> - 写一个字符</li>
<li><code>void write(char cbuf[]) throws IOException</code> - 写一个字符数组</li>
<li><code>void write(char cbuf[], int off, int len) throws IOException</code> - 写一个字符数组的一部分，off 为开始索引，len 为字符个数</li>
<li><code>void write(String str) throws IOException</code> - 写一个字符串</li>
<li><code>void write(String str, int off, int len) throws IOException</code> - 写一个字符串的一部分，off 指定要写入的子串在 str 中的起始位置，len 指定要写入的子串的长度</li>
<li><code>void flush() throws IOException</code> - 强制将输出流中存在的所有数据写入目标</li>
<li><code>void close() throws IOException</code> - 关闭输出流</li>
</ul>
<p><strong><font color=red>一定要及时关闭流，否则可能造成无法读写数据。</font></strong></p>
<h3 id="6-处理流">6. 处理流</h3>
<h5 id="6-1-缓冲流">6.1 缓冲流</h5>
<p><strong>缓冲流可分为以下 4 类：</strong></p>
<ol>
<li>
<p><code>BufferedReader</code></p>
<blockquote>
<p><code>BufferedReader</code> 提供了 <code>readLine()</code> 方法用于读取一行字符串</p>
</blockquote>
</li>
<li>
<p><code>BufferedWriter</code></p>
<blockquote>
<p><code>BufferedWriter</code> 提供了 <code>newLine()</code> 用于写入一个行分隔符</p>
</blockquote>
</li>
<li>
<p><code>BufferedInputStream</code></p>
</li>
<li>
<p><code>BufferedOutputStream</code></p>
</li>
</ol>
<p>以 <code>BufferedReader</code> 类为例，其构造函数有：</p>
<ol>
<li><code>BufferedReader(Reader in)</code></li>
<li><code>BufferedReader(Reader in, int sz)</code> - 其中参数 sz 表示缓冲区大小</li>
</ol>
<blockquote>
<p><font color=orange>对于输出的缓冲流，写出的数据会现在内存中缓存，使用 <code>flush()</code> 方法将会使内存中的数据立刻写出</font></p>
</blockquote>
<h5 id="6-2-转换流">6.2 转换流</h5>
<blockquote>
<p>转换流非常的有用，它可以把一个<font color=blue><strong>字节流</strong></font>转换成一个**<font color=green>字符流</font>**。</p>
</blockquote>
<p>转换流分为两种：</p>
<ol>
<li>
<p><code>InputStreamReader</code></p>
<blockquote>
<ul>
<li>将 <code>InputStream</code> 流转换成 <code>Reader</code> 流；</li>
<li>需要和 <code>InputStream</code> “套接”</li>
</ul>
</blockquote>
</li>
<li>
<p><code>OutputStreamWriter</code></p>
<blockquote>
<ul>
<li>
<p>将 <code>OutputStream</code> 流转换成 <code>Writer</code> 流；</p>
</li>
<li>
<p>需要和 <code>OutputStream</code> “套接”</p>
</li>
</ul>
</blockquote>
</li>
</ol>
<h5 id="6-3-数据流">6.3 数据流</h5>
<ul>
<li>
<p><code>DataInputStream</code></p>
<blockquote>
<p>继承自 <code>InputStream</code>；</p>
<p>需要”套接“在 <code>InputStream</code> 类型的节点流上</p>
<p>构造函数：<code>DataInputStream(InputStream in)</code></p>
</blockquote>
</li>
<li>
<p><code>DataOutputStream</code></p>
<blockquote>
<p>继承自 <code>OutputStream</code>；</p>
<p>需要“套接”在 <code>OutputStream</code> 类型的节点流上</p>
<p>构造函数：<code>DataOutputStream(OutputStream out)</code></p>
</blockquote>
</li>
</ul>
<h5 id="6-4-打印流">6.4 打印流</h5>
<ul>
<li><code>PrintWriter</code> 和 <code>PrintStream</code> 都属于<mark>输出流</mark>，分别针对与字符和字节</li>
<li><code>PrintWriter</code> 和 <code>PrintStream</code> 提供了重载的 <code>print()</code> 方法和<code>println()</code> 方法，用于多种数据类型的输出</li>
<li><code>PrintWriter</code> 和 <code>PrintStream</code> 的输出操作不会抛出异常，用户通过检测错误状态获取错误信息</li>
<li><code>PrintWriter</code> 和 <code>PrintStream</code> 有自动 <code>flush</code> 功能</li>
</ul>
<h5 id="6-5-对象流">6.5 对象流</h5>
<blockquote>
<p>直接将 Object 写入或读出</p>
</blockquote>
<ul>
<li>
<p><code>transient</code> 关键字：用它来修饰的成员变量在序列化的时候不予考虑，也就是当成不存在</p>
</li>
<li>
<p><code>Serializable</code> 接口：一个对象序列化的标记性接口，一个类只有实现了 <code>Serializable</code> 接口，它的对象才能被序列化</p>
</li>
<li>
<p><code>Externalizable</code> 接口：自定义序列化和反序列化，<font color=red>需要实现 <code>writeExternal()</code> 和 <code>readExternal()</code> 方法</font></p>
</li>
</ul>
]]></content>
      <categories>
        <category>Java 学习</category>
      </categories>
  </entry>
  <entry>
    <title>4、Java 基础</title>
    <url>/posts/7251d5bd/</url>
    <content><![CDATA[<h4 id="1-注释">1. 注释</h4>
<p>Java 注释主要有三种类型：</p>
<ul>
<li>
<p>单行注释</p>
<p>单行注释以双斜杠 <code>//</code> 开始</p>
</li>
<li>
<p>多行注释</p>
<p>多行注释以 <code>/*</code> 开始，以 <code>*/</code> 结束</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 多行注释示例</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>文档注释</p>
<p>文档注释以 <code>/**</code> 开始，以 <code>*/</code> 结束</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 文档注释示例</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="2-标识符和关键字">2. 标识符和关键字</h4>
<ul>
<li>
<p>Java 关键字：</p>
<table>
<thead>
<tr>
<th><font color = blue>abstract</font></th>
<th><font color = blue>assert</font></th>
<th><font color = blue>boolean</font></th>
<th>break</th>
<th><font color = blue>byte</font></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>case</strong></td>
<td><font color = blue><strong>catch</strong></font></td>
<td><font color = blue><strong>char</strong></font></td>
<td><font color = blue><strong>class</strong></font></td>
<td><strong>const</strong></td>
</tr>
<tr>
<td><strong>continue</strong></td>
<td><font color = blue><strong>default</strong></font></td>
<td><font color = blue><strong>do</strong></font></td>
<td><font color = blue><strong>double</strong></font></td>
<td><font color = blue><strong>else</strong></font></td>
</tr>
<tr>
<td><font color = blue><strong>enum</strong></font></td>
<td><font color = blue><strong>extends</strong></font></td>
<td><font color = blue><strong>final</strong></font></td>
<td><font color = blue><strong>finally</strong></font></td>
<td><strong>float</strong></td>
</tr>
<tr>
<td><font color = blue><strong>for</strong></font></td>
<td><strong>goto</strong></td>
<td><font color = blue><strong>if</strong></font></td>
<td><font color = blue><strong>implements</strong></font></td>
<td><font color = blue><strong>import</strong></font></td>
</tr>
<tr>
<td><font color = blue><strong>instanceof</strong></font></td>
<td><font color = blue><strong>int</strong></font></td>
<td><font color = blue><strong>interface</strong></font></td>
<td><strong>long</strong></td>
<td><strong>native</strong></td>
</tr>
<tr>
<td><strong>new</strong></td>
<td><font color = blue><strong>package</strong></font></td>
<td><font color = blue><strong>private</strong></font></td>
<td><font color = blue><strong>protected</strong></font></td>
<td><font color = blue><strong>public</strong></font></td>
</tr>
<tr>
<td><font color = blue><strong>return</strong></font></td>
<td><font color = blue><strong>strictfp</strong></font></td>
<td><font color = blue><strong>short</strong></font></td>
<td><font color = blue><strong>static</strong></font></td>
<td><font color = blue><strong>super</strong></font></td>
</tr>
<tr>
<td><font color = blue><strong>switch</strong></font></td>
<td><strong><font color = blue>synchronized</font></strong></td>
<td><font color = blue><strong>this</strong></font></td>
<td><font color = blue><strong>throw</strong></font></td>
<td><font color = blue><strong>throws</strong></font></td>
</tr>
<tr>
<td><strong><font color = blue>transient</font></strong></td>
<td><strong>try</strong></td>
<td><font color = blue><strong>void</strong></font></td>
<td><font color = blue><strong>volatile</strong></font></td>
<td><font color = blue><strong>while</strong></font></td>
</tr>
</tbody>
</table>
</li>
</ul>
<p>标识符可以由字母、数字、下划线 <code>_</code> 和美元符号 <code>$</code> 组成。</p>
<blockquote>
<p><a href="https://github.com/alibaba/p3c">Java 开发手册（嵩山版）</a></p>
</blockquote>
<blockquote>
<p><a href="https://github.com/XenoAmess/p3c">IDE plugin(TPM)</a></p>
</blockquote>
<h4 id="3-数据类型">3. 数据类型</h4>
<ul>
<li>
<p>强类型语言：</p>
<ul>
<li>一种强制类型定义的语言，它要求变量或常量<strong>必须声明类型</strong>，并且只有在声明后才能使用。</li>
<li>一经声明，该变量就只能存储这种数据类型的值。在<strong>赋值和运算</strong>过程中，参与该过程的<strong>数据类型必须一致</strong>。</li>
<li>强类型语言有个<strong>强制转换</strong>，这改变的是<strong>变量的值</strong>的类型，以便进行赋值，而没有改变变量的类型。变量的类型是不允许改变的。</li>
</ul>
</li>
<li>
<p>弱类型语言：</p>
<ul>
<li>一种弱类型定义的语言，即数据类型可以被忽略的语言。它与强类型定义语言相反, 一个变量可以赋<strong>不同数据类型</strong>的值。</li>
<li>变量可以根据环境变化<strong>自行转换类型，不需要经过显式转换</strong>。</li>
</ul>
</li>
</ul>
<p>弱类型语言在速度上更胜一筹，而强类型定义语言的严谨性又能避免不必要的错误。</p>
<p>两者根本区别在于：变量类型是否会自行随需转换。</p>
<p><mark>Java 是一种强类型语言。</mark></p>
<p>Java 的数据类型分为两大类，基本类型和引用类型：</p>
<ul>
<li>
<p><strong>基本类型(primitive type)</strong></p>
<img src="/posts/7251d5bd/primitive_type.png" class="">
<p>注意：</p>
<ul>
<li>long 类型赋值时需要在整数后面加 L 后缀</li>
<li>浮点数类型的数值后缀统一为大写的 F 或 D</li>
</ul>
</li>
<li>
<p><strong>引用类型(reference type)</strong></p>
<img src="/posts/7251d5bd/reference_type.png" class="">
</li>
</ul>
<p>进制前缀：</p>
<table>
<thead>
<tr>
<th style="text-align:left">进制</th>
<th style="text-align:left">前缀</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">二进制</td>
<td style="text-align:left">0b</td>
</tr>
<tr>
<td style="text-align:left">八进制</td>
<td style="text-align:left">0</td>
</tr>
<tr>
<td style="text-align:left">十进制</td>
<td style="text-align:left">默认</td>
</tr>
<tr>
<td style="text-align:left">十六进制</td>
<td style="text-align:left">0x</td>
</tr>
</tbody>
</table>
<p>尽量避免使用浮点数进行比较：<mark>精度问题</mark></p>
<h4 id="4-类型转换">4. 类型转换</h4>
<div class="mermaid-wrap"><pre class="mermaid-src" hidden>
  graph LR
low[低] -----&gt; high[高]
A(byte, short, char) --&gt; B(int) --&gt; C(long) --&gt; D(float) --&gt; E(double)
  </pre></div>
<ul>
<li>
<p>强制类型转换：高 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 低</p>
</li>
<li>
<p>自动类型转换：低 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 高</p>
</li>
</ul>
<blockquote>
<p>在进行类型强制转换时，右括号与强制转换值之间<mark>不需要</mark>任何空格隔开。</p>
</blockquote>
<h4 id="5-变量、常量、作用域">5. 变量、常量、作用域</h4>
<p>变量类型：</p>
<ul>
<li>类变量
<ul>
<li>也叫<strong>静态变量</strong>，是在类中用 <code>static</code> 关键字声明的变量，它们属于类而不是实例</li>
<li>所有该类的实例共享同一个类变量的值</li>
<li>类变量在类加载时被初始化，而且<font color = orange>只初始化一次</font></li>
</ul>
</li>
<li>实例变量
<ul>
<li>实例变量是在类中声明，但在方法、构造函数或块之外，它们属于类的实例，每个类的实例都有自己的副本</li>
<li>如果不明确初始化，实例变量会被赋予默认值（数值类型为 0，boolean 类型为 false，引用类型为 null）</li>
</ul>
</li>
<li>局部变量
<ul>
<li>局部变量是在方法、构造函数或块内部声明的变量，它们在声明的方法、构造函数或块执行结束后被销毁</li>
<li><font color = red>局部变量在声明时需要初始化，否则会导致编译错误</font></li>
<li><font color=red><code>static</code> 关键字不能修饰局部变量</font></li>
</ul>
</li>
</ul>
<p><strong>常量</strong>是在程序执行期间不会发生变化的值。</p>
<ul>
<li>在 Java中使用 final 关键字来声明常量</li>
<li>一旦常量被赋予初始值，就无法再更改它的值</li>
<li>常量命名全部大写，单词间用下划线隔开</li>
</ul>
<h4 id="6-运算符">6. 运算符</h4>
<img src="/posts/7251d5bd/Operator.png" class="">
<p><font color=red>注意：</font></p>
<ul>
<li>
<p><mark>逻辑与（&amp;）</mark> 与 <mark>短路与（&amp;&amp;）</mark> 的关系</p>
<ul>
<li>逻辑与（&amp;）
<blockquote>
<p>当符号左右都是 <code>boolean</code> 型变量时，<code>&amp;</code> 为逻辑与（无论何种情况，左右语句都执行）</p>
</blockquote>
</li>
<li>短路与（&amp;&amp;）
<blockquote>
<p>左语句为真则执行右语句，左语句为假则不执行右语句</p>
</blockquote>
</li>
</ul>
</li>
<li>
<p><mark>逻辑或（|）</mark> 与 <mark>短路或（||）</mark> 的关系</p>
<ul>
<li>逻辑或（|）
<blockquote>
<p>当符号左右都是 <code>boolean</code> 型变量时，<code>|</code> 为逻辑或（无论何种情况，左右语句都执行）</p>
</blockquote>
</li>
<li>短路或（||）
<blockquote>
<p>左语句为假则执行右语句，左语句为真则不执行右语句</p>
</blockquote>
</li>
</ul>
</li>
</ul>
<h4 id="7-包机制">7. 包机制</h4>
<p>为了更好地组织类，Java 提供了包机制，用于区别类名的命名空间。</p>
<p>在 Java 中，通过 import 导入类或类，有两种方式：</p>
<ul>
<li>单类型导入（single-type-import）：通过明确指明类或接口路径，将其导入进来。例如 <code>import java.io.File</code></li>
<li>按需类型导入（type-import-on-demand）：通过通配符 * 来导入整个包中的所有类和接口。例如 <code>import java.io.*</code></li>
</ul>
<h4 id="8-JavaDoc">8. JavaDoc</h4>
<blockquote>
<p>JavaDoc 是 Sun 公司提供的一种工具，它可以从程序源代码中抽取类、方法、成员等注释，然后形成一个和源代码配套的 API 帮助文档。</p>
</blockquote>
<ul>
<li>
<p><strong>类</strong>、<strong>类属性</strong>、<strong>类方法</strong>的注释必须使用 JavaDoc 规范，使用 <code>/** */</code> 格式，不得使用 <code>//</code> 方式。</p>
</li>
<li>
<p>JavaDoc 标签：</p>
<ul>
<li>@author 作者名</li>
<li>@version 版本号</li>
<li>@since 指明需要最早使用的 JDK 版本</li>
<li>@param 参数名</li>
<li>@return 返回值情况</li>
<li>@throws 异常抛出情况</li>
<li>…</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Java 学习</category>
      </categories>
  </entry>
  <entry>
    <title>6、Java 方法</title>
    <url>/posts/570d2512/</url>
    <content><![CDATA[<h3 id="1-何谓方法">1. 何谓方法</h3>
<p>Java 方法是语句的集合，它们在一起执行一个功能。</p>
<ul>
<li>方法是解决一类问题的步骤的有序组合</li>
<li>方法包含于类或对象中</li>
<li>方法在程序中被创建，在其他地方被引用</li>
</ul>
<p>设计方法的原则：<font color = red>原子性</font>，即一个方法只完成1个功能，利于后期的扩展。</p>
<h3 id="2-方法的定义和调用">2. 方法的定义和调用</h3>
<h5 id="2-1-方法的定义">2.1 方法的定义</h5>
<blockquote>
<p>Java 的方法类似于其它语言的函数，是一段用来完成特定功能的代码片段。</p>
<p>一般情况下，定义一个方法包含一个方法头和一个方法体。</p>
</blockquote>
<p>下面是一个方法的所有部分：</p>
<ul>
<li>
<p>修饰符：告诉编译器如何调用该方法，定义了该方法的访问类型。（可选）</p>
</li>
<li>
<p>返回值类型：方法返回值的数据类型。<font color = blue>有些方法执行所需的操作，但没有返回值，在这种情况下是关键字 void。</font></p>
</li>
<li>
<p>方法名：方法的实际名称。<font color = blue>方法名和参数表共同构成方法签名。</font></p>
</li>
<li>
<p>参数类型：参数像是一个占位符，当方法被调用时，传递值给参数，这个值被称为实参或变量。（参数是可选的）</p>
<ul>
<li>形式参数：在方法被调用时用于接收外界输入的数据</li>
<li>实参：调用方法时实际传给方法的数据</li>
</ul>
</li>
<li>
<p>方法体：包含具体的语句，定义该方法的功能。</p>
</li>
</ul>
<p>语法格式：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">修饰符 返回值类型 方法名(参数类型 参数名) &#123;</span><br><span class="line">    ...</span><br><span class="line">    方法体</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">return</span> 返回值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="2-2-方法调用">2.2 方法调用</h5>
<p>调用方法：对象名.方法名(实参列表)</p>
<p>Java 支持两种调用方法的方式，根据方法是否返回值来选择：</p>
<ul>
<li>
<p>当方法返回一个值的时候，方法调用通常被当做一个值。</p>
<p>形如 <code>int larger = max(1, 2);</code></p>
</li>
<li>
<p>如果方法返回值是 void，方法调用一定是一条语句。</p>
<p>形如 <code>System.out.println(&quot;Hello, world!&quot;);</code></p>
</li>
</ul>
<hr>
<p>静态方法调用其他方法：</p>
<ul>
<li>调用非静态方法：无论是否在同一类中，均需要通过对象调用。</li>
<li>调用静态方法：
<ul>
<li>同一类中直接调用</li>
<li>不同类内直接通过 <code>类名.方法(参数列表)</code> 调用</li>
</ul>
</li>
</ul>
<p>非静态方法调用其他方法：</p>
<ul>
<li>同一类中，非静态方法可以直接调用静态方法和非静态方法
<ul>
<li>如果被调用方法是静态方法，则默认使用类作为调用者；</li>
<li>如果被调用方法是非静态方法，则默认使用 this 作为调用者</li>
</ul>
</li>
<li>不同类之间，
<ul>
<li>需要通过对象调用非静态方法</li>
<li>既可以通过对象调用静态方法又可以通过类名直接调用（建议使用类名直接调用静态方法）</li>
</ul>
</li>
</ul>
<blockquote>
<p>参考来源：<a href="https://blog.csdn.net/plus_left/article/details/83663041">Java 中类中方法的调用</a></p>
</blockquote>
<hr>
<p><font color =  red>Java 中只有按值调用而没有按引用调用</font></p>
<blockquote>
<p><a href="https://blog.csdn.net/javazejian/article/details/51192130#commentBox">Java 基本数据类型传递与引用传递区别详解</a></p>
</blockquote>
<h3 id="3-方法重载">3. 方法重载</h3>
<p>重载就是在一个类中，有相同的函数名称，但形参不同的函数。</p>
<p>方法重载的规则：</p>
<ul>
<li><font color = red>方法名称必须相同</font></li>
<li><font color = red>参数列表必须不同</font>（个数不同、类型不同、参数排列顺序不同）</li>
<li>方法的返回类型可以相同也可以不相同（<mark>仅返回类型不同不足以成为方法的重载</mark>）</li>
</ul>
<blockquote>
<p>方法名称相同时，编译器会根据调用方法的参数个数、参数类型等去逐个匹配，以选择对应的方法，如果匹配失败，则编译器报错。</p>
</blockquote>
<h3 id="4-命令行传参">4. 命令行传参</h3>
<p>通过命令行给 main() 方法传参</p>
<p>步骤如下：</p>
<ol>
<li>
<p>在要运行的 Java 文件所在的目录运行 <code>javac</code> 指令</p>
<blockquote>
<p>示例：<code>javac 类名.java</code></p>
</blockquote>
</li>
<li>
<p>在要运行的 Java 文件所在包的上层目录中运行 <code>java</code> 指令</p>
<blockquote>
<p>示例：<code>java pers.afelixliu.study.function.demo hello world</code>，“hello world” 为参数</p>
</blockquote>
</li>
</ol>
<h3 id="5-可变参数">5. 可变参数</h3>
<blockquote>
<p>Java 5 中提供了变长参数，允许在调用方法时传入不定长度的参数。变长参数是 Java 的一个语法糖，本质上还是基于数组的实现。</p>
<p>（建议开发者尽量不用可变参数编程）</p>
</blockquote>
<p>在方法声明时，在<mark>最后一个形参后</mark>加上三点 <code>...</code>，就表示该形参可以接受多个参数值，多个参数值被当成数组传入。</p>
<ul>
<li><font color = red>可变参数只能作为函数的最后一个参数</font>，其前面可以有也可以没有任何其他参数</li>
<li>由于可变参数必须是最后一个参数，所以<font color = red>一个函数最多只能有一个可变参数</font></li>
</ul>
<p>用法示例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(add(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span>... args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> x : args) &#123;</span><br><span class="line">            res += x;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="6-递归">6. 递归</h3>
<blockquote>
<p>利用递归可以用简单的程序来解决一些复杂的问题。它通常把一个大型复杂的问题层层转化为一个与原问题相似的规模较小的问题来求解，递归策略只需少量的程序就可描述出解题过程所需要的多次重复计算，大大地减少了程序的代码量。递归的能力在于用有限的语句来定义对象的无限集合。</p>
</blockquote>
<p>递归结构包括两个部分：</p>
<ul>
<li>递归头：什么时候不调用自身方法（如果没有头，将陷入死循环）</li>
<li>递归体：什么时候需要调用自身方法</li>
</ul>
]]></content>
      <categories>
        <category>Java 学习</category>
      </categories>
  </entry>
  <entry>
    <title>5、Java 流程控制</title>
    <url>/posts/136df49a/</url>
    <content><![CDATA[<h3 id="1-用户交互">1. 用户交互</h3>
<p><code>java.util.Scanner</code> 是 Java 5 的新特征，通过 Scanner 类来获取用户的输入。</p>
<p>通过 Scanner 类的 <code>next()</code> 与 <code>nextLine()</code> 方法获取输入的字符串</p>
<ul>
<li>在读取前一般需要使用 <code>hasNext()</code> 与 <code>hasNextLine()</code> 判断是否还有输入的数据</li>
</ul>
<p><code>next()</code> 与 <code>nextLine()</code> 区别</p>
<ul>
<li>
<p>next()</p>
<ul>
<li>一定要读取到有效字符后才可以结束输入</li>
<li>对输入有效字符<mark>之前</mark>遇到的空白，<code>next()</code> 方法会自动将其去掉</li>
<li>只有输入有效字符后才将其后面输入的空白作为分隔符或者结束符</li>
<li><font color = red>next() 不能得到带有空格的字符串</font></li>
</ul>
</li>
<li>
<p>nextLine()</p>
<ul>
<li>以 Enter 为结束符，<code>nextLine()</code> 方法返回的是输入回车之前的所有字符</li>
<li>可以获得空白</li>
</ul>
</li>
</ul>
<p>Scanner 类也支持输入 int 或 float 类型的数据，但在输入之前最好先使用 <code>hasNextXxx()</code> 方法进行验证，再使用 <code>nextXxx()</code> 来读取。</p>
<p>通常，为了节省内存，选择调用 close() 方法关闭 Scanner 对象。</p>
<ul>
<li>
<p>原因：</p>
<p>如果一个方法中创建了 Scanner 对象，却没有关闭，那么在方法结束后，Scanner 对象虽然会进入被回收的队列中，但不是立刻回收，而这会给计算机带来一定的负担。为了避免造成大量的内存占据，至少在方法结束前应该调用 Scanner 的 close() 方法。</p>
</li>
<li>
<p><mark>注意</mark>：</p>
<blockquote>
<p>如果在代码中关闭了 Scanner，那么在接下来的代码中将无法再使用 Scanner，即便再次声明了一个新的 Scanner 对象也是如此。Scanner 的 close() 方法会关闭 <a href="http://System.in">System.in</a>，也就是Scanner对象在被初始化时所传入的参数。<a href="http://System.in">System.in</a> 是一个 final 常量，在整个方法中只会被实例化一次。这也就导致了在第二次创建 Scanner 对象的时候并没有一个全新的 <a href="http://System.in">System.in</a> 被传入，而是一个已经被关闭了的 <a href="http://System.in">System.in</a>。</p>
</blockquote>
</li>
</ul>
<p><font color = red>如果要关闭 Scanner 的话一定要确保在同一方法下接下来不会再调用 Scanner 来接受输入。</font></p>
<h3 id="2-顺序结构">2. 顺序结构</h3>
<blockquote>
<p>顺序结构是最简单的算法结构，它是任何一个算法都离不开的一种基本算法结构。</p>
</blockquote>
<h3 id="3-选择结构">3. 选择结构</h3>
<h5 id="3-1-if-选择结构">3.1 if 选择结构</h5>
<blockquote>
<p>推荐使用 <code>str1.equals(str2)</code> 方法判断两个字符串是否相等，原因详见此文：<a href="https://blog.csdn.net/nxj_climb/article/details/113175127">JAVA中判断两个字符串是否相等</a></p>
</blockquote>
<p>语法格式：</p>
<ul>
<li>
<p>if 单选择结构</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (布尔表达式) &#123;</span><br><span class="line">    <span class="comment">//如果布尔表达式为true将执行的语句</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>if 双选择结构</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (布尔表达式) &#123;</span><br><span class="line">    <span class="comment">//如果布尔表达式的值为true</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">//如果布尔表达式的值为false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>if 多选择结构</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (布尔表达式<span class="number">1</span>) &#123;</span><br><span class="line">	<span class="comment">// 如果布尔表达式1的值为true执行代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (布尔表达式<span class="number">2</span>) &#123;</span><br><span class="line">	<span class="comment">// 如果布尔表达式2的值为true执行代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (布尔表达式<span class="number">3</span>) &#123;</span><br><span class="line">	<span class="comment">// 如果布尔表达式3的值为true执行代码</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 如果以上布尔表达式都不为true执行代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>嵌套的 if 结构</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (布尔表达式<span class="number">1</span>) &#123;</span><br><span class="line">	<span class="comment">// 如果布尔表达式1的值为true执行代码</span></span><br><span class="line">	<span class="keyword">if</span> (布尔表达式<span class="number">2</span>) &#123;</span><br><span class="line">        <span class="comment">// 如果布尔表达式2的值为true执行代码</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="3-2-switch-选择结构">3.2 switch 选择结构</h5>
<p>switch case 语句判断一个变量与一系列值中某个值是否相等，每个值称为一个分支。</p>
<p>语法格式：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">switch</span> (expression) &#123;</span><br><span class="line">    <span class="keyword">case</span> value:</span><br><span class="line">        <span class="comment">// 语句</span></span><br><span class="line">        <span class="keyword">break</span>; <span class="comment">// 可选</span></span><br><span class="line">    <span class="keyword">case</span> value:</span><br><span class="line">        <span class="comment">// 语句</span></span><br><span class="line">        <span class="keyword">break</span>; <span class="comment">// 可选</span></span><br><span class="line">    <span class="comment">//你可以有任意数量的case语句</span></span><br><span class="line">    <span class="keyword">default</span>: <span class="comment">// 可选</span></span><br><span class="line">        <span class="comment">// 语句</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>switch 语句中的变量类型可以是：</p>
<ul>
<li>byte、short、int 或者 char</li>
<li><mark>从 JavaSE 7 开始，switch 支持字符串 String 类型</mark></li>
<li>case 标签必须为字符串常量或字面量</li>
</ul>
<h3 id="4-循环结构">4. 循环结构</h3>
<h5 id="4-1-while-循环">4.1 while 循环</h5>
<p>语法格式：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> (布尔表达式) &#123;</span><br><span class="line">    <span class="comment">// 循环内容</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="4-2-do…while-循环">4.2 do…while 循环</h5>
<p>语法格式：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    <span class="comment">// 代码语句</span></span><br><span class="line">&#125; <span class="keyword">while</span> (布尔表达式);</span><br></pre></td></tr></table></figure>
<p>while 和 do…while 的区别：</p>
<ul>
<li>while 先判断后执行；do…while 是先执行后判断！</li>
<li>do…while 总是保证循环体会被至少执行一次！</li>
</ul>
<h5 id="4-3-for-循环">4.3 for 循环</h5>
<blockquote>
<p>for 循环语句是支持迭代的一种通用结构，是最有效、最灵活的循环结构。</p>
</blockquote>
<p>语法格式：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (初始化; 布尔表达式; 更新) &#123;</span><br><span class="line">	<span class="comment">// 代码语句</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="4-4-增强-for-循环">4.4 增强 for 循环</h5>
<blockquote>
<p>Java5 引入了增强型 for 循环，用来循环遍历数组和集合。</p>
</blockquote>
<p>语法格式：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (声明语句: 表达式) &#123;</span><br><span class="line">	<span class="comment">// 代码句子</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>声明语句：声明新的局部变量，该变量的<mark>类型必须和数组元素的类型匹配</mark>。其作用域限定在循环语句块，其值与此时数组元素的值相等。</li>
<li>表达式：表达式是要访问的数组名，或者是返回值为数组的方法。</li>
</ul>
<h5 id="4-5-break-continue">4.5 break continue</h5>
<ul>
<li>break
<ul>
<li>在任何循环语句的主体部分，均可用 break 控制循环的流程</li>
<li>break 用于强行退出循环，不执行循环中剩余的语句</li>
<li>break 语句也在 switch 语句中使用</li>
</ul>
</li>
<li>continue
<ul>
<li>continue 语句用在循环语句体中，用于跳过循环体中尚未执行的语句，接着进行下一次是否执行循环的判定</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Java 学习</category>
      </categories>
  </entry>
  <entry>
    <title>7、Java 数组</title>
    <url>/posts/77f50b6d/</url>
    <content><![CDATA[<h4 id="1-数组定义">1. 数组定义</h4>
<p>数组是<mark>相同类型数据</mark>的有序集合。</p>
<ul>
<li>数组描述的是相同类型的若干个数据，按照一定的先后次序排列组合而成</li>
<li>每一个数据称作一个数组元素，每个数组元素可以通过一个下标来访问它们</li>
</ul>
<h4 id="2-数组声明和创建">2. 数组声明和创建</h4>
<ol>
<li>
<p>首先必须声明数组变量，才能在程序中使用数组。</p>
<p>语法格式：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">dataType[] arrayRefVar; <span class="comment">// 首选的方法</span></span><br><span class="line">或</span><br><span class="line">dataType arrayRefVar[]; <span class="comment">// 效果相同，但不是首选方法</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><font color = red><strong>类型与中括号紧挨相连来声明数组。</strong></font></p>
<p><font color = blue>正例：定义整形数组 <code>int[] arr</code></font></p>
<p><font color = orange>反例：在 main 参数中，使用 <code>String args[]</code> 来定义</font></p>
</blockquote>
</li>
<li>
<p>Java 语言使用 new 操作符来创建数组。</p>
<p>语法如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">dataType[] arrayRefVar = <span class="keyword">new</span> <span class="title class_">dataType</span>[arraySize];</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>数组的元素是通过索引访问的，数组索引从0开始。</p>
</li>
<li>
<p>获取数组长度：<code>arrays.length</code></p>
</li>
</ol>
<h4 id="3-内存分析及三种初始化">3. 内存分析及三种初始化</h4>
<img src="/posts/77f50b6d/Java_Memory_Analysis.png" class="">
<blockquote>
<p>方法区（Method Area）与 Java 堆一样，是各个线程共享的内存区域，它用于存储已被虚拟机加载的类型信息、常量、静态变量、即时编译器编译后的代码缓存等数据。虽然《Java 虚拟机规范》中把方法区描述为堆的一个逻辑部分，但是它却有一个别名叫作“非堆”（Non-Heap），目的是与 Java 堆区分开来。</p>
</blockquote>
<p>数组的三种初始化状态：</p>
<ul>
<li>
<p><strong>静态初始化</strong></p>
<p>如：<code>int[] arr = &#123;1, 2, 3&#125;;</code></p>
</li>
<li>
<p><strong>动态初始化</strong></p>
<p>如：<code>int[] arr = new int[6]; arr[0] = 1;</code></p>
</li>
<li>
<p><strong>默认初始化</strong></p>
<p><mark>数组是引用类型，其元素相当于类的实例变量。</mark> 因此<font color = red>数组一经分配空间，其中每个元素也被按照实例变量同样的方式被隐式初始化</font>。</p>
</li>
</ul>
<h4 id="4-数组的四个基本特点">4. 数组的四个基本特点</h4>
<ol>
<li>
<p><font color = blue>其长度是确定的</font>。数组一旦被创建，它的大小就是不可以改变的。</p>
</li>
<li>
<p><font color = blue>其元素必须是相同类型</font>，不允许出现混合类型。</p>
</li>
<li>
<p><font color = blue>数组中的元素可以是任何数据类型</font>，包括基本类型和引用类型。</p>
</li>
<li>
<p><font color = blue>数组变量属引用类型</font>，数组也可以看成是对象，数组中的每个元素相当于该对象的成员变量。</p>
<p>数组本身就是对象，Java 中对象是在堆中的，因此<mark>数组无论保存原始类型还是其他对象类型，数组对象本身是在堆中的</mark>。</p>
</li>
</ol>
<h4 id="5-数组使用">5. 数组使用</h4>
<ul>
<li>普通 for 循环</li>
<li>增强型 for 循环</li>
<li>数组作为方法参数</li>
<li>数组作为方法返回值</li>
</ul>
<h4 id="6-多维数组">6. 多维数组</h4>
<blockquote>
<p>多维数组可以看成是数组的数组，比如二维数组就是一个特殊的一维数组，其每一个元素都是一个一维数组。</p>
<p>如：<code>int a[][] = new int[2][5];</code></p>
</blockquote>
<h4 id="7-Arrays-类">7. Arrays 类</h4>
<p>由于数组对象本身并没有什么方法可以供我们调用，但 API 中提供了一个工具类 Arrays 供我们使用，从而可以对数据对象进行一些基本的操作。Arrays类中的方法都是static修饰的静态方法，在使用的时候可以直接使用类名进行调用。</p>
<p>具有以下常用功能：</p>
<ul>
<li>给数组赋值：通过 fill 方法</li>
<li>对数组排序：通过 sort方法，按升序</li>
<li>比较数组：通过 equals 方法比较数组中元素值是否相等</li>
<li>查找数组元素：通过 binarySearch 方法能对排序好的数组进行二分查找法操作</li>
</ul>
<p>更多内容查看 <a href="https://docs.oracle.com/javase/8/docs/api/">JDK 帮助文档</a></p>
<h4 id="8-冒泡排序">8. 冒泡排序</h4>
<blockquote>
<p>冒泡排序无疑是最为出名的排序算法之一。</p>
</blockquote>
<p>代码实现：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">bubbleSort</span><span class="params">(<span class="type">int</span>[] arr)</span> &#123;</span><br><span class="line">    <span class="comment">// 一共进行 (arr.length - 1) 轮</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设定一个标记，若为 true，则表示此次循环没有进行交换，也就是待排序列已经有序，排序已经完成</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 每轮进行 (arr.length - i) 次比较</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; arr.length - i; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line">                flag = <span class="literal">false</span>;</span><br><span class="line">                <span class="type">int</span> <span class="variable">t</span> <span class="operator">=</span> arr[j];</span><br><span class="line">                arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">                arr[j + <span class="number">1</span>] = t;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>动图演示：</p>
<img src="/posts/77f50b6d/Bubble_Sort.gif" class="">
<h4 id="8-稀疏数组">8. 稀疏数组</h4>
<blockquote>
<p>当一个数组中大部分元素为 0，或者为同一值时，可以使用稀疏数组来保存该数组。</p>
</blockquote>
<p>稀疏数组的处理方式是：</p>
<ul>
<li>记录数组一共有几行几列，有多少个不同值</li>
<li>把具有不同值的元素和行列及值记录在一个小规模的数组中，从而缩小程序的规模</li>
</ul>
<p><a href="https://blog.csdn.net/sunnyzyq/article/details/116763427">什么是稀疏数组？稀疏数组详解</a></p>
]]></content>
      <categories>
        <category>Java 学习</category>
      </categories>
  </entry>
  <entry>
    <title>9、异常</title>
    <url>/posts/9bec04e7/</url>
    <content><![CDATA[<h4 id="1-什么是异常">1. 什么是异常</h4>
<blockquote>
<p>异常指程序运行中出现的不期而至的各种状况，如：文件找不到、网络连接失败、非法参数等，它影响了正常的程序执行流程。</p>
</blockquote>
<p>异常类型：</p>
<ul>
<li>
<p>检查性异常</p>
<p>最具代表的检查性异常是用户错误或问题引起的异常，这是程序员无法预见的。</p>
</li>
<li>
<p>运行时异常</p>
<p>运行时异常是可能被程序员避免的异常。与检查性异常相反，运行时异常可以在编译时被忽略。</p>
</li>
<li>
<p>错误<br>
错误不是异常，而是脱离程序员控制的问题。错误在代码中通常被忽略。</p>
</li>
</ul>
<p>异常体系结构：</p>
<blockquote>
<p>所有的异常类是从 java.lang.Exception 类继承的子类。</p>
<p>Exception 类是 Throwable 类的子类。除了 Exception 类外，Throwable 还有一个子类 Error。</p>
</blockquote>
<img src="/posts/9bec04e7/Exception.png" class="">
<ul>
<li>
<p>Error</p>
<ul>
<li>Error 类对象由 JVM 生成并抛出，大多数错误与代码编写者所执行的操作无关。</li>
<li>错误一般发生在严重故障时，它们在 Java 程序处理的范畴之外。</li>
</ul>
</li>
<li>
<p>Exception<br>
在 Exception 分支中有一个重要的子类 RuntimeException（运行时异常），这类异常一般是由程序逻辑错误引起的，程序应该从逻辑角度尽可能避免这类异常的发生。</p>
</li>
</ul>
<p>Error 和 Exception 的区别：</p>
<ul>
<li>
<p>Error 通常是灾难性的致命的错误，是程序无法控制和处理的，当出现这些异常时，JVM 一般会选择终止线程；</p>
</li>
<li>
<p>Exception 通常情况下是可以被程序处理的，并且在程序中应该尽可能的去外理这些呈常。</p>
</li>
</ul>
<h4 id="2-异常处理机制">2. 异常处理机制</h4>
<p><strong>捕获异常</strong></p>
<blockquote>
<p>使用 <font color = blue>try</font> 和 <font color = blue>catch</font> 关键字可以捕获异常。</p>
<p><code>try/catch</code> 代码块放在异常可能发生的地方。<code>try/catch</code> 代码块中的代码称为保护代码。</p>
</blockquote>
<p>使用 try/catch 的语法如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 代码</span></span><br><span class="line">&#125; <span class="keyword">catch</span> (ExceptionName e) &#123;</span><br><span class="line">    <span class="comment">// 代码</span></span><br><span class="line">&#125; <span class="keyword">catch</span> (ExceptionName e) &#123; <span class="comment">// 可以在 try 语句后面添加任意数量的 catch 块</span></span><br><span class="line">    <span class="comment">// 代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><font color = blue><code>finally</code></font> 关键字用来创建在 try 代码块后面执行的代码块。</p>
<ul>
<li>
<p>无论是否发生异常，finally 代码块中的代码总会被执行。</p>
</li>
<li>
<p>在 finally 代码块中，可以运行清理类型等收尾善后性质的语句。</p>
</li>
</ul>
<p>finally 代码块出现在 catch 代码块最后，语法如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 代码</span></span><br><span class="line">&#125; <span class="keyword">catch</span> (ExceptionName e) &#123;</span><br><span class="line">    <span class="comment">// 代码</span></span><br><span class="line">&#125; <span class="keyword">catch</span> (ExceptionName e) &#123;</span><br><span class="line">    <span class="comment">// 代码</span></span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    <span class="comment">// 代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><mark>不要在 <code>finally</code> 块中使用 <code>return</code></mark></p>
<blockquote>
<p>原因：try 块中的 return 语句执行成功后，并不马上返回，而是继续执行 finally 块中的语句，如果此处存在 return 语句，则会在此直接返回，无情丢弃掉 try 块中的返回点。</p>
</blockquote>
<p>注意事项：</p>
<ul>
<li>catch 不能独立于 try 存在</li>
<li>在 try/catch 后面添加 finally 块并非强制性要求</li>
<li>try 代码后不能既没 catch 块也没 finally 块</li>
<li>try, catch, finally 块之间不能添加任何代码</li>
</ul>
<p><strong>抛出异常</strong></p>
<p>在 Java 中， <font color = blue>throw</font> 和 <font color = blue>throws</font> 关键字是用于处理异常的。</p>
<ul>
<li>throw 关键字用于在代码中抛出异常</li>
<li>throws 关键字用于在方法声明中指定可能会抛出的异常类型</li>
</ul>
<h4 id="3-自定义异常">3. 自定义异常</h4>
<blockquote>
<p>使用 Java 内置的异常类可以描述在编程时出现的大部分异常情况。除此之外，用户还可以自定义异常。</p>
</blockquote>
<p>一个异常类和其它任何类一样，包含有变量和方法。</p>
<p>在程序中使用自定义异常类，大体可分为以下几个步骤：</p>
<ol>
<li>创建自定义异常类</li>
<li>在方法中通过 throw 关键字抛出异常对象</li>
<li>如果在当前抛出异常的方法中处理异常，可以使用 <code>try/catch</code> 语句捕获并处理；否则在方法的声明处通过 throws 关键字指明要抛出给方法调用者的异常，继续进行下一步操作</li>
<li>在出现异常方法的调用者中捕获并处理异常</li>
</ol>
<p>注意事项：</p>
<ul>
<li>所有异常都必须是 Throwable 的子类</li>
<li>如果希望写一个检查性异常类，则需要继承 Exception 类</li>
<li>如果你想写一个运行时异常类，那么需要继承 RuntimeException 类。</li>
</ul>
]]></content>
      <categories>
        <category>Java 学习</category>
      </categories>
  </entry>
  <entry>
    <title>8、面向对象</title>
    <url>/posts/de0d014a/</url>
    <content><![CDATA[<h3 id="1-什么是面向对象">1. 什么是面向对象</h3>
<h5 id="1-1-什么是面向过程？什么是面向对象？">1.1 什么是面向过程？什么是面向对象？</h5>
<p><strong>面向过程（Procedure-Oriented Programming, OPP）</strong></p>
<blockquote>
<p>是一种以事物为中心的编程思想。主要关注“怎么做”，即完成任务的具体细节。</p>
</blockquote>
<p><strong>面向对象（Object-Oriented Programming, OOP）</strong></p>
<blockquote>
<p>是一种以对象为基础的编程思想。主要关注“谁来做”，即完成任务的对象。</p>
</blockquote>
<h5 id="1-2-面向对象和面向过程的优缺点对比">1.2 面向对象和面向过程的优缺点对比</h5>
<p><strong>面向过程</strong>：</p>
<ul>
<li>
<p>优点：效率高（不需要实例化对象）</p>
</li>
<li>
<p>缺点：耦合度高，扩展性差，不易维护</p>
</li>
</ul>
<p><strong>面向对象</strong>：</p>
<ul>
<li>
<p>优点：耦合低（易复用），扩展性强，易维护</p>
</li>
<li>
<p>缺点：效率比面向过程低</p>
</li>
</ul>
<p><font color = blue>大多数支持面向对象的语言，同时也支持面向过程。不论是 Java、PHP，还是 JS，它们都还无法完全面向对象，因为面向过程是必然的，面向过程代表着必要的程序流程，调动对象进行组合或对象内部能力的实现，都一定会存在“过程”，它最终还是需要通过拆分步骤来指导最具体的执行细节。</font></p>
<h5 id="1-3-面向对象编程的本质">1.3 面向对象编程的本质</h5>
<p>以类的方式组织代码，以对象的形式（组织 / 封装）数据。</p>
<h5 id="1-4-面向对象三大特性">1.4 面向对象三大特性</h5>
<ul>
<li>封装</li>
<li>继承</li>
<li>多态</li>
</ul>
<h3 id="2-类与对象">2. 类与对象</h3>
<p>类的五大成员：</p>
<ol>
<li>属性</li>
<li>方法</li>
<li>构造器</li>
<li>代码块</li>
<li>内部类</li>
</ol>
<h5 id="2-1-类与对象的关系">2.1 类与对象的关系</h5>
<blockquote>
<p><font color = orange>类</font>是一种抽象的数据类型，它是对某一类事物整体描述 / 定义，但是并不能代表某一个具体的事物。</p>
<p><font color = orange>对象</font>是抽象概念的具体实例。</p>
</blockquote>
<blockquote>
<p><font color = blue>在 Java 中，一个项目可以有多个类，而每个类都可以有一个 main 方法。但是，只有一个 main 方法会成为程序的入口点，即只有一个 main 方法会被 JVM 执行。我们可以根据需要选择执行哪个类的 main 方法。</font></p>
</blockquote>
<p><font color = red><strong>在一个 <code>*.java</code> 的文件中，只能有一个 <code>public class</code> 的声明，但是允许多个 class 的声明。</strong></font></p>
<h5 id="2-2-创建与初始化对象">2.2 创建与初始化对象</h5>
<p><font color = red>使用 <code>new</code> 关键字创建对象</font></p>
<blockquote>
<p>使用 new 关键字创建的时候，除了分配内存空间之外，还会给创建好的对象进行默认的初始化以及对类中构造器的调用。</p>
</blockquote>
<p>IDEA 中使用快捷键快速创建对象：<code>Alt + Enter</code></p>
<h3 id="3-构造器">3. 构造器</h3>
<p>类中的构造器也称为构造方法，是在进行创建对象的时候必须要调用的，是在创建对象的时候给成员变量进行<strong>初始化赋值</strong>的。</p>
<p>构造器特点：</p>
<ol>
<li>必须和类的名字相同</li>
<li>必须没有返回类型，也不能写 void</li>
<li>没有具体的返回值</li>
</ol>
<p>构造器类型：</p>
<ul>
<li>无参构造方法（默认构造参数）：根据类型为对象提供默认值。</li>
<li>有参构造方法：用于为不同对象提供不同初始化的值。</li>
</ul>
<p>注意事项：</p>
<ul>
<li>
<p><mark>使用 new 关键字时，本质上是在调用构造器</mark></p>
</li>
<li>
<p>一个类中可以有多个构造器，但是构造器的参数列表必须不同（重载）</p>
</li>
<li>
<p>如果没有手动定义构造器，则 Java 系统会提供一个默认的构造器，一旦定义了构造器，则系统会把默认的构造器收回</p>
</li>
<li>
<p>定义了有参构造之后，如果想使用无参构造，必须显式的定义一个无参构造</p>
</li>
</ul>
<h3 id="4-创建对象内存分析">4. 创建对象内存分析</h3>
<p><a href="https://blog.csdn.net/m0_61547956/article/details/124044981">一图看懂 Java 创建对象内存分析</a></p>
<h3 id="5-封装">5. 封装</h3>
<p>“高内聚，低耦合”</p>
<p>封装（数据的隐藏）</p>
<ul>
<li>通常，应禁止直接访问一个对象中数据的实际表示，而应通过操作接口来访问，这称为信息隐藏。</li>
</ul>
<blockquote>
<p>记住这句话就够了：属性私有，get / set</p>
</blockquote>
<p>封装的意义：</p>
<ul>
<li>提高程序安全性，保护数据</li>
<li>隐藏代码的实现细节</li>
<li>统一接口</li>
<li>增加系统可维护性</li>
</ul>
<h3 id="6-继承">6. 继承</h3>
<p>继承的本质是对某一批类的抽象，从而实现对现实世界更好的建模。</p>
<ul>
<li>继承是类和类之间的一种关系。除此之外类和类之间的关系还有依赖、组合、聚合等。</li>
<li>继承关系的俩个类，一个为子类（派生类），一个为父类（基类）。子类继承父类，使用关键字 <code>extends</code> 来表示。</li>
</ul>
<p>注意事项：</p>
<ul>
<li><mark>Java 中类只有单继承，没有多继承！</mark></li>
<li><mark>被 <code>final</code> 修饰符修饰的类，不可以被继承。</mark></li>
<li>父类中的 final 方法可以被子类继承，但是不能被子类重写。</li>
</ul>
<blockquote>
<p>利用 IDEA 快捷键 <code>Ctrl + h</code> 查看继承关系（hierarchy）。</p>
</blockquote>
<p>访问修饰符：</p>
<table>
<thead>
<tr>
<th>修饰符</th>
<th style="text-align:center">当前类</th>
<th style="text-align:center">同一包内</th>
<th style="text-align:center">子类（同一包）</th>
<th style="text-align:center">子类（不同包）</th>
<th style="text-align:center">其他包</th>
</tr>
</thead>
<tbody>
<tr>
<td>public</td>
<td style="text-align:center">✓</td>
<td style="text-align:center">✓</td>
<td style="text-align:center">✓</td>
<td style="text-align:center">✓</td>
<td style="text-align:center">✓</td>
</tr>
<tr>
<td>protected</td>
<td style="text-align:center">✓</td>
<td style="text-align:center">✓</td>
<td style="text-align:center">✓</td>
<td style="text-align:center">✓</td>
<td style="text-align:center">✘</td>
</tr>
<tr>
<td>default</td>
<td style="text-align:center">✓</td>
<td style="text-align:center">✓</td>
<td style="text-align:center">✓</td>
<td style="text-align:center">✘</td>
<td style="text-align:center">✘</td>
</tr>
<tr>
<td>private</td>
<td style="text-align:center">✓</td>
<td style="text-align:center">✘</td>
<td style="text-align:center">✘</td>
<td style="text-align:center">✘</td>
<td style="text-align:center">✘</td>
</tr>
</tbody>
</table>
<h5 id="6-1-Object-类">6.1 Object 类</h5>
<p>Java 创建一个类时，如果没有明确继承一个父类，那么它就会自动继承 Object，成为 Object 的子类。</p>
<h5 id="6-2-super-关键字">6.2 <code>super</code> 关键字</h5>
<blockquote>
<p>Java 中的 super 关键字在子类中用于访问父类成员（属性、方法和构造函数）</p>
</blockquote>
<p>用法：</p>
<ul>
<li>
<p>使用 <code>super</code> 关键字来访问父类的属性</p>
<blockquote>
<p>如果父类和子类具有相同的属性，则使用 <code>super</code> 来指定为父类的属性。</p>
</blockquote>
</li>
<li>
<p>使用 <code>super</code> 关键字调用父类方法</p>
<blockquote>
<p>如果子类包含与父类相同的方法，则应使用 <code>super</code> 关键字指定父类的方法。</p>
</blockquote>
</li>
<li>
<p>使用 <code>super</code> 关键字调用父类构造函数</p>
<blockquote>
<p><font color = red><strong><code>super()</code> 只能在子类构造函数中使用，并且必须是第一条语句。</strong></font></p>
<p><mark>即使在子类构造函数中没有使用 <code>super()</code>，编译器也会隐式调用超类的默认构造函数。</mark></p>
<p><code>super()</code> 和 <code>this()</code> 不能够同时调用构造方法。</p>
<hr>
<p>编译器可以自动调用无参数构造函数。但是，它不能调用<strong>有参构造函数</strong>。</p>
<p>如果必须从子类构造函数中调用父类的<strong>有参构造函数</strong>，则需要在子类构造函数中显式定义它。</p>
</blockquote>
</li>
</ul>
<h5 id="6-3-方法重写">6.3 方法重写</h5>
<p>如果在父类和子类中都定义了相同的方法，则子类的方法将覆盖超类的方法，这称为<mark>方法重写</mark>。</p>
<p>重写规则：</p>
<ul>
<li>父类和子类都必须具有<font color = blue>相同的方法名称</font>，<font color = blue>相同的返回类型</font>和<font color = blue>相同的参数列表</font>。</li>
<li>只能重写继承过来的方法，<code>private</code> 修饰的方法无法被重写。</li>
<li><mark>不能重写声明为 final 和 static 的方法。</mark></li>
<li>父类的非静态方法不能被子类重写为静态方法。</li>
<li>访问权限不能比父类中被重写的方法的访问权限更低。</li>
<li>重写方法不能抛出新的检查异常或者比被重写方法申明更加宽泛的异常。</li>
<li>Java 中的构造函数不会被继承。因此，在 Java 中不存在诸如构造函数重写之类的问题。</li>
<li>如果一个类继承了抽象类，抽象类中的抽象方法必须在子类中被重写。</li>
<li>返回类型可以相同，也可以不同，如果不同的话，子类重写后的方法返回类型必须是父类方法返回类型的子类型。</li>
</ul>
<h5 id="6-4-多态">6.4 多态</h5>
<blockquote>
<p>所谓多态，就是指程序中定义的引用变量所指向的具体类型和通过该引用变量调用的方法在编程时并不确定，而是在程序运行期间才确定。</p>
</blockquote>
<p>实现多态的条件：</p>
<ul>
<li>继承：必须存在继承关系</li>
<li>重写：必须存在方法重写</li>
<li>向上转型：父类引用指向子类对象</li>
</ul>
<p><font color = red>当使用多态方式调用方法时，首先检查父类中是否有该方法，如果没有，则编译错误；如果有，再去调用子类的同名方法。</font></p>
<p>多态成员的特点：</p>
<ul>
<li>多态成员变量：编译运行看左边</li>
<li>多态成员方法：编译看左边，运行看右边</li>
</ul>
<p><font color = blue>多态的转型分为向上转型和向下转型两种</font>：</p>
<ul>
<li>
<p>向上转型：多态本身就是向上转型的过程</p>
<blockquote>
<p>使用格式：<code>父类类型 变量名 = new 子类类型();</code></p>
</blockquote>
</li>
<li>
<p>向下转型：一个已经向上转型的子类对象可以使用强制类型转换的格式，将父类引用类型转为子类引用各类型</p>
<blockquote>
<p>使用格式：<code>子类类型 变量名 = (子类类型) 父类类型的变量；</code></p>
</blockquote>
</li>
</ul>
<p><strong>instanceof</strong> 关键字：</p>
<ul>
<li>作用：测试它左边的对象是否是它右边的类的实例</li>
<li><code>object instanceof class</code></li>
</ul>
<h5 id="6-5-static-关键字">6.5 <code>static</code> 关键字</h5>
<p><strong>静态代码块</strong></p>
<p>Java中，静态代码块是写在类中，使用 <code>static</code> 关键字修饰的一段代码块。</p>
<ul>
<li>
<p><font color = red>在类加载时执行，且只执行一次！</font></p>
</li>
<li>
<p>语法格式：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">    <span class="comment">// 代码块</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><strong>匿名代码块</strong></p>
<p>匿名代码块是在类中一段代码。</p>
<ul>
<li>
<p><font color = orange>每次 new 创建新的对象都会执行一次匿名代码块。</font></p>
</li>
<li>
<p>语法格式：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 代码块</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>在程序中，代码块与类的构造方法执行先后顺序：<strong>静态代码块</strong> &gt; <strong>匿名代码块</strong> &gt; <strong>类的构造方法</strong></p>
<p><strong><mark>静态导包</mark></strong></p>
<p>静态导包就是 Java 包的静态导入，是 JDK 1.5 中的新特性。</p>
<p>语法格式：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> <span class="keyword">package</span>.className.fieldName|methodName;</span><br></pre></td></tr></table></figure>
<p>静态导入似乎可以帮助使用静态成员的简单名称来简化程序的编写和读取。示例如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.System.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        out.println(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="6-6-抽象类">6.6 抽象类</h5>
<p><code>abstract</code> 修饰符可以用来修饰方法也可以修饰类。</p>
<ul>
<li>如果修饰方法，那么该方法就是抽象方法</li>
<li>如果修饰类，那么该类就是抽象类</li>
</ul>
<p>注意事项：</p>
<ul>
<li>抽象类中可以没有抽象方法，但是有抽象方法的类一定要声明为抽象类。</li>
<li>抽象类不能使用 <code>new</code> 关键字来创建对象，它是用来让子类继承的。</li>
<li>子类继承抽象类，那么就必须要实现抽象类没有实现的抽象方法，否则该子类也要声明为抽象类。</li>
<li>抽象方法只有方法的声明，没有方法的实现，它是用来让子类实现的。</li>
</ul>
<p><mark>抽象类中存在构造方法！</mark></p>
<h5 id="6-7-接口">6.7 接口</h5>
<p>接口是抽象方法的集合，接口通常以 <code>interface</code> 声明。</p>
<p>语法格式：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">[访问修饰符] interface 接口名称 [extends 其他接口] &#123;</span><br><span class="line">    <span class="comment">// 声明变量</span></span><br><span class="line">    <span class="comment">// 声明方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>接口特性：</p>
<ul>
<li><mark>接口没有构造方法。</mark></li>
<li>接口无法被实例化，但是可以被实现。</li>
</ul>
<ul>
<li>接口是隐式抽象的，当声明一个接口的时候，不必使用 <code>abstract</code> 关键字。</li>
<li>接口中每一个方法也是隐式抽象的，方法会被隐式的指定为 <code>public abstract</code> 。</li>
<li>接口中的方法是不能在接口中实现的，只能由实现接口的类来实现接口中的方法。</li>
<li>一个实现接口的类，必须实现接口内所描述的所有方法，否则就必须声明为抽象类。</li>
<li>接口中可以含有变量，但是接口中的变量会被隐式的指定为 <code>public static final</code> 。</li>
<li>一个接口不能实现（implements）另一个接口，但它可以继承多个其它的接口。</li>
</ul>
<p>一个类可以通过 <code>implements</code> 关键字来实现<font color = red>一个或多个</font>接口。</p>
<p>语法格式：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">[修饰符] class 类名 [extends 父类名] [implements 接口名<span class="number">1</span>, 接口名<span class="number">2</span>, ...] &#123;</span><br><span class="line">    <span class="comment">// 方法实现</span></span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<h5 id="6-8-内部类">6.8 内部类</h5>
<blockquote>
<p>在 Java 中，可以将一个类定义在另一个类里面或者一个方法里面，这样的类称为内部类。</p>
</blockquote>
<p>要访问内部类，可以通过创建外部类的对象，然后创建内部类的对象来实现。</p>
<p>内部类可以随意使用外部类的成员变量<font color = red>（包括私有）</font>而不用生成外部类的对象，这也是内部类的唯一优点。</p>
<p>访问内部类本身的成员变量可用 <code>this.属性名</code>，访问外部类的成员变量需要使用 <code>Out.this.属性名</code>。</p>
<p>如果一个内部类只希望被外部类中的方法操作，那么可以使用 <code>private</code> 声明内部类。</p>
<p>内部类分类：</p>
<ul>
<li>定义在外部类的局部位置上（如方法内）:
<ul>
<li>局部内部类（有类名）</li>
<li>匿名内部类（没有类名）</li>
</ul>
</li>
<li>定义在外部类的成员位置上：
<ul>
<li>成员内部类（没用 <code>static</code> 修饰）</li>
<li>静态内部类（使用 <code>static</code> 修饰）</li>
</ul>
</li>
</ul>
<hr>
<ol>
<li>
<p>局部内部类</p>
<blockquote>
<p>局部内部类是定义在一个方法或者一个作用域中的类</p>
</blockquote>
<p>语法格式：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Outer</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> method &#123;</span><br><span class="line">        <span class="keyword">class</span> <span class="title class_">Inner</span> &#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>特点：</p>
<ul>
<li>可以直接访问外部类的所有成员，<font color = red>包括私有的</font></li>
<li>局部内部类不能有访问修饰符，不能被定义为 <code>static</code></li>
<li>局部内部类不能定义 <code>static</code> 成员</li>
<li>局部内部类可以使用 <code>Outer.this</code> 语法指定访问外部类成员</li>
<li>局部内部类想要使用方法或域中的<mark>局部变量</mark>，该变量必须是 <code>final</code> 的</li>
<li><font color=red>局部内部类只能在类所在的方法中用</font></li>
</ul>
</li>
<li>
<p>匿名内部类</p>
<blockquote>
<p>匿名内部类是定义在外部类的局部位置（比如方法中），并且没有类名。</p>
</blockquote>
<p>特点：</p>
<ul>
<li>
<p>匿名内部类既是一个类的定义，同时它本身也是一个对象</p>
</li>
<li>
<p>可以直接访问外部类的所有成员，<font color = red>包含私有的</font></p>
</li>
<li>
<p>不能添加访问修饰符和 <code>static</code> 修饰符</p>
</li>
<li>
<p><mark>匿名内部类需要依托于其他类或者接口来创建</mark></p>
</li>
<li>
<p><mark>匿名内部类的声明必须是在使用new关键字的时候</mark></p>
</li>
</ul>
</li>
<li>
<p>成员内部类</p>
<blockquote>
<p>成员内部类是定义在类内部，作为类的成员的类。</p>
</blockquote>
<p>语法格式：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Outer</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Inner</span> &#123;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>特点：</p>
<ul>
<li>成员内部类可以被访问修饰符所修饰</li>
<li>成员内部类可以访问外部类的所有成员（包括 <code>private</code> 成员和静态成员）</li>
<li><mark>成员内部类不可以定义 <code>static</code> 成员</mark></li>
</ul>
<p>访问要求：</p>
<ul>
<li><font color = orange>当成员内部类拥有和外部类同名的成员变量或者方法时，会发生隐藏现象，即默认情况下访问的是成员内部类的成员，可以使用 <code>外部类.this.成员</code> 指定访问外部类成员</font></li>
<li>在外部类中如果要访问成员内部类的成员，必须先创建一个成员内部类的对象，再通过指向这个对象的引用来访问</li>
<li>如果要创建成员内部类的对象，前提是必须存在一个外部类的对象</li>
</ul>
<p>创建语法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Outer</span> <span class="variable">o</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Outer</span>();</span><br><span class="line">Outer.<span class="type">Inner</span> <span class="variable">i</span> <span class="operator">=</span> o.<span class="keyword">new</span> <span class="title class_">Inner</span>();</span><br><span class="line">或</span><br><span class="line">Outer.<span class="type">Inner</span> <span class="variable">i</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Outer</span>().<span class="keyword">new</span> <span class="title class_">Inner</span>();</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>静态内部类</p>
<blockquote>
<p><mark>只有成员内部类才能加 <code>static</code> 变成静态内部类</mark>。</p>
</blockquote>
<p>特点：</p>
<ul>
<li>直接访问外部类的所有静态成员，<font color = red>包含私有的</font>，但不能直接访问非静态成员</li>
<li>可以添加任意访问修饰符</li>
<li>因为内部类被静态化，因此 <code>Outer.Inner</code> 可以当做一个整体看，可以直接 <code>new</code> 出内部类的对象</li>
</ul>
<p>创建语法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Outer.<span class="type">Inner</span> <span class="variable">i</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Outer</span>.Inner();</span><br></pre></td></tr></table></figure>
</li>
</ol>
<hr>
]]></content>
      <categories>
        <category>Java 学习</category>
      </categories>
  </entry>
  <entry>
    <title>Blog 美化 | 导航栏添加天气组件</title>
    <url>/posts/b168c33/</url>
    <content><![CDATA[<h4 id="1-和风天气小组件">1. 和风天气小组件</h4>
<blockquote>
<p>参考：<a href="https://cnhuazhu.top/butterfly/2021/02/24/Hexo%E9%AD%94%E6%94%B9/Hexo%E5%9C%A8%E9%A1%B6%E9%83%A8%E5%A2%9E%E5%8A%A0%E5%A4%A9%E6%B0%94%E5%B0%8F%E9%83%A8%E4%BB%B6/">Hexo在顶部增加天气小部件 | 花猪</a></p>
</blockquote>
<h4 id="2-心知天气小组件">2. 心知天气小组件</h4>
<blockquote>
<p>参考：<a href="https://blog.csdn.net/qq_51604330/article/details/118000200">Hexo-Butterfly添加天气插件 | 半生瓜のblog</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Blog 美化</category>
      </categories>
  </entry>
  <entry>
    <title>如何在另一台设备中快速上手 Hexo 项目</title>
    <url>/posts/f70e1b7/</url>
    <content><![CDATA[<h3 id="1-环境搭建">1. 环境搭建</h3>
<ul>
<li>
<p>安装 VS Code</p>
</li>
<li>
<p>安装 Node.js 和 npm<br>
<a href="https://blog.csdn.net/WHF__/article/details/129362462">安装教程</a>（❗<font color = gray>最新淘宝镜像地址：<code>https://registry.npmmirror.com</code></font>）</p>
</li>
<li>
<p>安装 Git</p>
<ul>
<li>设置 Git 的用户名和邮箱（与 Github 一致）</li>
<li>配置 SSH</li>
</ul>
</li>
</ul>
<h3 id="2-项目配置">2. 项目配置</h3>
<ul>
<li>
<p>安装 Hexo 脚手架</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>从 Github 下载 Hexo 项目代码</p>
</li>
<li>
<p>安装 package.json 文件中所有工具</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>初始化 Git 仓库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>添加远程仓库并命名为 origin</p>
<img src="/posts/f70e1b7/ADD_REMOTE.png" class="">
</li>
<li>
<p>本地仓库关联 Github 仓库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git pull origin main</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <categories>
        <category>软件配置</category>
      </categories>
  </entry>
  <entry>
    <title>SQL 连接（JOIN）</title>
    <url>/posts/3b50e134/</url>
    <content><![CDATA[<p>连接方式分类：</p>
<img src="/posts/3b50e134/join.png" class="">
<ul>
<li>
<p><strong>内连接</strong><br>
在连接结果中会舍弃掉不满足连接条件的元组</p>
<ol>
<li>
<p><font color=blue>等值连接</font></p>
<blockquote>
<p>前提：两个关系必须要有相同的属性列，如果没有就谈不上等值连接</p>
</blockquote>
<p>在两个关系的笛卡尔积中，对于相同的属性列，结果仅保留属性值相同的元组</p>
</li>
<li>
<p><font color=blue>自然连接</font><br>
一种特殊的等值连接，在等值连接的基础上把重复的属性列去掉</p>
</li>
</ol>
</li>
<li>
<p><strong>外连接</strong><br>
如果希望不满足连接条件的元组也出现在连接结果当中，则可以通过外连接来实现</p>
<ol>
<li>
<p><font color=blue>左连接</font><br>
在自然连接的基础上，加上左边表上不包含自然连接中所含元组（行）的元组，没有属性的列补空值</p>
</li>
<li>
<p><font color=blue>右连接</font><br>
在自然连接的基础上，加上右边表上不包含自然连接中所含元组（行）的元组，没有属性的列补空值</p>
</li>
<li>
<p><font color=blue>全连接</font><br>
左连接+右连接</p>
</li>
</ol>
</li>
</ul>
<blockquote>
<p><em>Tip：<strong>在连接查询中，通常不用 WHERE 而是用 ON，因为 WHERE 没有 ON 效率高。</strong></em></p>
</blockquote>
<p><em>参考资料：</em></p>
<blockquote>
<ol>
<li><a href="https://blog.csdn.net/m0_46515170/article/details/106216689?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-1-106216689-blog-80682821.235%5Ev43%5Econtrol&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-1-106216689-blog-80682821.235%5Ev43%5Econtrol&amp;utm_relevant_index=2">关系代数之专门的关系运算（连接）</a></li>
<li><a href="https://blog.csdn.net/f_kld/article/details/77168351">关系代数运算之连接</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/46037197">图解 SQL 中各种连接 JOIN</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>SQL</category>
      </categories>
  </entry>
  <entry>
    <title>暂退法（Dropout）笔记</title>
    <url>/posts/27f8298d/</url>
    <content><![CDATA[<ol>
<li>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mi>r</mi><mi>o</mi><mi>p</mi><mi>o</mi><mi>u</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">Dropout</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Dro</span><span class="mord mathnormal">p</span><span class="mord mathnormal">o</span><span class="mord mathnormal">u</span><span class="mord mathnormal">t</span></span></span></span> 方法一般在<font color=red>训练</font>过程中使用，在<font color=blue>测试</font>时一般不用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mi>r</mi><mi>o</mi><mi>p</mi><mi>o</mi><mi>u</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">Dropout</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Dro</span><span class="mord mathnormal">p</span><span class="mord mathnormal">o</span><span class="mord mathnormal">u</span><span class="mord mathnormal">t</span></span></span></span>。</p>
</li>
<li>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mi>r</mi><mi>o</mi><mi>p</mi><mi>o</mi><mi>u</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">Dropout</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Dro</span><span class="mord mathnormal">p</span><span class="mord mathnormal">o</span><span class="mord mathnormal">u</span><span class="mord mathnormal">t</span></span></span></span> 方法不改变输入的期望值，推导如下：</p>
</li>
</ol>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>h</mi><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo><mspace width="1em"/><mtext>with probability </mtext><mi>p</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><msub><mi>h</mi><mi>i</mi></msub><mrow><mn>1</mn><mo>−</mo><mi>p</mi></mrow></mfrac><mo separator="true">,</mo><mspace width="1em"/><mtext>otherwize</mtext></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">h^{\prime}_i = \begin{cases}
0, \quad \text{with probability }p \\
\frac{h_i}{1-p}, \quad \text{otherwize}
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0489em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7146em;"><span style="top:-3.7146em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord text"><span class="mord">with probability </span></span><span class="mord mathnormal">p</span></span></span><span style="top:-2.2746em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8962em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">p</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4811em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord text"><span class="mord">otherwize</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2146em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi mathvariant="double-struck">E</mi><mo stretchy="false">[</mo><msubsup><mi>h</mi><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo stretchy="false">]</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>p</mi><mo>×</mo><mn>0</mn><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><mo stretchy="false">)</mo><mo>×</mo><mfrac><msub><mi>h</mi><mi>i</mi></msub><mrow><mn>1</mn><mo>−</mo><mi>p</mi></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>h</mi><mi>i</mi></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*}
\mathbb{E}[h^{\prime}_i] &amp;=  p \times 0 + (1 - p) \times \frac{h_i}{1 - p} \\
&amp;= h_i
\end{align*}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.0519em;vertical-align:-1.7759em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.2759em;"><span style="top:-4.2759em;"><span class="pstrut" style="height:3.3714em;"></span><span class="mord"><span class="mord mathbb">E</span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span><span style="top:-2.2555em;"><span class="pstrut" style="height:3.3714em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.7759em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.2759em;"><span style="top:-4.2759em;"><span class="pstrut" style="height:3.3714em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">p</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.2555em;"><span class="pstrut" style="height:3.3714em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.7759em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>参考资料：</p>
<blockquote>
<ol>
<li>
<p><a href="https://blog.csdn.net/weixin_49191101/article/details/131679882">【Dive into Deep Learning |动手学深度学习（李沐）】4.6 暂退法(Dropout)–学习笔记</a></p>
</li>
<li>
<p><a href="https://zh-v2.d2l.ai/chapter_multilayer-perceptrons/dropout.html">4.6. 暂退法（Dropout） — 动手学深度学习 2.0.0 documentation</a></p>
</li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>NLP</category>
        <category>深度学习</category>
      </categories>
  </entry>
  <entry>
    <title>机器学习 | 基础概念</title>
    <url>/posts/5cf718ba/</url>
    <content><![CDATA[<h3 id="1、什么是机器学习">1、什么是机器学习</h3>
<p>机器学习是让计算机通过数据学习，从中发现模式和规律，并利用这些学习来做出预测或进行决策的过程。它使用统计学和算法技术来构建模型，通过对大量数据的训练和优化来提高模型的准确性和性能。</p>
<p>机器学习可以分为以下几个关键要素：</p>
<ul>
<li>
<p><strong>数据</strong></p>
<p>数据是机器学习的基础，算法通过分析和处理大量的数据来学习模式和规律。</p>
<p>数据可以是<mark>结构化数据</mark>（如表格数据）或<mark>非结构化数据</mark>（如文本、图像、音频等）。</p>
</li>
</ul>
<ul>
<li>
<p><strong>特征提取</strong></p>
<p>特征是对数据进行描述和表示的属性或指标，用于训练模型和进行预测。</p>
</li>
<li>
<p><strong>模型构建</strong></p>
<p>机器学习算法利用数据和特征来构建数学模型.</p>
</li>
<li>
<p><strong>训练和优化</strong></p>
<p>通过使用训练数据，机器学习模型通过调整模型参数和优化算法来学习数据中的模式和规律。</p>
</li>
<li>
<p><strong>预测和推断</strong></p>
<p>模型通过输入新的数据来做出预测，根据学习到的模式和规律来进行决策或分类。</p>
</li>
</ul>
<h3 id="2、机器学习用来干什么">2、机器学习用来干什么</h3>
<p>机器学习在许多领域有广泛的应用，包括：</p>
<ul>
<li>
<p><strong>图像和语音识别</strong></p>
<p>识别和分类图像中的对象、识别人脸、进行文字识别，还可以转录语音为文本，实现语音助手和语音指令的理解。</p>
</li>
<li>
<p><strong>自然语言处理</strong></p>
<p>用于文本分类、情感分析、机器翻译、问题回答等任务，帮助计算机理解和处理人类语言。</p>
</li>
<li>
<p><strong>推荐系统</strong></p>
<p>根据用户的历史行为和兴趣，为用户推荐个性化的产品、内容或服务。</p>
</li>
<li>
<p><strong>预测和分类</strong></p>
<p>根据历史数据和特征来预测未来事件的可能结果，并对数据进行分类。例如预测股票市场走势、天气预报、销售趋势、客户行为等。</p>
</li>
<li>
<p><strong>欺诈检测和安全</strong></p>
<p>用于检测和预防欺诈行为。例如信用卡欺诈检测、网络入侵检测和垃圾邮件过滤。</p>
</li>
<li>
<p><strong>医学诊断</strong></p>
<p>辅助医生进行诊断和预测疾病风险。</p>
</li>
</ul>
<p>除上述应用外，机器学习还广泛应用于金融、交通、能源、制造业等领域，用于数据分析、优化流程、改进决策等。</p>
<h3 id="3、什么是数据集">3、什么是数据集</h3>
<p>数据集是指在机器学习和数据科学中用于训练、评估和验证模型的数据的集合。数据集由一组相关的数据样本组成，每个数据样本都包含一组特征和对应的标签或目标值。</p>
<p>数据集可以分为以下几种类型：</p>
<ol>
<li>
<p><strong>训练集（Training Set）</strong></p>
<p>训练集是用于训练机器学习模型的数据集。通过对训练集进行模型训练，机器学习模型可以学习到数据的模式和规律。</p>
</li>
<li>
<p><strong>验证集（Validation Set）</strong></p>
<p>验证集是用于调整和优化模型超参数、选择最佳模型或进行模型选择的数据集。在训练过程中，通过使用验证集来评估模型的性能和泛化能力，并根据验证集上的表现进行调整。</p>
</li>
<li>
<p><strong>测试集（Test Set）</strong></p>
<p>测试集是用于评估训练好的模型在未见过的数据上的性能和泛化能力的数据集。测试集是独立于训练集和验证集的数据，用于模拟模型在实际应用场景中的表现。</p>
</li>
</ol>
<h3 id="4、机器学习算法分类">4、机器学习算法分类</h3>
<ul>
<li>
<p><strong>监督学习（Supervised Learning）</strong></p>
<ul>
<li>
<p>回归（Regression）</p>
<p>监督学习算法使用带有标签的训练数据来学习输入特征与<mark>连续型</mark>目标变量之间的关系。</p>
<p>回归模型的目标是根据输入特征<font color = blue>预测出一个连续值</font>。</p>
</li>
<li>
<p>分类（Classification）</p>
<p>监督学习算法使用带有标签的训练数据来学习输入特征与<mark>离散型</mark>目标变量之间的关系。</p>
<p>分类模型的目标是根据输入特征<font color = blue>将数据分为不同的类别或标签</font>。</p>
</li>
</ul>
</li>
<li>
<p><strong>无监督学习（Unsupervised Learning）</strong></p>
<ul>
<li>聚类（Clustering）</li>
<li>异常检测（Anomaly detection）</li>
<li>降维（Dimensionality reduction）</li>
<li>密度估计（Density Estimation）</li>
</ul>
</li>
<li>
<p><strong>强化学习（Reinforcement Learning）</strong></p>
</li>
</ul>
<h3 id="5、经典的机器学习算法">5、经典的机器学习算法</h3>
<ul>
<li>线性回归（Linear Regression）</li>
<li>逻辑回归（Logistic Regression）</li>
<li>决策树（Decision Tree）</li>
<li>随机森林（Random Forest）</li>
<li>支持向量机（Support Vector Machine，SVM）</li>
<li>神经网络（Neural Networks）</li>
<li>朴素贝叶斯（Naive Bayes）</li>
<li>K近邻算法（K-Nearest Neighbors，KNN）</li>
<li>K均值聚类（K-Means Clustering）</li>
<li>主成分分析（Principal Component Analysis，PCA）</li>
</ul>
]]></content>
      <categories>
        <category>NLP</category>
        <category>机器学习</category>
      </categories>
  </entry>
  <entry>
    <title>简单操作实现 StarUML 激活 | 仅供学习使用</title>
    <url>/posts/a8921472/</url>
    <content><![CDATA[<h3 id="1-下载安装-StarUML">1. 下载安装 StarUML</h3>
<blockquote>
<p>下载地址：<a href="https://staruml.io/download" title="StarUML">https://staruml.io/download</a></p>
</blockquote>
<h3 id="2-npm-安装-asar-工具">2. npm 安装 asar 工具</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g asar</span><br></pre></td></tr></table></figure>
<h3 id="3-解压-app-asar-文件">3. 解压 app.asar 文件</h3>
<ul>
<li>
<p><strong>定位 app.asar 文件路径</strong><br>
C:\Program Files\StarUML\resources</p>
</li>
<li>
<p><strong>解压 app.asar 文件<font color = red>（💥以管理员身份运行）</font></strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">asar extract app.asar ./asar/</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="4-修改-license-manager-js-文件">4. 修改 license-manager.js 文件</h3>
<ul>
<li>
<p><strong>定位 license-manager.js 文件位置</strong><br>
C:\Program Files\StarUML\resources\asar\src\engine</p>
</li>
<li>
<p><strong>找到文件中以下代码段并修改</strong><br>
源代码如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">checkLicenseValidity () &#123;</span><br><span class="line">  <span class="keyword">if</span> (packageJSON.<span class="property">config</span>.<span class="property">setappBuild</span>) &#123;</span><br><span class="line">    <span class="title function_">setStatus</span>(<span class="variable language_">this</span>, <span class="literal">true</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">validate</span>().<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="title function_">setStatus</span>(<span class="variable language_">this</span>, <span class="literal">true</span>)</span><br><span class="line">    &#125;, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="title function_">setStatus</span>(<span class="variable language_">this</span>, <span class="literal">false</span>)</span><br><span class="line">      <span class="title class_">UnregisteredDialog</span>.<span class="title function_">showDialog</span>()</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>修改后代码：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">checkLicenseValidity () &#123;</span><br><span class="line">  <span class="keyword">if</span> (packageJSON.<span class="property">config</span>.<span class="property">setappBuild</span>) &#123;</span><br><span class="line">    <span class="title function_">setStatus</span>(<span class="variable language_">this</span>, <span class="literal">true</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">validate</span>().<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="title function_">setStatus</span>(<span class="variable language_">this</span>, <span class="literal">true</span>)</span><br><span class="line">    &#125;, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// setStatus(this, false)</span></span><br><span class="line">      <span class="title function_">setStatus</span>(<span class="variable language_">this</span>, <span class="literal">true</span>)</span><br><span class="line">      <span class="comment">// UnregisteredDialog.showDialog()</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="5-重新压缩，替换原来的-app-asar-font-color-red-（💥以管理员身份运行）-font">5. 重新压缩，替换原来的 app.asar<font color = red>（💥以管理员身份运行）</font></h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">asar pack asar app.asar</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>软件配置</category>
      </categories>
  </entry>
  <entry>
    <title>详解 Hierarchical Softmax</title>
    <url>/posts/66b1af6d/</url>
    <content><![CDATA[<p>内容通俗易懂，故在此标记，以防忘记</p>
<blockquote>
<p>[1] <a href="https://blog.csdn.net/weixin_55073640/article/details/123470736">基于分层softmax的CBoW模型详解</a><br>
[2] <a href="https://blog.csdn.net/qq_40859560/article/details/109211723">NLP篇【02】白话Word2vec原理以及层softmax、负采样的实现</a></p>
</blockquote>
]]></content>
      <categories>
        <category>NLP</category>
        <category>机器学习</category>
      </categories>
  </entry>
  <entry>
    <title>深度学习笔记</title>
    <url>/posts/810a0813/</url>
    <content><![CDATA[<h3 id="1-什么是机器学习">1. 什么是机器学习</h3>
<p>机器学习算法是一类从数据中自动分析获得规律，并利用规律对<mark>未知数据</mark>进行预测的算法。</p>
<h3 id="2-机器学习要素">2. 机器学习要素</h3>
<h4 id="2-1-数据">2.1 数据</h4>
<p>在构建训练集的时候，不仅要注意数据的质量，也要保证数据的数量</p>
<h4 id="2-2-模型">2.2 模型</h4>
<p>模型是机器学习的结果，描述从输入到输出的映射关系。</p>
<p>模型本质上是算法+参数的组合。</p>
<h4 id="2-3-学习准则">2.3 学习准则</h4>
<p>机器学习通过损失函数来量化模型预测值与标签真实值之间的差异。</p>
<h4 id="2-4-优化算法">2.4 优化算法</h4>
<p>找到一组参数，使样本 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 到映射值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>y</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span></span></span></span> 之间的偏差最小。</p>
<ul>
<li>
<p>凸函数：在定义域中，任意两点连线组成的线段，都在这两点的函数曲线（曲面）的上方。<br>
凸函数只有一个全局最优解。</p>
</li>
<li>
<p>非凸函数<br>
非凸函数可能存在多个最优解。</p>
</li>
</ul>
<h3 id="3-机器学习类型">3. 机器学习类型</h3>
<h4 id="3-1-监督学习">3.1 监督学习</h4>
<p>构建从输入 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 到输出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span> 之间的映射关系。</p>
<ul>
<li>分类</li>
<li>回归</li>
</ul>
<h4 id="3-2-半监督学习">3.2 半监督学习</h4>
<p>用少量带有标签的训练数据和大量没有标签的训练数据来获取映射函数。</p>
<h4 id="3-3-无监督学习">3.3 无监督学习</h4>
<p>希望机器可以在无标签的情况下，自己挖掘出数据的内在结构。</p>
<h4 id="3-4-强化学习">3.4 强化学习</h4>
<p>开发一个智能体，通过环境的反馈来提高决策的正确性。</p>
<h3 id="4-数据集划分">4. 数据集划分</h3>
<h3 id="4-1-训练集">4.1 训练集</h3>
<p>参与模型训练</p>
<h3 id="4-2-验证集">4.2 验证集</h3>
<p>从一些超参数中找到最优的超参数组合</p>
<h3 id="4-3-测试集">4.3 测试集</h3>
<p>不能参与训练，只对最终模型进行评估</p>
<p>对于一般规模的数据集来说，常规的划分方式是让训练集、验证集和测试集分别占总数据量的 60%、20% 和 20%，或占 80%、10% 和 10%；但当数据集的数量比较庞大，以上方法不可取，验证集和测试集各取 10,000 即可。</p>
<h3 id="5-交叉验证">5. 交叉验证</h3>
<p>调节超参数的具体过程如下：</p>
<ul>
<li>超参数值作为横坐标，模型评估值作为纵坐标</li>
<li>模型评估值随着超参数值的变化而变化，进而得到一条曲线</li>
<li>曲线上评估值最高的点对应的超参数值就是要找的最优超参数</li>
</ul>
<p>“交叉”是指训练集和验证集之间的数据相互转换，测试集保持不动。</p>
<p>K 折交叉验证：</p>
<ul>
<li>把训练集随机分成 k 份，每次取其中 1 份做验证集，剩下的 k-1 份还是训练集</li>
<li>之后再取第 2 份做验证集，剩下的 k-1 份也还是训练集</li>
<li>经过 k 次之后，所有的数据都参与了训练，也都参与了验证，得到了 k 条超参数-评估值曲线</li>
<li>把 k 条曲线取均值，得到一条均值曲线</li>
<li>在均值曲线上，评估值最高的点对应的超参数值就是要找的最优超参数</li>
</ul>
<p>留一交叉验证：</p>
<ul>
<li>k 与数据的个数相等</li>
<li>主要用于样本量极少的情况</li>
</ul>
<h3 id="6-标量、向量、矩阵">6. 标量、向量、矩阵</h3>
<h4 id="6-1-标量">6.1 标量</h4>
<p>0 维的数组叫做标量。</p>
<h4 id="6-2-向量">6.2 向量</h4>
<p>1 维的数组叫做向量，也叫矢量。</p>
<ul>
<li>
<p>向量的长度，也叫向量的模长，一般采用二范数计算方法（向量中所有元素平方和的开方就是模长）：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mover accent="true"><mi>a</mi><mo>⃗</mo></mover><mi mathvariant="normal">∣</mi><msub><mi mathvariant="normal">∣</mi><mn>2</mn></msub><mo>=</mo><mroot><mrow><msubsup><mi>a</mi><mn>1</mn><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>a</mi><mn>2</mn><mn>2</mn></msubsup><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msubsup><mi>a</mi><mi>n</mi><mn>2</mn></msubsup></mrow><mn>2</mn></mroot></mrow><annotation encoding="application/x-tex">||\vec{a}||_2 = \sqrt[2]{a_1^2+a_2^2...a_n^2}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣∣</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">a</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.84em;vertical-align:-0.5413em;"></span><span class="mord sqrt"><span class="root"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7766em;"><span style="top:-2.9544em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size6 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2987em;"><span class="svg-align" style="top:-3.8em;"><span class="pstrut" style="height:3.8em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7959em;"><span style="top:-2.4337em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.0448em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2663em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7959em;"><span style="top:-2.4337em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.0448em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2663em;"><span></span></span></span></span></span></span><span class="mord">...</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.2587em;"><span class="pstrut" style="height:3.8em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.88em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='1.88em' viewBox='0 0 400000 1944' preserveAspectRatio='xMinYMin slice'><path d='M983 90
l0 -0
c4,-6.7,10,-10,18,-10 H400000v40
H1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7
s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744
c-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30
c26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722
c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5
c53.7,-170.3,84.5,-266.8,92.5,-289.5z
M1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5413em;"><span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>
<p>向量的点乘，也叫向量的内积。即对应元素相乘，然后求和，结果为标量；也可以用如下公式</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mover accent="true"><mi>a</mi><mo>⃗</mo></mover><mo>⋅</mo><mover accent="true"><mi>b</mi><mo>⃗</mo></mover><mo>=</mo><mi mathvariant="normal">∣</mi><mover accent="true"><mi>a</mi><mo>⃗</mo></mover><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mover accent="true"><mi>b</mi><mo>⃗</mo></mover><mi mathvariant="normal">∣</mi><mi>cos</mi><mo>⁡</mo><mi>θ</mi></mrow><annotation encoding="application/x-tex">\vec{a} \cdot \vec{b} = |\vec{a}||\vec{b}|\cos\theta
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.714em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">a</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9774em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9774em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">b</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2274em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">a</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mord">∣∣</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9774em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">b</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span></span></p>
</li>
</ul>
<h4 id="6-3-矩阵">6.3 矩阵</h4>
<p>矩阵由行和列组成。</p>
<h3 id="7-概率论基础">7. 概率论基础</h3>
<p>机器学习与深度学习的根本就是发现特定事件的统计规律。</p>
<ul>
<li>联合概率表示事件 A 和事件 B 同时发生的概率。</li>
<li>高斯分布</li>
<li>条件概率是指一个事件在另一个事件发生的条件下发生的概率。<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mi mathvariant="normal">∣</mi><mi>B</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mo separator="true">,</mo><mi>B</mi><mo stretchy="false">)</mo></mrow><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>B</mi><mo stretchy="false">)</mo></mrow></mfrac><mtext>（</mtext><mi>A</mi><mtext>表示事件，</mtext><mi>B</mi><mtext>表示条件）</mtext></mrow><annotation encoding="application/x-tex">P(A|B) = \frac{P(A, B)}{P(B)}（A 表示事件，B 表示条件）
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord cjk_fallback">（</span><span class="mord mathnormal">A</span><span class="mord cjk_fallback">表示事件，</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord cjk_fallback">表示条件）</span></span></span></span></span></p>
</li>
</ul>
<h3 id="8-线性回归">8. 线性回归</h3>
<p>通用训练流程：</p>
<ul>
<li>将训练数据输入模型；</li>
<li>经过计算得到输出；</li>
<li>将模型的输出值和数据的标签值进行对比，计算损失；</li>
<li>通过损失，优化模型参数；</li>
<li>更新模型参数，继续上述过程。经过数次迭代后，最终得到最优的模型参数作为训练结果。</li>
</ul>
<p>线性回归模型是构建深度学习的基础，神经网络的每一层都包含了一个线性模型。</p>
<p>线性方程：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>y</mi><mo>=</mo><msup><mi>w</mi><mi>T</mi></msup><mi>x</mi><mo>+</mo><mi>b</mi><mtext>（</mtext><mi>y</mi><mtext>是输出，</mtext><mi>w</mi><mtext>是权重向量，</mtext><mi>x</mi><mtext>是特征向量，</mtext><mi>b</mi><mtext>是偏置）</mtext></mrow><annotation encoding="application/x-tex">y = w^Tx + b（y 是输出，w 是权重向量，x 是特征向量，b 是偏置）
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9747em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">b</span><span class="mord cjk_fallback">（</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord cjk_fallback">是输出，</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord cjk_fallback">是权重向量，</span><span class="mord mathnormal">x</span><span class="mord cjk_fallback">是特征向量，</span><span class="mord mathnormal">b</span><span class="mord cjk_fallback">是偏置）</span></span></span></span></span></p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span> 默认为列向量，为了能和同是列向量的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 进行计算，因此将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span> 进行转置</li>
</ul>
<p><mark>平方损失函数</mark>是线性回归中最常见的损失函数：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">(</mo><mover accent="true"><mi>y</mi><mo>^</mo></mover><mo>−</mo><mi>y</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">L(w) = \frac{1}{2}(\hat{y} - y)^2
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>均方差损失：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>n</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo stretchy="false">(</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><msup><mi>w</mi><mi>T</mi></msup><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mspace linebreak="newline"></mspace><mtext>（其中</mtext><mi>w</mi><mtext>为增广权重向量，形如</mtext><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>w</mi><mn>1</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>w</mi><mn>2</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>⋅</mo><mo>⋅</mo><mo>⋅</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>w</mi><mi>n</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>b</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mtext>；</mtext><mi>x</mi><mtext>为增广特征向量，形如</mtext><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>x</mi><mn>1</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>x</mi><mn>2</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>⋅</mo><mo>⋅</mo><mo>⋅</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>x</mi><mi>n</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mtext>）</mtext></mrow><annotation encoding="application/x-tex">L(w) = \frac{1}{2n}\sum_{i=1}^n(\hat{y}^{(i)} - w^Tx^{(i)})^2 \\
（其中 w 为增广权重向量，形如\left[\begin{matrix}w_1 \\ w_2 \\ \cdot\cdot\cdot \\ w_n \\ b\end{matrix}\right]；
x 为增广特征向量，形如\left[\begin{matrix}x_1 \\ x_2 \\ \cdot\cdot\cdot \\ x_n \\ 1\end{matrix}\right]）
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:6em;vertical-align:-2.75em;"></span><span class="mord cjk_fallback">（其中</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord cjk_fallback">为增广权重向量，形如</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:8em;"></span><span style="width:0.667em;height:6.000em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.667em' height='6.000em' viewBox='0 0 667 6000'><path d='M403 1759 V84 H666 V0 H319 V1759 v2400 v1759 h347 v-84
H403z M403 1759 V0 H319 V1759 v2400 v1759 h84z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">⋅</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-0.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:8em;"></span><span style="width:0.667em;height:6.000em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.667em' height='6.000em' viewBox='0 0 667 6000'><path d='M347 1759 V0 H0 V84 H263 V1759 v2400 v1759 H0 v84 H347z
M347 1759 V0 H263 V1759 v2400 v1759 h84z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">；</span><span class="mord mathnormal">x</span><span class="mord cjk_fallback">为增广特征向量，形如</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:8em;"></span><span style="width:0.667em;height:6.000em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.667em' height='6.000em' viewBox='0 0 667 6000'><path d='M403 1759 V84 H666 V0 H319 V1759 v2400 v1759 h347 v-84
H403z M403 1759 V0 H319 V1759 v2400 v1759 h84z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">⋅</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-0.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:8em;"></span><span style="width:0.667em;height:6.000em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.667em' height='6.000em' viewBox='0 0 667 6000'><path d='M347 1759 V0 H0 V84 H263 V1759 v2400 v1759 H0 v84 H347z
M347 1759 V0 H263 V1759 v2400 v1759 h84z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">）</span></span></span></span></span></p>
<p>基本求导知识：</p>
<ul>
<li>对向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>x</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">^</span></span></span></span></span></span></span></span></span></span> 的二范式平方求导：<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mover accent="true"><mi>x</mi><mo>^</mo></mover><mi mathvariant="normal">∣</mi><msubsup><mi mathvariant="normal">∣</mi><mn>2</mn><mn>2</mn></msubsup></mrow></mrow><mrow><mi mathvariant="normal">∂</mi><mi>x</mi></mrow></mfrac><mo>=</mo><mn>2</mn><mi>x</mi></mrow><annotation encoding="application/x-tex">\frac{\partial{||\hat{x}||_2^2}}{\partial{x}} = 2x
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.1771em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4911em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord">∣∣</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span><span class="mord mathnormal">x</span></span></span></span></span></p>
</li>
<li>对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 乘向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>x</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">^</span></span></span></span></span></span></span></span></span></span> 求导：<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mrow><mi>A</mi><mi>x</mi></mrow></mrow><mrow><mi mathvariant="normal">∂</mi><mi>x</mi></mrow></mfrac><mo>=</mo><msup><mi>A</mi><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">\frac{\partial{Ax}}{\partial{x}} = A^T
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">A</span><span class="mord mathnormal">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8913em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></span></p>
</li>
</ul>
<p>损失函数求导：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo></mrow></mrow><mrow><mi mathvariant="normal">∂</mi><mi>w</mi></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mrow><mfrac><mn>1</mn><mrow><mn>2</mn><mi>n</mi></mrow></mfrac><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>Y</mi><mo>−</mo><msup><mi>X</mi><mi>T</mi></msup><mi>w</mi><mi mathvariant="normal">∣</mi><msubsup><mi mathvariant="normal">∣</mi><mn>2</mn><mn>2</mn></msubsup></mrow></mrow><mrow><mi mathvariant="normal">∂</mi><mi>w</mi></mrow></mfrac><mo>=</mo><mn>2</mn><mo>⋅</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>n</mi></mrow></mfrac><mo>⋅</mo><mi>X</mi><mo>⋅</mo><mo stretchy="false">(</mo><mi>Y</mi><mo>−</mo><msup><mi>X</mi><mi>T</mi></msup><mi>w</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><mo>⋅</mo><mi>X</mi><mo>⋅</mo><mo stretchy="false">(</mo><mi>Y</mi><mo>−</mo><msup><mi>X</mi><mi>T</mi></msup><mi>w</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\frac{\partial{L(w)}}{\partial{w}} = \frac{\partial{\frac{1}{2n}||Y - X^Tw||_2^2}}{\partial{w}} = 2 \cdot \frac{1}{2n} \cdot X \cdot (Y - X^Tw) = \frac{1}{n} \cdot X \cdot (Y - X^Tw)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.113em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.2661em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5801em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.735em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">∣∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1413em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1413em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span></span></p>
<p>令导数为 0，求参数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span> 的值：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mn>1</mn><mi>n</mi></mfrac><mo>⋅</mo><mi>X</mi><mo>⋅</mo><mo stretchy="false">(</mo><mi>Y</mi><mo>−</mo><msup><mi>X</mi><mi>T</mi></msup><mi>w</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn><mspace linebreak="newline"></mspace><mi>X</mi><mo>⋅</mo><mi>Y</mi><mo>−</mo><mi>X</mi><mo>⋅</mo><msup><mi>X</mi><mi>T</mi></msup><mo>⋅</mo><mi>w</mi><mo>=</mo><mn>0</mn><mspace linebreak="newline"></mspace><mi>w</mi><mo>=</mo><mo stretchy="false">(</mo><mi>X</mi><mo>⋅</mo><msup><mi>X</mi><mi>T</mi></msup><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>⋅</mo><mi>X</mi><mo>⋅</mo><mi>Y</mi><mspace linebreak="newline"></mspace><mtext>（此时</mtext><mi>w</mi><mtext>为最优模型参数）</mtext></mrow><annotation encoding="application/x-tex">\frac{1}{n} \cdot X \cdot (Y - X^Tw) = 0 \\
X \cdot Y - X \cdot X^T \cdot w = 0 \\
w = (X \cdot X^T )^{-1} \cdot X \cdot Y \\（此时 w 为最优模型参数）
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1413em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8913em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1413em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">（此时</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord cjk_fallback">为最优模型参数）</span></span></span></span></span></p>
<h3 id="9-欠拟合-多项式回归-过拟合-正则化">9. 欠拟合 多项式回归 过拟合 正则化</h3>
<h4 id="9-1-欠拟合">9.1 欠拟合</h4>
<p>由于模型表达能力弱，而无法学习到数据集中的一般性规律，导致拟合结果不佳。</p>
<ul>
<li>可以通过提高模型复杂度解决欠拟合问题</li>
</ul>
<h4 id="9-2-多项式回归">9.2 多项式回归</h4>
<p>解决欠拟合问题</p>
<p>回归方程：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>y</mi><mo>=</mo><msup><mi>w</mi><mi>T</mi></msup><mi>φ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mtext>（</mtext><mi>w</mi><mtext>是参数向量，形如</mtext><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>w</mi><mn>0</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>w</mi><mn>1</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>w</mi><mn>2</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>⋅</mo><mo>⋅</mo><mo>⋅</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>w</mi><mi>m</mi></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mtext>；</mtext><mi>x</mi><mtext>是特征向量，形如</mtext><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>x</mi><mn>1</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>x</mi><mn>2</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>⋅</mo><mo>⋅</mo><mo>⋅</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>x</mi><mi>m</mi></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mtext>，其中</mtext><mi>m</mi><mtext>是多项式的次数）</mtext></mrow><annotation encoding="application/x-tex">y = w^T\varphi(x) \\
（w 是参数向量，形如\left[\begin{matrix}w_0 \\ w_1 \\ w_2 \\ \cdot\cdot\cdot \\ w_m \end{matrix}\right]；x 是特征向量，形如\left[\begin{matrix}1 \\ x_1  \\ x_2 \\ \cdot\cdot\cdot \\ x_m \end{matrix}\right]，其中 m 是多项式的次数）
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1413em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:6em;vertical-align:-2.75em;"></span><span class="mord cjk_fallback">（</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord cjk_fallback">是参数向量，形如</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:8em;"></span><span style="width:0.667em;height:6.000em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.667em' height='6.000em' viewBox='0 0 667 6000'><path d='M403 1759 V84 H666 V0 H319 V1759 v2400 v1759 h347 v-84
H403z M403 1759 V0 H319 V1759 v2400 v1759 h84z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">⋅</span></span></span><span style="top:-0.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:8em;"></span><span style="width:0.667em;height:6.000em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.667em' height='6.000em' viewBox='0 0 667 6000'><path d='M347 1759 V0 H0 V84 H263 V1759 v2400 v1759 H0 v84 H347z
M347 1759 V0 H263 V1759 v2400 v1759 h84z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">；</span><span class="mord mathnormal">x</span><span class="mord cjk_fallback">是特征向量，形如</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:8em;"></span><span style="width:0.667em;height:6.000em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.667em' height='6.000em' viewBox='0 0 667 6000'><path d='M403 1759 V84 H666 V0 H319 V1759 v2400 v1759 h347 v-84
H403z M403 1759 V0 H319 V1759 v2400 v1759 h84z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">⋅</span></span></span><span style="top:-0.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:8em;"></span><span style="width:0.667em;height:6.000em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.667em' height='6.000em' viewBox='0 0 667 6000'><path d='M347 1759 V0 H0 V84 H263 V1759 v2400 v1759 H0 v84 H347z
M347 1759 V0 H263 V1759 v2400 v1759 h84z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">，其中</span><span class="mord mathnormal">m</span><span class="mord cjk_fallback">是多项式的次数）</span></span></span></span></span></p>
<p>多项式回归的损失函数：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>n</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo stretchy="false">(</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><msup><mi>w</mi><mi>T</mi></msup><mi>φ</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">L(w) = \frac{1}{2n}\sum_{i=1}^n(\hat{y}^{(i)} - w^T\varphi(x^{(i)}))^2
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p>
<h4 id="9-3-过拟合">9.3 过拟合</h4>
<p>对于训练样本来说，模型能够精准地预测到每一点的值，但在面对新数据时，预测结果不佳，模型还是没有正确地学习到一般性规律。</p>
<ul>
<li>可以通过降低模型复杂度解决过拟合问题</li>
<li>增加样本数量可以解决过拟合问题</li>
</ul>
<h4 id="9-4-正则化">9.4 正则化</h4>
<p>解决过拟合问题</p>
<p>具体做法：在损失函数中加入正则化项，如下：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>n</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo stretchy="false">(</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><msup><mi>w</mi><mi>T</mi></msup><mi>φ</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><mstyle mathcolor="green"><mfrac><mi>λ</mi><mn>2</mn></mfrac><msup><mi>w</mi><mi>T</mi></msup><mi>w</mi></mstyle><mspace linebreak="newline"></mspace><mtext>（正则化系数</mtext><mi>λ</mi><mtext>是一个超参数）</mtext></mrow><annotation encoding="application/x-tex">L(w) = \frac{1}{2n}\sum_{i=1}^n(\hat{y}^{(i)} - w^T\varphi(x^{(i)}))^2 + \textcolor{green}{\frac{\lambda}{2}w^Tw} \\
（正则化系数 \lambda 是一个超参数）
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord" style="color:green;"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="color:green;"><span class="mord" style="color:green;">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="color:green;border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="color:green;"><span class="mord mathnormal" style="color:green;">λ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord" style="color:green;"><span class="mord mathnormal" style="margin-right:0.02691em;color:green;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight" style="color:green;"><span class="mord mathnormal mtight" style="margin-right:0.13889em;color:green;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02691em;color:green;">w</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord cjk_fallback">（正则化系数</span><span class="mord mathnormal">λ</span><span class="mord cjk_fallback">是一个超参数）</span></span></span></span></span></p>
<h3 id="10-梯度下降法">10 梯度下降法</h3>
<h4 id="10-1-梯度">10.1 梯度</h4>
<ul>
<li>梯度是一个向量</li>
<li>梯度的方向是函数变化最快的方向</li>
<li>梯度的<mark>反方向</mark>即函数下降最快的方向</li>
</ul>
<h4 id="10-2-梯度下降法">10.2 梯度下降法</h4>
<p>迭代过程：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>θ</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><msub><mi>θ</mi><mi>t</mi></msub><mo>−</mo><mi>λ</mi><mo>⋅</mo><mfrac><mrow><mi>d</mi><mi>f</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mi>t</mi></msub><mo stretchy="false">)</mo></mrow><mrow><mi>d</mi><msub><mi>θ</mi><mi>t</mi></msub></mrow></mfrac><mspace linebreak="newline"></mspace><mtext>（参数</mtext><mi>λ</mi><mtext>叫做学习率，用来控制每次更新参数的幅度）</mtext></mrow><annotation encoding="application/x-tex">\theta_{t+1} = \theta_t - \lambda \cdot \frac{df(\theta_t)}{d\theta_t} \\
（参数 \lambda 叫做学习率，用来控制每次更新参数的幅度）
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9028em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">λ</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.263em;vertical-align:-0.836em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">df</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord cjk_fallback">（参数</span><span class="mord mathnormal">λ</span><span class="mord cjk_fallback">叫做学习率，用来控制每次更新参数的幅度）</span></span></span></span></span></p>
<ul>
<li>学习率 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">λ</span></span></span></span> 过小容易导致时间开销大；过大容易导致模型的损失不断震荡，无法收敛到最低点</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">λ</span></span></span></span> 在整个训练过程中并不是一成不变的，需要根据任务的情况进行调整，往往随着训练的进行不断减小。</li>
</ul>
<h4 id="10-3-梯度下降法变种">10.3 梯度下降法变种</h4>
<p>随机梯度下降法：</p>
<ul>
<li>每次只抽取一个训练样本进行梯度计算</li>
</ul>
<p>小批量梯度下降法：</p>
<ul>
<li>每次训练时，选取 n 个样本构成一个小批量，参与参数更新</li>
</ul>
<h3 id="11-线性分类-二分类">11. 线性分类 二分类</h3>
<p>不同特征之间的数量级差异非常大，可以通过归一化进行处理。</p>
<p>通过阈值函数对线性结果进行分类。</p>
<h3 id="12-线性分类-多分类">12. 线性分类 多分类</h3>
<p>“一对多”方法：</p>
<ul>
<li>将多分类问题转化为多个二分类问题</li>
<li>具体做法：
<ul>
<li>遍历每一种类别，找到能将当前类别和其他类别区分开的最优决策函数</li>
<li>在这些决策函数的共同作用下，将样本空间划分成不同区域，从而实现类别划分</li>
</ul>
</li>
<li>”一对多“方法会产生<mark>孤立区域</mark>和<mark>模糊地带</mark>的问题</li>
</ul>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>r</mi><mi>g</mi><mi>m</mi><mi>a</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">argmax</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span></span></span></span> 方法：</p>
<ul>
<li>解决孤立区域和模糊地带的问题</li>
<li>核心思想是对样本在每个类别上进行打分，得分最高的类别作为该样本的类别</li>
<li>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">;</mo><msub><mi>w</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msubsup><mi>w</mi><mi>i</mi><mi>T</mi></msubsup><mi>x</mi><mo>+</mo><msub><mi>b</mi><mi>i</mi></msub><mspace width="1em"/><mi>i</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>1</mn><mo separator="true">,</mo><mo>⋅</mo><mo>⋅</mo><mo>⋅</mo><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">}</mo><mspace linebreak="newline"></mspace><mtext>（</mtext><msub><mi>f</mi><mi>i</mi></msub><mtext>代表第</mtext><mi>i</mi><mtext>个判别函数；</mtext><mi>x</mi><mtext>代表样本）</mtext><mspace linebreak="newline"></mspace><mspace linebreak="newline"></mspace><mi>y</mi><mo>=</mo><mi><munder><mo><mi mathvariant="normal">argmax⁡n</mi><mo>⁡</mo></mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow></munder></mi><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">;</mo><msub><mi>w</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mtext>（</mtext><mi>y</mi><mtext>代表预测类别）</mtext></mrow><annotation encoding="application/x-tex">f_i(x; w_i) = w_i^Tx + b_i \quad i \in \{1, \cdot\cdot\cdot, n \} \\
（f_i 代表第 i 个判别函数；x 代表样本）\\
\\
y=\underset{i=1}{\operatorname*{\overset{n}{\operatorname*{argmax}}}}f_i(x; w_i) \\
（y 代表预测类别）
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1383em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.453em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">⋅</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">}</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord cjk_fallback">（</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">代表第</span><span class="mord mathnormal">i</span><span class="mord cjk_fallback">个判别函数；</span><span class="mord mathnormal">x</span><span class="mord cjk_fallback">代表样本）</span></span><span class="mspace newline"></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.9541em;vertical-align:-0.9221em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.032em;"><span style="top:-2.2098em;margin-left:0em;"><span class="pstrut" style="height:3.032em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.032em;"><span class="pstrut" style="height:3.032em;"></span><span><span class="mop"><span class="mop"><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.032em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mop"><span class="mord mathrm">argmax</span></span></span></span></span><span style="top:-3.6306em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9221em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord cjk_fallback">（</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord cjk_fallback">代表预测类别）</span></span></span></span></span></p>
</li>
</ul>
<h3 id="13-感知机">13. 感知机</h3>
<h4 id="13-1-感知机">13.1 感知机</h4>
<ul>
<li>一种二分类的线性分类模型</li>
<li>又称为人工神经元</li>
</ul>
<p>激活函数是将连续回归值转变成离散值，从而实现类别划分。</p>
<p>感知机中使用的激活函数是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>i</mi><mi>g</mi><mi>n</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">sign()</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mclose">)</span></span></span></span> 符号函数：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">y</mi><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><msub><mi mathvariant="normal">w</mi><mn>1</mn></msub><mo>⋅</mo><msub><mi mathvariant="normal">x</mi><mn>1</mn></msub><mo>+</mo><msub><mi mathvariant="normal">w</mi><mn>2</mn></msub><mo>⋅</mo><msub><mi mathvariant="normal">x</mi><mn>2</mn></msub><mo>+</mo><mi mathvariant="normal">b</mi><mo stretchy="false">)</mo><mo>≤</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><msub><mi mathvariant="normal">w</mi><mn>1</mn></msub><mo>⋅</mo><msub><mi mathvariant="normal">x</mi><mn>1</mn></msub><mo>+</mo><msub><mi mathvariant="normal">w</mi><mn>2</mn></msub><mo>⋅</mo><msub><mi mathvariant="normal">x</mi><mn>2</mn></msub><mo>+</mo><mi mathvariant="normal">b</mi><mo stretchy="false">)</mo><mo>&gt;</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">{\mathrm{y = 
\begin{cases}
-1&amp;&amp;(w_1 \cdot x_1 + w_2 \cdot x_2 + b) \le 0 \\
1&amp;&amp;(w_1 \cdot x_1 + w_2 \cdot x_2 + b) \gt 0
\end{cases}
}}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="mord"><span class="mord"><span class="mord mathrm" style="margin-right:0.01389em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></span></span></p>
<h4 id="13-2-损失函数">13.2 损失函数</h4>
<p>为了得到连续可导的损失函数，感知机选择用误分类样本到决策函数的距离来衡量模型的偏差。</p>
<ul>
<li>单个误分类样本到决策函数的距离：</li>
</ul>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mn>1</mn><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>w</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><mi mathvariant="normal">∣</mi><mi>w</mi><mo>⋅</mo><msub><mi>x</mi><mn>0</mn></msub><mo>+</mo><mi>b</mi><mi mathvariant="normal">∣</mi><mstyle mathcolor="red"><mo>→</mo></mstyle><mfrac><mn>1</mn><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>w</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><mo stretchy="false">(</mo><mo>−</mo><msub><mi>y</mi><mn>0</mn></msub><mo>⋅</mo><mo stretchy="false">(</mo><mi>w</mi><mo>⋅</mo><msub><mi>x</mi><mn>0</mn></msub><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\frac{1}{||w||}\vert w \cdot x_0 + b \vert \textcolor{red}{\rightarrow} \frac{1}{||w||} (-y_0 \cdot (w \cdot x_0 + b))
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.2574em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣∣</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">∣∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel" style="color:red;">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.2574em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣∣</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">∣∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">))</span></span></span></span></span></p>
<ul>
<li>所有误分类样本到决策函数的距离和：</li>
</ul>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo>−</mo><mfrac><mn>1</mn><mrow><mi mathvariant="normal">∥</mi><mi>w</mi><mi mathvariant="normal">∥</mi></mrow></mfrac><munder><mo>∑</mo><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>∈</mo><mi>M</mi></mrow></munder><msub><mi>y</mi><mi>i</mi></msub><mo>⋅</mo><mo stretchy="false">(</mo><mi>w</mi><mo>⋅</mo><msub><mi>x</mi><mi>i</mi></msub><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mtext>（</mtext><mi>M</mi><mtext>为误分类样本集）</mtext></mrow><annotation encoding="application/x-tex">-\frac1{\|w\|}\sum_{x_i \in M} y_i \cdot (w \cdot x_i + b) \\
（M 为误分类样本集）
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.7159em;vertical-align:-1.3944em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∥</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">∥</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8557em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3944em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">（</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord cjk_fallback">为误分类样本集）</span></span></span></span></span></p>
<p><mark>感知机并不关心误分类样本点到决策函数距离的大小</mark>，因此感知机的损失函数如下：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><munder><mo>∑</mo><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>∈</mo><mi>M</mi></mrow></munder><msub><mi>y</mi><mi>i</mi></msub><mo>⋅</mo><mo stretchy="false">(</mo><mi>w</mi><mo>⋅</mo><msub><mi>x</mi><mi>i</mi></msub><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mtext>（</mtext><mi>M</mi><mtext>为误分类样本集）</mtext></mrow><annotation encoding="application/x-tex">L(w, b) = -\sum_{x_i \in M} y_i \cdot (w \cdot x_i + b) \\
（M 为误分类样本集）
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4444em;vertical-align:-1.3944em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8557em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3944em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">（</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord cjk_fallback">为误分类样本集）</span></span></span></span></span></p>
<h3 id="14-logistic-回归">14. logistic 回归</h3>
<h4 id="14-1-logistic-回归">14.1 logistic 回归</h4>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>o</mi><mi>g</mi><mi>i</mi><mi>s</mi><mi>t</mi><mi>i</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">logistic</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">c</span></span></span></span> 回归属于二分类模型</li>
<li>与感知机直接输出类别 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[-1, 1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span> 不同，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>o</mi><mi>g</mi><mi>i</mi><mi>s</mi><mi>t</mi><mi>i</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">logistic</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">c</span></span></span></span>将输出映射到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>0.0</mn><mo separator="true">,</mo><mn>1.0</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[0.0, 1.0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0.0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1.0</span><span class="mclose">]</span></span></span></span> 之间，来表示样本属于某一类的可能性</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>o</mi><mi>g</mi><mi>i</mi><mi>s</mi><mi>t</mi><mi>i</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">logistic</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">c</span></span></span></span> 回归模型与感知机一样，包括以下两个模块：
<ul>
<li>线性部分</li>
<li>激活函数</li>
</ul>
</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>o</mi><mi>g</mi><mi>i</mi><mi>s</mi><mi>t</mi><mi>i</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">logistic</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">c</span></span></span></span> 回归采用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">sigmoid</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span></span></span></span> 函数作为激活函数：<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>σ</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>z</mi></mrow></msup></mrow></mfrac><mspace linebreak="newline"></mspace><mtext>（其中，</mtext><mi>z</mi><mtext>为</mtext><mi>l</mi><mi>o</mi><mi>g</mi><mi>i</mi><mi>s</mi><mi>t</mi><mi>i</mi><mi>c</mi><mtext>回归的线性部分）</mtext></mrow><annotation encoding="application/x-tex">\sigma(z)=\frac1{1 + e^{-z}} \\
（其中，z 为 logistic 回归的线性部分）
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0908em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6973em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord cjk_fallback">（其中，</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mord cjk_fallback">为</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">c</span><span class="mord cjk_fallback">回归的线性部分）</span></span></span></span></span></p>
</li>
</ul>
<h4 id="14-2-自信息（Self-Information）">14.2 自信息（Self Information）</h4>
<p>一个随机事件所包含的信息量。</p>
<p>对于一个随机变量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span> 来说，当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>=</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">X = x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 时的自信息 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">I(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> 定义为：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>I</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mi>log</mi><mo>⁡</mo><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">I(x) = -\log p(x)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></span></p>
<h4 id="14-3-熵">14.3 熵</h4>
<p>在信息论中，熵被用来衡量信息量的大小，或者说衡量随机事件的不确定性。</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mi>n</mi><mi>t</mi><mi>r</mi><mi>o</mi><mi>p</mi><mi>y</mi><mo>=</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>p</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>⋅</mo><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>2</mn></msub><mi>p</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Entropy = -\sum_{i=1}^{N}p(i) \cdot \log_2p(i)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ro</span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.106em;vertical-align:-1.2777em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.207em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span></span></p>
<h4 id="14-4-交叉熵">14.4 交叉熵</h4>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>o</mi><mi>g</mi><mi>i</mi><mi>s</mi><mi>t</mi><mi>i</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">logistic</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">c</span></span></span></span> 回归使用交叉熵作为损失函数。</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mi>n</mi><mi>t</mi><mi>r</mi><mi>o</mi><mi>p</mi><mi>y</mi><mo stretchy="false">(</mo><mi>p</mi><mo separator="true">,</mo><mi>q</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>p</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>⋅</mo><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>2</mn></msub><mi>q</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Entropy(p, q) = -\sum_{i=1}^{N}p(i) \cdot \log_2q(i)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ro</span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.106em;vertical-align:-1.2777em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.207em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span></span></p>
<blockquote>
<p>（p(i) 代表真实概率分布，q(i) 代表估计概率分布）</p>
</blockquote>
<p>交叉熵可以用来估计两个分布的相似性：两个分布越相似，交叉熵就越逼近于熵，交叉熵也就越小。</p>
<h4 id="14-5-KL-散度（Kullback-Leibler-Divergence）">14.5 KL 散度（Kullback-Leibler Divergence）</h4>
<p>KL 散度是用概率分布 q 来近似 p 时所造成的信息损失量。</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>K</mi><mi>L</mi><mo stretchy="false">(</mo><mi>p</mi><mo separator="true">,</mo><mi>q</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>H</mi><mo stretchy="false">(</mo><mi>p</mi><mo separator="true">,</mo><mi>q</mi><mo stretchy="false">)</mo><mo>−</mo><mi>H</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munder><mo>∑</mo><mi>x</mi></munder><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mfrac><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><mrow><mi>q</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
KL(p,q) &amp;= H(p, q) - H(p) \\
&amp;= \sum_xp(x)\log\frac{p(x)}{q(x)}
\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.477em;vertical-align:-1.9885em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.4885em;"><span style="top:-5.0755em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mclose">)</span></span></span><span style="top:-2.9885em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9885em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.4885em;"><span style="top:-5.0755em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span><span style="top:-2.9885em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9885em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<blockquote>
<p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>p</mi><mo separator="true">,</mo><mi>q</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(p, q)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mclose">)</span></span></span></span> 表示交叉熵，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span> 表示熵</p>
</blockquote>
<h4 id="14-6-交叉熵损失函数">14.6 交叉熵损失函数</h4>
<p>交叉熵损失函数通过衡量两分布间的差异来优化模型，逐渐趋近数据的真实分布。</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo>=</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>p</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>⋅</mo><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>2</mn></msub><mi>q</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L = -\sum_{i=1}^{N}p(i) \cdot \log_2q(i)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.106em;vertical-align:-1.2777em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.207em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span></span></p>
<blockquote>
<p>（其中 p(i) 表示样本的真实标签，q(i) 表示模型的预测结果）</p>
</blockquote>
<p>特别的，二分类任务的交叉熵损失函数如下：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mi>L</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>p</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>⋅</mo><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>2</mn></msub><mi>q</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo>−</mo><mi>p</mi><mo>⋅</mo><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>2</mn></msub><mi>q</mi><mo>−</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><mo stretchy="false">)</mo><mo>⋅</mo><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>2</mn></msub><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>q</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
L &amp;= -\sum_{i=1}^{N}p(i) \cdot \log_2q(i) \\
&amp;= -p \cdot \log_2q - (1 - p) \cdot \log_2(1 - q)
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.906em;vertical-align:-2.203em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.703em;"><span style="top:-4.703em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord mathnormal">L</span></span></span><span style="top:-2.2853em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.203em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.703em;"><span style="top:-4.703em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.207em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span><span style="top:-2.2853em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">−</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.207em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.207em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.203em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<h3 id="15-softmax-回归">15. softmax 回归</h3>
<h4 id="15-1-”一对多“方法">15.1 ”一对多“方法</h4>
<p>多分类问题可以被看作是多个二分类问题。</p>
<h4 id="15-2-softmax-回归">15.2 softmax 回归</h4>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">softmax</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">so</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span></span></span></span> 回归是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>o</mi><mi>g</mi><mi>i</mi><mi>s</mi><mi>t</mi><mi>i</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">logistic</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">c</span></span></span></span> 回归在多分类问题上的推广，也是一种线性分类模型。</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>o</mi><mi>g</mi><mi>i</mi><mi>s</mi><mi>t</mi><mi>i</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">logistic</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">c</span></span></span></span> 回归的输出只有一个值，表示样本属于正类的概率</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">softmax</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">so</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span></span></span></span> 回归的输出是多个值，表示样本属于对应类别的概率</li>
</ul>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">softmax</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">so</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span></span></span></span> 函数：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>s</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>n</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><msup><mi>e</mi><msub><mi>x</mi><mi>n</mi></msub></msup><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msup><mi>e</mi><msub><mi>x</mi><mi>i</mi></msub></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">softmax(x_n) = \frac{e^{x_n}}{\sum_{i=1}^Ne^{x_i}}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">so</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.5123em;vertical-align:-1.1709em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3414em;"><span style="top:-2.1288em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5904em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1709em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">softmax</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">so</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span></span></span></span> 回归：</p>
<img src="/posts/810a0813/softmax.png" class="">
<h4 id="15-3-one-hot-编码">15.3 one-hot 编码</h4>
<p>对于分类任务来说，各类别都应该是相互独立的，因此要将不同的标签表示为相互独立的数字，标签之间的距离相等。</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>o</mi><mi>n</mi><mi>e</mi><mo>−</mo><mi>h</mi><mi>o</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">one-hot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">h</span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span></span></span></span> 编码用二进制向量来表征离散的分类标签。</p>
<h4 id="15-4-多分类交叉熵损失函数">15.4 多分类交叉熵损失函数</h4>
<p>单样本损失函数：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>l</mi><mo>=</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msub><mi>y</mi><mi>i</mi></msub><mo>⋅</mo><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>2</mn></msub><msub><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>i</mi></msub><mspace linebreak="newline"></mspace><mtext>（其中</mtext><msub><mi>y</mi><mi>i</mi></msub><mtext>表示样本属于第</mtext><mi>i</mi><mtext>类的真实概率，</mtext><msub><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>i</mi></msub><mtext>表示样本属于第</mtext><mi>i</mi><mtext>类的模型预测概率）</mtext></mrow><annotation encoding="application/x-tex">l=-\sum_{i=1}^{N}y_i\cdot\log_2\hat{y}_i \\
（其中 y_i 表示样本属于第 i 类的真实概率，\hat{y}_i 表示样本属于第 i 类的模型预测概率）
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.106em;vertical-align:-1.2777em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9386em;vertical-align:-0.2441em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.207em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord cjk_fallback">（其中</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">表示样本属于第</span><span class="mord mathnormal">i</span><span class="mord cjk_fallback">类的真实概率，</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">表示样本属于第</span><span class="mord mathnormal">i</span><span class="mord cjk_fallback">类的模型预测概率）</span></span></span></span></span></p>
<p>多样本损失函数：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo>=</mo><mo>−</mo><mfrac><mn>1</mn><mi>T</mi></mfrac><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>T</mi></munderover><mo stretchy="false">(</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msubsup><mi>y</mi><mi>i</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msubsup><mo>⋅</mo><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>2</mn></msub><msubsup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>i</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msubsup><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mtext>（其中</mtext><mi>T</mi><mtext>为参与损失运算的样本个数）</mtext></mrow><annotation encoding="application/x-tex">L=-\frac1{T}\sum_{j=1}^T(\sum_{i=1}^{N}y_i^{(j)}\cdot\log_2\hat{y}_i^{(j)}) \\
（其中 T 为参与损失运算的样本个数）
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.2421em;vertical-align:-1.4138em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.3217em;vertical-align:-0.2769em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.207em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">（其中</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord cjk_fallback">为参与损失运算的样本个数）</span></span></span></span></span></p>
<h3 id="16-什么是神经网络">16. 什么是神经网络</h3>
<p>感知机异或门<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>（</mtext><mi>X</mi><mi>O</mi><mi>R</mi><mtext>）</mtext></mrow><annotation encoding="application/x-tex">（XOR）</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">（</span><span class="mord mathnormal" style="margin-right:0.00773em;">XOR</span><span class="mord cjk_fallback">）</span></span></span></span>问题</p>
<p>解决异或门这类非线性问题有两种思路：</p>
<ul>
<li>处理特征，如支持向量机</li>
<li>改进分类器</li>
</ul>
<p>多个神经元连接在一起，呈现出网状，就构成了神经网络。</p>
<ul>
<li>每个神经元都包含了加权运算和激活运算</li>
<li>箭头表示神经元之间数据的传输方向</li>
<li>每个连接线都对应一个权重</li>
</ul>
<p>输入的数据按照箭头走向，从输入层开始，经过每个神经元的运算得到输出，上一层神经元的输出再作为下一层神经元的输入，传输下去，直到输出层。</p>
<p>激活函数使得神经网络非线性化，并使其具备了分段表达能力。</p>
<h3 id="17-前向传播-反向传播">17. 前向传播 反向传播</h3>
<h4 id="17-1-神经网络的种类">17.1 神经网络的种类</h4>
<p>神经网络分为：</p>
<ul>
<li>前馈神经网络：信号从输入层向输出层单向传输的网络</li>
<li>循环神经网络（记忆网络）：信号除了向后续节点传输之外还会回传给自身的网络</li>
<li>图神经网络</li>
</ul>
<h4 id="17-2-前馈神经网络">17.2 前馈神经网络</h4>
<p>在前馈神经网络中，信号的传输分为两种：</p>
<ul>
<li>前向传播：将信号传入模型，经过一层层运算，得到输出</li>
<li>反向传播：从<mark>输出层</mark>往回传，用于训练过程中传输误差，从而优化模型参数</li>
</ul>
<h4 id="17-3-前向传播">17.3 前向传播</h4>
<p>输入值送入模型，经过层层计算得到输出。</p>
<h4 id="17-4-反向传播">17.4 反向传播</h4>
<p>全称为误差反向传播。</p>
<p>反向传播将损失的梯度<mark>从输出层往输入层</mark>的方向，一层层回传，从而更新每层权重参数。其本质上是采用链式法则，计算损失函数对所有参数的梯度。</p>
<p>链式法则求梯度。</p>
<h3 id="18-激活函数">18. 激活函数</h3>
<p>设计神经网络，需要考虑以下两个关键点：</p>
<ul>
<li>网络结构</li>
<li>激活函数</li>
</ul>
<h4 id="18-1-网络结构">18.1 网络结构</h4>
<p>网络结构包括网络层数以及每层神经元的个数。</p>
<ul>
<li>网络层数又叫网络深度</li>
<li>每层神经元的个数称为网络宽度</li>
</ul>
<p>随着网络深度的增加，模型能够拟合更复杂的函数，完成更复杂的任务。但同时也面临着运算量暴增、梯度消失和梯度爆炸等诸多问题。</p>
<p>激活函数的作用主要体现在前向激活和反向梯度回传两个方面。</p>
<h4 id="18-2-sigmoid-激活函数​">18.2 sigmoid 激活函数​</h4>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">sigmoid</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span></span></span></span> 函数曲线和导数曲线：</p>
<img src="/posts/810a0813/sigmoid.png" class="">
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">sigmoid</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span></span></span></span> 函数将输出值限制在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[0, 1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span> 之间。</p>
<blockquote>
<p><font color=blue>梯度饱和</font>：在反向传播过程中，激活函数的输出趋于平坦，导致梯度接近零或变得极大，从而引起训练问题。</p>
<ul>
<li>梯度饱和影响网络的收敛</li>
</ul>
<p><font color=blue>梯度消失</font>：在深度神经网络中，由于反向传播算法的限制，导致网络的梯度在传递过程中逐渐变小，最终趋近于零。</p>
<ul>
<li>使得网络无法更新参数，导致训练失败</li>
</ul>
<p><font color=red><strong>二者联系</strong>：梯度消失是在训练过程中出现的现象，梯度饱和是针对函数来说的。因为损失函数值落入了函数梯度饱和的区间，导致训练出现了梯度消失现象。</font></p>
</blockquote>
<img src="/posts/810a0813/bp.png" class="">
<p>由于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">sigmoid</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span></span></span></span> 函数的输出恒大于0，在训练时，关于权重 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的更新公式如下：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>w</mi><mi>i</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msubsup><mo>=</mo><msubsup><mi>w</mi><mi>i</mi><mi>t</mi></msubsup><mo>−</mo><mi>λ</mi><mo>⋅</mo><msub><mi>x</mi><mi>i</mi></msub><mo>⋅</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>f</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">w_i^{t+1} = w_i^t - \lambda \cdot x_i \cdot \frac{\partial L}{\partial f}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1311em;vertical-align:-0.267em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.433em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.267em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0906em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8436em;"><span style="top:-2.453em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">λ</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5945em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.2519em;vertical-align:-0.8804em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>对于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">w_0,w_1,w_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 来说，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>f</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial L}{\partial f}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3612em;vertical-align:-0.4811em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4811em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 的值是一样的，而 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是前一层神经元经过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">sigmoid</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span></span></span></span> 激活函数输出，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 都为正，最终使得<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>λ</mi><mo>⋅</mo><msub><mi>x</mi><mi>i</mi></msub><mo>⋅</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>f</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\lambda \cdot x_i \cdot \frac{\partial L}{\partial f}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">λ</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5945em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.3612em;vertical-align:-0.4811em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4811em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 的正负是一致的，也就是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的更新方向是一致的，从而导致模型的收敛速度减慢。</p>
<h4 id="18-3-tanh-激活函数​">18.3 tanh 激活函数​</h4>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mi>a</mi><mi>n</mi><mi>h</mi></mrow><annotation encoding="application/x-tex">tanh</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">anh</span></span></span></span> 函数又叫双曲正切函数，函数公式如下：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>tanh</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><msup><mi>e</mi><mi>x</mi></msup><mo>−</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>x</mi></mrow></msup></mrow><mrow><msup><mi>e</mi><mi>x</mi></msup><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>x</mi></mrow></msup></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}&amp;\\\tanh(x)&amp;=\frac{e^x-e^{-x}}{e^x+e^{-x}}\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.0177em;vertical-align:-1.7588em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.2588em;"><span style="top:-4.8672em;"><span class="pstrut" style="height:3.4483em;"></span><span class="mord"></span></span><span style="top:-2.7588em;"><span class="pstrut" style="height:3.4483em;"></span><span class="mord"><span class="mop">tanh</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.7588em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.2588em;"><span style="top:-4.8672em;"><span class="pstrut" style="height:3.4483em;"></span><span class="mord"><span class="mord"></span></span></span><span style="top:-2.7588em;"><span class="pstrut" style="height:3.4483em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4483em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5904em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6973em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7713em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.7588em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mi>a</mi><mi>n</mi><mi>h</mi></mrow><annotation encoding="application/x-tex">tanh</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">anh</span></span></span></span> 函数曲线和导数曲线：</p>
<img src="/posts/810a0813/tanh.png" class="">
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mi>a</mi><mi>n</mi><mi>h</mi></mrow><annotation encoding="application/x-tex">tanh</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">anh</span></span></span></span> 函数的输出值分布在 0 的两侧，可以有效解决 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">sigmoid</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span></span></span></span> 函数恒大于 0 带来的收敛慢的问题；</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mi>a</mi><mi>n</mi><mi>h</mi></mrow><annotation encoding="application/x-tex">tanh</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">anh</span></span></span></span> 函数依旧存在梯度饱和，还会出现梯度消失；</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mi>a</mi><mi>n</mi><mi>h</mi></mrow><annotation encoding="application/x-tex">tanh</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">anh</span></span></span></span> 函数和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">sigmoid</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span></span></span></span> 函数均含有幂运算，存在运算效率的问题</li>
</ul>
<h4 id="18-4-ReLU-激活函数">18.4 ReLU 激活函数</h4>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi></mrow><annotation encoding="application/x-tex">ReLU</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.10903em;">LU</span></span></span></span>​ 函数又叫线性整流函数，函数公式如下：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">ReLU(x) = max(0, x)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.10903em;">LU</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi></mrow><annotation encoding="application/x-tex">ReLU</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.10903em;">LU</span></span></span></span> 函数曲线和导数曲线：</p>
<img src="/posts/810a0813/ReLU.png" class="">
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi></mrow><annotation encoding="application/x-tex">ReLU</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.10903em;">LU</span></span></span></span>​ 函数解决了梯度消失和运算效率的问题。</p>
<p>根据权重更新公式：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>w</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>=</mo><msup><mi>w</mi><mi>t</mi></msup><mo>−</mo><mi>λ</mi><mi mathvariant="normal">Δ</mi><msup><mi>w</mi><mi>t</mi></msup><mspace linebreak="newline"></mspace><mtext>（</mtext><mi mathvariant="normal">Δ</mi><msup><mi>w</mi><mi>t</mi></msup><mtext>表示</mtext><mi>w</mi><mtext>的梯度）</mtext></mrow><annotation encoding="application/x-tex">w^{t+1} = w^t - \lambda\Delta w^t \\
（\Delta w^t 表示 w 的梯度）
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8641em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9269em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8436em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8436em;"></span><span class="mord mathnormal">λ</span><span class="mord">Δ</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8436em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8436em;"></span><span class="mord cjk_fallback">（</span><span class="mord">Δ</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8436em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span></span></span></span><span class="mord cjk_fallback">表示</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord cjk_fallback">的梯度）</span></span></span></span></span></p>
<p>当学习率过大时，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>λ</mi><mi mathvariant="normal">Δ</mi><msup><mi>w</mi><mi>t</mi></msup></mrow><annotation encoding="application/x-tex">\lambda\Delta w^t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7936em;"></span><span class="mord mathnormal">λ</span><span class="mord">Δ</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7936em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span></span></span></span></span></span></span> 有可能会大于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>w</mi><mi>t</mi></msup></mrow><annotation encoding="application/x-tex">w^t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7936em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7936em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>w</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">w^{t+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span> 就会变成负值。此时输入网络的正值会与权重相乘后也变为负值，负值经过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi></mrow><annotation encoding="application/x-tex">ReLU</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.10903em;">LU</span></span></span></span> 输出 0，对应的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi></mrow><annotation encoding="application/x-tex">ReLU</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.10903em;">LU</span></span></span></span> 导数也为 0，导致 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>λ</mi><mi mathvariant="normal">Δ</mi><msup><mi>w</mi><mi>t</mi></msup></mrow><annotation encoding="application/x-tex">\lambda\Delta w^t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7936em;"></span><span class="mord mathnormal">λ</span><span class="mord">Δ</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7936em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span></span></span></span></span></span></span> 为 0，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span> 得不到更新，一直为负，从而导致其神经元一直输出 0，永久失活。这种情况称为 <mark><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mi>e</mi><mi>a</mi><mi>d</mi><mtext> </mtext><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi></mrow><annotation encoding="application/x-tex">Dead \ ReLU</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">De</span><span class="mord mathnormal">a</span><span class="mord mathnormal">d</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.10903em;">LU</span></span></span></span>​</mark> 问题。</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi></mrow><annotation encoding="application/x-tex">ReLU</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.10903em;">LU</span></span></span></span> 函数和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">sigmoid</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span></span></span></span> 函数一样，输出值均为非负，从而造成在梯度更新缓慢。</p>
<h4 id="18-5-Leaky-ReLU-激活函数">18.5 Leaky \ ReLU 激活函数</h4>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi>e</mi><mi>a</mi><mi>k</mi><mi>y</mi><mtext> </mtext><mi>R</mi><mi>e</mi><mi>L</mi><mi>u</mi></mrow><annotation encoding="application/x-tex">Leaky \ ReLu</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.03148em;">ak</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">e</span><span class="mord mathnormal">Lu</span></span></span></span> 函数针对解决 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mi>e</mi><mi>a</mi><mi>d</mi><mtext> </mtext><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi></mrow><annotation encoding="application/x-tex">Dead \ ReLU</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">De</span><span class="mord mathnormal">a</span><span class="mord mathnormal">d</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.10903em;">LU</span></span></span></span>​ 问题，函数公式如下：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mi>e</mi><mi>a</mi><mi>k</mi><mi>y</mi><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="1em"/><mi>x</mi><mo>&gt;</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>α</mi><mi>x</mi><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="1em"/><mi>x</mi><mo>≤</mo><mn>0</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr></mtable></mrow><mspace linebreak="newline"></mspace><mtext>（</mtext><mi>α</mi><mtext>通常设为</mtext><mn>0.01</mn><mtext>）</mtext></mrow><annotation encoding="application/x-tex">LeakyReLU(x) = 
\begin{cases}
x, &amp;\quad x&gt;0\\
\alpha x, &amp;\quad x\leq0&amp;
\end{cases} \\
（\alpha 通常设为 0.01）
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.03148em;">ak</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.10903em;">LU</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mpunct">,</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">αx</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.25em;"><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">（</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord cjk_fallback">通常设为</span><span class="mord">0.01</span><span class="mord cjk_fallback">）</span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi>e</mi><mi>a</mi><mi>k</mi><mi>y</mi><mtext> </mtext><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi></mrow><annotation encoding="application/x-tex">Leaky \ ReLU</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.03148em;">ak</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.10903em;">LU</span></span></span></span> 函数曲线和导数曲线：</p>
<img src="/posts/810a0813/Leaky_ReLU.png" class="">
<ul>
<li>当输入值小于 0 时，函数值为一个很小的负值</li>
<li>同时梯度不为 0 而是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span></li>
</ul>
<p>针对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span> 的取值方法：</p>
<ul>
<li>随机 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi>e</mi><mi>a</mi><mi>k</mi><mi>y</mi><mtext> </mtext><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi></mrow><annotation encoding="application/x-tex">Leaky \ ReLU</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.03148em;">ak</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.10903em;">LU</span></span></span></span>：对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span> 随机取值，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span> 的分布需满足均值为 0、标准差为 1 的正态分布。
<ul>
<li>在一定程度上可以帮助参数跳出局部最优点，优化模型落入局部最优</li>
</ul>
</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mi>a</mi><mi>r</mi><mi>a</mi><mi>m</mi><mi>e</mi><mi>t</mi><mi>r</mi><mi>i</mi><mi>c</mi><mtext> </mtext><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi><mo stretchy="false">(</mo><mi>P</mi><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Parametric \ ReLU(PReLU)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">am</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">i</span><span class="mord mathnormal">c</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.10903em;">LU</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">PR</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.10903em;">LU</span><span class="mclose">)</span></span></span></span>：将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span> 作为需要学习的参数，在模型训练时一起优化，从而得到最优值。</li>
</ul>
<h4 id="18-6-ELU-激活函数">18.6 ELU 激活函数</h4>
<p>一个好的激活函数，从理论上应该满足两个条件：</p>
<ol>
<li>单侧饱和</li>
<li>输出值分布在 0 的两侧</li>
</ol>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi>e</mi><mi>a</mi><mi>k</mi><mi>y</mi><mtext> </mtext><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi></mrow><annotation encoding="application/x-tex">Leaky \ ReLU</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.03148em;">ak</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.10903em;">LU</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi></mrow><annotation encoding="application/x-tex">PReLU</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">PR</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.10903em;">LU</span></span></span></span> 满足第 2 个条件，不满足第 1 个条件；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi></mrow><annotation encoding="application/x-tex">ReLU</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.10903em;">LU</span></span></span></span>​ 满足第 1 个条件，不满足第 2 个条件。</p>
<p><mark><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mi>L</mi><mi>U</mi></mrow><annotation encoding="application/x-tex">ELU</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal" style="margin-right:0.10903em;">LU</span></span></span></span> 激活函数</mark>同时满足以上两个条件。</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mi>L</mi><mi>U</mi></mrow><annotation encoding="application/x-tex">ELU</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal" style="margin-right:0.10903em;">LU</span></span></span></span> 函数公式如下：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mi>L</mi><mi>U</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="1em"/><mi>x</mi><mo>&gt;</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>α</mi><mo stretchy="false">(</mo><msup><mi>e</mi><mi>x</mi></msup><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="1em"/><mi>x</mi><mo>≤</mo><mn>0</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">ELU(x) =
\begin{cases}
x, &amp;\quad x&gt;0 \\
\alpha(e^x-1), &amp;\quad x\leq0&amp;
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal" style="margin-right:0.10903em;">LU</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mpunct">,</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.25em;"><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mi>L</mi><mi>U</mi></mrow><annotation encoding="application/x-tex">ELU</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal" style="margin-right:0.10903em;">LU</span></span></span></span> 函数曲线和导数曲线：</p>
<img src="/posts/810a0813/ELU.png" class="">
<h4 id="18-7-Swish-激活函数">18.7 Swish 激活函数</h4>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mi>w</mi><mi>i</mi><mi>s</mi><mi>h</mi></mrow><annotation encoding="application/x-tex">Swish</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">Sw</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">h</span></span></span></span> 函数公式如下：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>S</mi><mi>w</mi><mi>i</mi><mi>s</mi><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>x</mi><mo>⋅</mo><mi>σ</mi><mo stretchy="false">(</mo><mi>β</mi><mo>⋅</mo><mi>x</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mtext>（</mtext><mi>σ</mi><mtext>表示</mtext><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi><mtext>函数，</mtext><mi>β</mi><mtext>是一个可调节的参数）</mtext></mrow><annotation encoding="application/x-tex">Swish(x) = x \cdot \sigma(\beta \cdot x) \\
（\sigma 表示 sigmoid 函数，\beta 是一个可调节的参数）
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">Sw</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4445em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord cjk_fallback">（</span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mord cjk_fallback">表示</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord cjk_fallback">函数，</span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mord cjk_fallback">是一个可调节的参数）</span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mi>w</mi><mi>i</mi><mi>s</mi><mi>h</mi></mrow><annotation encoding="application/x-tex">Swish</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">Sw</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">h</span></span></span></span> 函数曲线和导数曲线：</p>
<img src="/posts/810a0813/Swish.png" class="">
<ul>
<li>在正值区间内，随着输入信号值的增大，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">sigmoid</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span></span></span></span> 函数的取值逐渐趋近于 1, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mi>w</mi><mi>i</mi><mi>s</mi><mi>h</mi></mrow><annotation encoding="application/x-tex">Swish</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">Sw</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">h</span></span></span></span> 函数的输出值接近于输入值</li>
<li>在负值区间内，随着输入信号值的减小，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">sigmoid</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span></span></span></span> 函数的取值逐渐趋近于 0, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mi>w</mi><mi>i</mi><mi>s</mi><mi>h</mi></mrow><annotation encoding="application/x-tex">Swish</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">Sw</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">h</span></span></span></span> 函数的输出值接近于 0</li>
<li>在信号大于 0 时 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mi>w</mi><mi>i</mi><mi>s</mi><mi>h</mi></mrow><annotation encoding="application/x-tex">Swish</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">Sw</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">h</span></span></span></span> 被激活，小于 0 时失活</li>
</ul>
<h3 id="19-全连接神经网络的不足">19. 全连接神经网络的不足</h3>
<p>在前馈神经网络中，每个神经元都分别分别和上一层的所有神经元彼此连接，这样的网络层叫做全连接层；由全连接层构成的网络叫全连接神经网络，又叫多层感知机。</p>
<p>不足之处：</p>
<ul>
<li>参数量过大</li>
<li>只能获取全局信息，没有感知局部信息的能力</li>
</ul>
<p>CNN 的出现有效解决了参数量过大和缺乏局部感知能力两大难题。</p>
<h3 id="20-卷积-二维卷积">20. 卷积 二维卷积</h3>
<h4 id="20-1-卷积">20.1 卷积</h4>
<p>无记忆系统：系统的输出只和当前输入有关，与历史输入无关。可表示为：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>y</mi><mi>t</mi></msub><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>t</mi></msub><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mtext>（其中</mtext><msub><mi>x</mi><mi>t</mi></msub><mtext>表示</mtext><mi>t</mi><mtext>时刻的输入信号，</mtext><msub><mi>y</mi><mi>t</mi></msub><mtext>表示</mtext><mi>t</mi><mtext>时刻的输出信号）</mtext></mrow><annotation encoding="application/x-tex">y_t = f(x_t) \\
（其中 x_t 表示 t 时刻的输入信号，y_t 表示 t 时刻的输出信号）
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord cjk_fallback">（其中</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">表示</span><span class="mord mathnormal">t</span><span class="mord cjk_fallback">时刻的输入信号，</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">表示</span><span class="mord mathnormal">t</span><span class="mord cjk_fallback">时刻的输出信号）</span></span></span></span></span></p>
<p>记忆系统：系统的输出受到当前输入与历史输入的影响。</p>
<p>系统输出需要满足两个条件：</p>
<ol>
<li>线性：指输入和输出是线性的，成比例关系</li>
<li>时不变：指不同时刻相同的输入得到的输出也应该相同</li>
</ol>
<p>在记忆系统中，当前时刻的输出不只是由当前输入来决定，而是截止到当前为止的所有输入信号的响应总和。</p>
<p>离散卷积：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right" columnspacing=""><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>y</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>g</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mrow><mo>+</mo><mi mathvariant="normal">∞</mi></mrow></munderover><mi>f</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>⋅</mo><mi>g</mi><mo stretchy="false">(</mo><mi>t</mi><mo>−</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mtext>（其中</mtext><mo>∗</mo><mtext>表示卷积运算）</mtext></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
y(t) = f(t) * g(t) = \sum_{i=-\infty}^{+\infty}f(i) \cdot g(t- i) \\
（其中 * 表示卷积运算）
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.8943em;vertical-align:-2.1972em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6972em;"><span style="top:-4.6972em;"><span class="pstrut" style="height:3.7583em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7583em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span><span style="top:-2.2212em;"><span class="pstrut" style="height:3.7583em;"></span><span class="mord"><span class="mord cjk_fallback">（其中</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord cjk_fallback">表示卷积运算）</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1972em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>连续卷积：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>y</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mrow><mo>+</mo><mi mathvariant="normal">∞</mi></mrow></msubsup><mi>f</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>⋅</mo><mi>g</mi><mo stretchy="false">(</mo><mi>t</mi><mo>−</mo><mi>i</mi><mo stretchy="false">)</mo><mi>d</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">y(t) = \int_{-\infty}^{+\infty}f(i) \cdot g(t-i)di
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4915em;vertical-align:-0.9703em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5212em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9703em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span></span></span></span></span></p>
<h4 id="20-2-二维卷积">20.2 二维卷积</h4>
<p>二维离散卷积：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>y</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>g</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mi>m</mi></munder><munder><mo>∑</mo><mi>n</mi></munder><mi>f</mi><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo><mo>⋅</mo><mi>g</mi><mo stretchy="false">(</mo><mi>i</mi><mo>−</mo><mi>m</mi><mo separator="true">,</mo><mi>j</mi><mo>−</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y(i, j) = f(i, j) * g(i,j) = \sum_m\sum_nf(m,n) \cdot g(i - m, j - n)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3em;vertical-align:-1.25em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></span></p>
<p>互相关操作（省略翻转操作）：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>y</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mi>m</mi></munder><munder><mo>∑</mo><mi>n</mi></munder><mi>f</mi><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo><mo>⋅</mo><mi>g</mi><mo stretchy="false">(</mo><mi>i</mi><mo>+</mo><mi>m</mi><mo separator="true">,</mo><mi>j</mi><mo>+</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y(i, j) = \sum_m\sum_nf(m,n) \cdot g(i + m, j + n)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3em;vertical-align:-1.25em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></span></p>
<p>由卷积核构成的神经网络就是卷积神经网络。</p>
<h3 id="21-卷积运算过程（单通道-多通道-多卷积核）">21. 卷积运算过程（单通道 多通道 多卷积核）</h3>
<h4 id="21-1-单通道数据的二维卷积">21.1 单通道数据的二维卷积</h4>
<p>卷积运算过程：卷积核从左上角开始，不断向右滑动，直到一行滑动结束，再下移，从新一行起始位置开始，继续滑动，直到滑动到最后一行的最后一列，最终得到一个二维的输出矩阵。</p>
<ul>
<li>输出为 feature map</li>
<li>卷积核中的参数叫做权重</li>
<li>卷积核每次移动的单位长度叫做步长
<ul>
<li>在卷积神经网络中，步长（stride）作为一个超参数，需要在设计卷积层时手动设定</li>
<li>步长的大小直接影响卷积的结果和输出的尺寸，从而影响特征提取的效果和运算量</li>
</ul>
</li>
</ul>
<p>卷积操作后输出的 map 尺寸要小于输入尺寸，在连续进行几次卷积后，当输出变为 1 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>×</mo></mrow><annotation encoding="application/x-tex">\times</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">×</span></span></span></span> 1 时，就无法继续进行卷积运算，从而难以构建足够深的神经网络；此外，卷积运算没有充分利用边缘信息。<mark>填充操作 padding</mark>可以解决这些问题。</p>
<p>卷积输出尺寸的计算公式：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>w</mi><mrow><mi>o</mi><mi>u</mi><mi>t</mi></mrow></msub><mo>=</mo><mi>f</mi><mi>l</mi><mi>o</mi><mi>o</mi><mi>r</mi><mo stretchy="false">(</mo><mfrac><mrow><msub><mi>w</mi><mrow><mi>i</mi><mi>n</mi></mrow></msub><mo>+</mo><mn>2</mn><mo>×</mo><mi>p</mi><mi>a</mi><mi>d</mi><mi>d</mi><mi>i</mi><mi>n</mi><mi>g</mi><mo>−</mo><mi>F</mi></mrow><mrow><mi>s</mi><mi>t</mi><mi>r</mi><mi>i</mi><mi>d</mi><mi>e</mi></mrow></mfrac><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn><mspace linebreak="newline"></mspace><mtext>（</mtext><msub><mi>w</mi><mrow><mi>o</mi><mi>u</mi><mi>t</mi></mrow></msub><mtext>表示输出尺寸，</mtext><msub><mi>w</mi><mrow><mi>i</mi><mi>n</mi></mrow></msub><mtext>表示输入尺寸，</mtext><mi>p</mi><mi>a</mi><mi>d</mi><mi>d</mi><mi>i</mi><mi>n</mi><mi>g</mi><mtext>表示填充个数，</mtext><mi>F</mi><mtext>表示卷积核大小，</mtext><mi>s</mi><mi>t</mi><mi>r</mi><mi>i</mi><mi>d</mi><mi>e</mi><mtext>表示步长，</mtext><mi>f</mi><mi>l</mi><mi>o</mi><mi>o</mi><mi>r</mi><mtext>表示下取整）</mtext></mrow><annotation encoding="application/x-tex">w_{out} = floor(\frac{w_{in} + 2 \times padding - F}{stride}) + 1 \\
（w_{out} 表示输出尺寸，w_{in} 表示输入尺寸，padding 表示填充个数，F 表示卷积核大小，stride 表示步长，floor 表示下取整）
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal" style="margin-right:0.02778em;">oor</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">in</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal">dd</span><span class="mord mathnormal">in</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord cjk_fallback">（</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">表示输出尺寸，</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">in</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">表示输入尺寸，</span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal">dd</span><span class="mord mathnormal">in</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord cjk_fallback">表示填充个数，</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord cjk_fallback">表示卷积核大小，</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mord cjk_fallback">表示步长，</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal" style="margin-right:0.02778em;">oor</span><span class="mord cjk_fallback">表示下取整）</span></span></span></span></span></p>
<h4 id="21-2-多通道数据的卷积运算">21.2 多通道数据的卷积运算</h4>
<p>多通道的卷积操作与单通道的类似，只是在构造卷积核时需要注意：<mark>卷积核的通道个数要和输入数据的通道个数相同</mark>，此时二者才能进行互相关运算。卷积的结果为所有通道对应位置的卷积和，最终的输出仍是一个二维的特征图。</p>
<h4 id="21-3-多卷积核的卷积运算">21.3 多卷积核的卷积运算</h4>
<p>在实际的卷积网络中，每一层都有多个卷积核参与运算，每个卷积核分别与输入卷积，得到一个单通道的输出，最后多个单通道的输出拼在一起就变成了多通道的输出。</p>
<ul>
<li>卷积核又叫 filter 滤波器。</li>
<li>多个卷积核叠加，就构成了卷积层。</li>
<li>卷积层的参数包括卷积核的大小，数量以及步长等。</li>
<li>卷积核的权重参数可以通过训练进行优化，让卷积层更好地提取输入数据中的特征。</li>
<li>卷积层、池化层、全连接层等网络层，多层叠加，构成卷积神经网络。</li>
</ul>
]]></content>
      <categories>
        <category>NLP</category>
        <category>深度学习</category>
      </categories>
  </entry>
  <entry>
    <title>范式</title>
    <url>/posts/5a711144/</url>
    <content><![CDATA[<h3 id="1NF">1NF</h3>
<p>若关系模式 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi></mrow><annotation encoding="application/x-tex">R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span> 的每一个分量都是不可再分的数据项，则关系模式 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi></mrow><annotation encoding="application/x-tex">R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span> 属于第一范式（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mi>N</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">1NF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">1</span><span class="mord mathnormal" style="margin-right:0.13889em;">NF</span></span></span></span>）。</p>
<h3 id="2NF">2NF</h3>
<p>若关系模式 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo>∈</mo><mn>1</mn><mi>N</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">R\in1NF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">1</span><span class="mord mathnormal" style="margin-right:0.13889em;">NF</span></span></span></span>，且每一个<mark>非主属性</mark>完全依赖于主键，则关系模式 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo>∈</mo><mn>2</mn><mi>N</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">R\in2NF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.13889em;">NF</span></span></span></span>。</p>
<blockquote>
<p>换句话说，当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mi>N</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">1NF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">1</span><span class="mord mathnormal" style="margin-right:0.13889em;">NF</span></span></span></span> 消除了<mark>非主属性</mark>对码的部分函数依赖，则称为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>N</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">2NF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.13889em;">NF</span></span></span></span>。</p>
</blockquote>
<h3 id="3NF">3NF</h3>
<p>若关系模式 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo stretchy="false">(</mo><mi>U</mi><mo separator="true">,</mo><mi>F</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R(U,F)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mclose">)</span></span></span></span> 中不存在这样的码 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span>、属性组 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span> 及非主属性 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Z</mi></mrow><annotation encoding="application/x-tex">Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span>（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Z</mi></mrow><annotation encoding="application/x-tex">Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span> 不属于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span>)，使得 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X \to Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi><mo>↛</mo><mi>X</mi></mrow><annotation encoding="application/x-tex">Y \nrightarrow X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">↛</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi><mo>→</mo><mi>Z</mi></mrow><annotation encoding="application/x-tex">Y \to Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span> 成立，则称关系模式 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo>∈</mo><mn>3</mn><mi>N</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">R\in3NF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">3</span><span class="mord mathnormal" style="margin-right:0.13889em;">NF</span></span></span></span>。</p>
<blockquote>
<p>换句话说，当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>N</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">2NF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.13889em;">NF</span></span></span></span> 消除了<mark>非主属性</mark>对码的传递函数依赖，则称为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mi>N</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">3NF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">3</span><span class="mord mathnormal" style="margin-right:0.13889em;">NF</span></span></span></span>。</p>
</blockquote>
<h3 id="BCNF">BCNF</h3>
<p>若关系模式 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo>∈</mo><mn>1</mn><mi>N</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">R\in1NF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">1</span><span class="mord mathnormal" style="margin-right:0.13889em;">NF</span></span></span></span>，若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X \to Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span>，且 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span> 属于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span> 必含有码，则关系模式 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo>∈</mo><mi>B</mi><mi>C</mi><mi>N</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">R \in BCNF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">BCNF</span></span></span></span>。</p>
<blockquote>
<p>换句话说，当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mi>N</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">3NF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">3</span><span class="mord mathnormal" style="margin-right:0.13889em;">NF</span></span></span></span> 消除了<mark>主属性</mark>对码的部分和传递函数依赖，则称为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mi>C</mi><mi>N</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">BCNF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">BCNF</span></span></span></span>。</p>
</blockquote>
<p>Tip:</p>
<ol>
<li>
<p>当1个关系模式中主键由2个及以上的属性组成时，非主属性只依赖于其中1个主属性，就是<font color=blue>部分函数依赖</font>。</p>
</li>
<li>
<p>当关系模式中，出现非主属性决定非主属性时，就是<font color=blue>传递函数依赖</font>。</p>
</li>
</ol>
<p>参考资料：</p>
<blockquote>
<p><a href="https://blog.csdn.net/yx1166/article/details/120301365">数据库部分函数依赖、传递函数依赖的区别以及范式判断</a></p>
</blockquote>
]]></content>
      <categories>
        <category>SQL</category>
      </categories>
  </entry>
</search>
